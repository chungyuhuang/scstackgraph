.code
  PUSH 60			contract Wallet is multisig, m...
  PUSH 40			contract Wallet is multisig, m...
  MSTORE 			contract Wallet is multisig, m...
  CALLVALUE 			function Wallet(address[] _own...
  ISZERO 			function Wallet(address[] _own...
  PUSH [tag] 1			function Wallet(address[] _own...
  JUMPI 			function Wallet(address[] _own...
  PUSH 0			function Wallet(address[] _own...
  DUP1 			function Wallet(address[] _own...
  REVERT 			function Wallet(address[] _own...
tag 1			function Wallet(address[] _own...
  JUMPDEST 			function Wallet(address[] _own...
  PUSH 40			function Wallet(address[] _own...
  MLOAD 			function Wallet(address[] _own...
  PUSHSIZE 			function Wallet(address[] _own...
  CODESIZE 			function Wallet(address[] _own...
  SUB 			function Wallet(address[] _own...
  DUP1 			function Wallet(address[] _own...
  PUSHSIZE 			function Wallet(address[] _own...
  DUP4 			function Wallet(address[] _own...
  CODECOPY 			function Wallet(address[] _own...
  DUP2 			function Wallet(address[] _own...
  ADD 			function Wallet(address[] _own...
  PUSH 40			function Wallet(address[] _own...
  MSTORE 			function Wallet(address[] _own...
  DUP1 			function Wallet(address[] _own...
  DUP1 			function Wallet(address[] _own...
  MLOAD 			function Wallet(address[] _own...
  DUP3 			function Wallet(address[] _own...
  ADD 			function Wallet(address[] _own...
  SWAP2 			function Wallet(address[] _own...
  SWAP1 			function Wallet(address[] _own...
  PUSH 20			function Wallet(address[] _own...
  ADD 			function Wallet(address[] _own...
  DUP1 			function Wallet(address[] _own...
  MLOAD 			function Wallet(address[] _own...
  SWAP1 			function Wallet(address[] _own...
  PUSH 20			function Wallet(address[] _own...
  ADD 			function Wallet(address[] _own...
  SWAP1 			function Wallet(address[] _own...
  SWAP2 			function Wallet(address[] _own...
  SWAP1 			function Wallet(address[] _own...
  DUP1 			function Wallet(address[] _own...
  MLOAD 			function Wallet(address[] _own...
  SWAP1 			function Wallet(address[] _own...
  PUSH 20			function Wallet(address[] _own...
  ADD 			function Wallet(address[] _own...
  SWAP1 			function Wallet(address[] _own...
  SWAP2 			function Wallet(address[] _own...
  SWAP1 			function Wallet(address[] _own...
  POP 			function Wallet(address[] _own...
  POP 			function Wallet(address[] _own...
  DUP1 			_daylimit
  DUP4 			_owners
  DUP4 			_required
  PUSH 0			uint i
  DUP1 			0
  DUP3 			_required
  GT 			_required > 0
  ISZERO 			require(_required > 0)
  ISZERO 			require(_required > 0)
  PUSH [tag] 6			require(_required > 0)
  JUMPI 			require(_required > 0)
  PUSH 0			require(_required > 0)
  DUP1 			require(_required > 0)
  REVERT 			require(_required > 0)
tag 6			require(_required > 0)
  JUMPDEST 			require(_required > 0)
  DUP2 			_required
  DUP4 			_owners
  MLOAD 			_owners.length
  LT 			_owners.length >= _required
  ISZERO 			_owners.length >= _required
  ISZERO 			require(_owners.length >= _req...
  ISZERO 			require(_owners.length >= _req...
  PUSH [tag] 7			require(_owners.length >= _req...
  JUMPI 			require(_owners.length >= _req...
  PUSH 0			require(_owners.length >= _req...
  DUP1 			require(_owners.length >= _req...
  REVERT 			require(_owners.length >= _req...
tag 7			require(_owners.length >= _req...
  JUMPDEST 			require(_owners.length >= _req...
  DUP3 			_owners
  MLOAD 			_owners.length
  PUSH 1			m_numOwners
  DUP2 			m_numOwners = _owners.length
  SWAP1 			m_numOwners = _owners.length
  SSTORE 			m_numOwners = _owners.length
  POP 			m_numOwners = _owners.length
  PUSH 0			0
  SWAP1 			uint i = 0
  POP 			uint i = 0
tag 8			for (uint i = 0; i < _owners.l...
  JUMPDEST 			for (uint i = 0; i < _owners.l...
  DUP3 			_owners
  MLOAD 			_owners.length
  DUP2 			i
  LT 			i < _owners.length
  ISZERO 			for (uint i = 0; i < _owners.l...
  PUSH [tag] 9			for (uint i = 0; i < _owners.l...
  JUMPI 			for (uint i = 0; i < _owners.l...
  DUP3 			_owners
  DUP2 			i
  DUP2 			_owners[i]
  MLOAD 			_owners[i]
  DUP2 			_owners[i]
  LT 			_owners[i]
  ISZERO 			_owners[i]
  ISZERO 			_owners[i]
  PUSH [tag] 11			_owners[i]
  JUMPI 			_owners[i]
  INVALID 			_owners[i]
tag 11			_owners[i]
  JUMPDEST 			_owners[i]
  SWAP1 			_owners[i]
  PUSH 20			_owners[i]
  ADD 			_owners[i]
  SWAP1 			_owners[i]
  PUSH 20			_owners[i]
  MUL 			_owners[i]
  ADD 			_owners[i]
  MLOAD 			_owners[i]
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			uint(_owners[i])
  AND 			uint(_owners[i])
  PUSH 2			m_owners
  DUP3 			i
  PUSH 1			1
  ADD 			1 + i
  PUSH 100			m_owners[1 + i]
  DUP2 			m_owners[1 + i]
  LT 			m_owners[1 + i]
  ISZERO 			m_owners[1 + i]
  ISZERO 			m_owners[1 + i]
  PUSH [tag] 12			m_owners[1 + i]
  JUMPI 			m_owners[1 + i]
  INVALID 			m_owners[1 + i]
tag 12			m_owners[1 + i]
  JUMPDEST 			m_owners[1 + i]
  ADD 			m_owners[1 + i]
  DUP2 			m_owners[1 + i] = uint(_owners...
  SWAP1 			m_owners[1 + i] = uint(_owners...
  SSTORE 			m_owners[1 + i] = uint(_owners...
  POP 			m_owners[1 + i] = uint(_owners...
  DUP1 			i
  PUSH 1			1
  ADD 			1 + i
  PUSH 102			m_ownerIndex
  PUSH 0			m_ownerIndex[uint(_owners[i])]
  DUP6 			_owners
  DUP5 			i
  DUP2 			_owners[i]
  MLOAD 			_owners[i]
  DUP2 			_owners[i]
  LT 			_owners[i]
  ISZERO 			_owners[i]
  ISZERO 			_owners[i]
  PUSH [tag] 14			_owners[i]
  JUMPI 			_owners[i]
  INVALID 			_owners[i]
tag 14			_owners[i]
  JUMPDEST 			_owners[i]
  SWAP1 			_owners[i]
  PUSH 20			_owners[i]
  ADD 			_owners[i]
  SWAP1 			_owners[i]
  PUSH 20			_owners[i]
  MUL 			_owners[i]
  ADD 			_owners[i]
  MLOAD 			_owners[i]
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			uint(_owners[i])
  AND 			uint(_owners[i])
  DUP2 			m_ownerIndex[uint(_owners[i])]
  MSTORE 			m_ownerIndex[uint(_owners[i])]
  PUSH 20			m_ownerIndex[uint(_owners[i])]
  ADD 			m_ownerIndex[uint(_owners[i])]
  SWAP1 			m_ownerIndex[uint(_owners[i])]
  DUP2 			m_ownerIndex[uint(_owners[i])]
  MSTORE 			m_ownerIndex[uint(_owners[i])]
  PUSH 20			m_ownerIndex[uint(_owners[i])]
  ADD 			m_ownerIndex[uint(_owners[i])]
  PUSH 0			m_ownerIndex[uint(_owners[i])]
  KECCAK256 			m_ownerIndex[uint(_owners[i])]
  DUP2 			m_ownerIndex[uint(_owners[i])]...
  SWAP1 			m_ownerIndex[uint(_owners[i])]...
  SSTORE 			m_ownerIndex[uint(_owners[i])]...
  POP 			m_ownerIndex[uint(_owners[i])]...
  DUP1 			++i
  PUSH 1			++i
  ADD 			++i
  SWAP1 			++i
  POP 			++i
  PUSH [tag] 8			for (uint i = 0; i < _owners.l...
  JUMP 			for (uint i = 0; i < _owners.l...
tag 9			for (uint i = 0; i < _owners.l...
  JUMPDEST 			for (uint i = 0; i < _owners.l...
  DUP2 			_required
  PUSH 0			m_required
  DUP2 			m_required = _required
  SWAP1 			m_required = _required
  SSTORE 			m_required = _required
  POP 			m_required = _required
  POP 			function multiowned(address[] ...
  POP 			function multiowned(address[] ...
  POP 			function multiowned(address[] ...
  DUP1 			_limit
  PUSH 105			m_dailyLimit
  DUP2 			m_dailyLimit = _limit
  SWAP1 			m_dailyLimit = _limit
  SSTORE 			m_dailyLimit = _limit
  POP 			m_dailyLimit = _limit
  PUSH [tag] 16			today()
  PUSH [tag] 17			today
  PUSH 100000000			today
  MUL 			today
  PUSH [tag] 18446744073709551857			today
  OR 			today
  PUSH 100000000			today()
  SWAP1 			today()
  DIV 			today()
  JUMP [in]			today()
tag 16			today()
  JUMPDEST 			today()
  PUSH 107			m_lastDay
  DUP2 			m_lastDay = today()
  SWAP1 			m_lastDay = today()
  SSTORE 			m_lastDay = today()
  POP 			m_lastDay = today()
  POP 			function daylimit(uint _limit)...
  POP 			function Wallet(address[] _own...
  POP 			function Wallet(address[] _own...
  POP 			function Wallet(address[] _own...
  PUSH [tag] 19			contract Wallet is multisig, m...
  JUMP 			contract Wallet is multisig, m...
tag 17			function today() private const...
  JUMPDEST 			function today() private const...
  PUSH 0			uint
  PUSH 15180			1 days
  TIMESTAMP 			now
  DUP2 			now / 1 days
  ISZERO 			now / 1 days
  ISZERO 			now / 1 days
  PUSH [tag] 21			now / 1 days
  JUMPI 			now / 1 days
  INVALID 			now / 1 days
tag 21			now / 1 days
  JUMPDEST 			now / 1 days
  DIV 			now / 1 days
  SWAP1 			return now / 1 days
  POP 			return now / 1 days
  SWAP1 			function today() private const...
  JUMP [out]			function today() private const...
tag 19			contract Wallet is multisig, m...
  JUMPDEST 			contract Wallet is multisig, m...
  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000			contract Wallet is multisig, m...
  DUP1 			contract Wallet is multisig, m...
  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000			contract Wallet is multisig, m...
  PUSH 0			contract Wallet is multisig, m...
  CODECOPY 			contract Wallet is multisig, m...
  PUSH 0			contract Wallet is multisig, m...
  RETURN 			contract Wallet is multisig, m...
.data
  0:
    .code
      PUSH 60			contract Wallet is multisig, m...
      PUSH 40			contract Wallet is multisig, m...
      MSTORE 			contract Wallet is multisig, m...
      PUSH 4			contract Wallet is multisig, m...
      CALLDATASIZE 			contract Wallet is multisig, m...
      LT 			contract Wallet is multisig, m...
      PUSH [tag] 1			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      PUSH 0			contract Wallet is multisig, m...
      CALLDATALOAD 			contract Wallet is multisig, m...
      PUSH 100000000000000000000000000000000000000000000000000000000			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      DIV 			contract Wallet is multisig, m...
      PUSH FFFFFFFF			contract Wallet is multisig, m...
      AND 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH 173825D9			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 2			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH 2F54BF6E			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 3			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH 4123CB6B			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 4			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH 52375093			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 5			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH 5C52C2F5			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 6			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH 659010E7			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 7			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH 7065CB48			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 8			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH 746C9171			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 9			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH 797AF627			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 10			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH B20D30A9			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 11			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH B61D27F6			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 12			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH B75C7DC6			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 13			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH BA51A6DF			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 14			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH C2CF7326			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 15			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH C41A360A			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 16			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH CBF0B0C0			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 17			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH F00D4B5D			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 18			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH F1736D86			contract Wallet is multisig, m...
      EQ 			contract Wallet is multisig, m...
      PUSH [tag] 19			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
    tag 1			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      PUSH 0			0
      CALLVALUE 			msg.value
      GT 			msg.value > 0
      ISZERO 			if (msg.value > 0)\n			Deposit...
      PUSH [tag] 22			if (msg.value > 0)\n			Deposit...
      JUMPI 			if (msg.value > 0)\n			Deposit...
      PUSH E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C			Deposit(msg.sender, msg.value)
      CALLER 			msg.sender
      CALLVALUE 			msg.value
      PUSH 40			Deposit(msg.sender, msg.value)
      MLOAD 			Deposit(msg.sender, msg.value)
      DUP1 			Deposit(msg.sender, msg.value)
      DUP4 			Deposit(msg.sender, msg.value)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Deposit(msg.sender, msg.value)
      AND 			Deposit(msg.sender, msg.value)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Deposit(msg.sender, msg.value)
      AND 			Deposit(msg.sender, msg.value)
      DUP2 			Deposit(msg.sender, msg.value)
      MSTORE 			Deposit(msg.sender, msg.value)
      PUSH 20			Deposit(msg.sender, msg.value)
      ADD 			Deposit(msg.sender, msg.value)
      DUP3 			Deposit(msg.sender, msg.value)
      DUP2 			Deposit(msg.sender, msg.value)
      MSTORE 			Deposit(msg.sender, msg.value)
      PUSH 20			Deposit(msg.sender, msg.value)
      ADD 			Deposit(msg.sender, msg.value)
      SWAP3 			Deposit(msg.sender, msg.value)
      POP 			Deposit(msg.sender, msg.value)
      POP 			Deposit(msg.sender, msg.value)
      POP 			Deposit(msg.sender, msg.value)
      PUSH 40			Deposit(msg.sender, msg.value)
      MLOAD 			Deposit(msg.sender, msg.value)
      DUP1 			Deposit(msg.sender, msg.value)
      SWAP2 			Deposit(msg.sender, msg.value)
      SUB 			Deposit(msg.sender, msg.value)
      SWAP1 			Deposit(msg.sender, msg.value)
      LOG1 			Deposit(msg.sender, msg.value)
    tag 22			if (msg.value > 0)\n			Deposit...
      JUMPDEST 			if (msg.value > 0)\n			Deposit...
      STOP 			contract Wallet is multisig, m...
    tag 2			function removeOwner(address _...
      JUMPDEST 			function removeOwner(address _...
      CALLVALUE 			function removeOwner(address _...
      ISZERO 			function removeOwner(address _...
      PUSH [tag] 23			function removeOwner(address _...
      JUMPI 			function removeOwner(address _...
      PUSH 0			function removeOwner(address _...
      DUP1 			function removeOwner(address _...
      REVERT 			function removeOwner(address _...
    tag 23			function removeOwner(address _...
      JUMPDEST 			function removeOwner(address _...
      PUSH [tag] 24			function removeOwner(address _...
      PUSH 4			function removeOwner(address _...
      DUP1 			function removeOwner(address _...
      DUP1 			function removeOwner(address _...
      CALLDATALOAD 			function removeOwner(address _...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function removeOwner(address _...
      AND 			function removeOwner(address _...
      SWAP1 			function removeOwner(address _...
      PUSH 20			function removeOwner(address _...
      ADD 			function removeOwner(address _...
      SWAP1 			function removeOwner(address _...
      SWAP2 			function removeOwner(address _...
      SWAP1 			function removeOwner(address _...
      POP 			function removeOwner(address _...
      POP 			function removeOwner(address _...
      PUSH [tag] 25			function removeOwner(address _...
      JUMP 			function removeOwner(address _...
    tag 24			function removeOwner(address _...
      JUMPDEST 			function removeOwner(address _...
      STOP 			function removeOwner(address _...
    tag 3			function isOwner(address _addr...
      JUMPDEST 			function isOwner(address _addr...
      CALLVALUE 			function isOwner(address _addr...
      ISZERO 			function isOwner(address _addr...
      PUSH [tag] 26			function isOwner(address _addr...
      JUMPI 			function isOwner(address _addr...
      PUSH 0			function isOwner(address _addr...
      DUP1 			function isOwner(address _addr...
      REVERT 			function isOwner(address _addr...
    tag 26			function isOwner(address _addr...
      JUMPDEST 			function isOwner(address _addr...
      PUSH [tag] 27			function isOwner(address _addr...
      PUSH 4			function isOwner(address _addr...
      DUP1 			function isOwner(address _addr...
      DUP1 			function isOwner(address _addr...
      CALLDATALOAD 			function isOwner(address _addr...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function isOwner(address _addr...
      AND 			function isOwner(address _addr...
      SWAP1 			function isOwner(address _addr...
      PUSH 20			function isOwner(address _addr...
      ADD 			function isOwner(address _addr...
      SWAP1 			function isOwner(address _addr...
      SWAP2 			function isOwner(address _addr...
      SWAP1 			function isOwner(address _addr...
      POP 			function isOwner(address _addr...
      POP 			function isOwner(address _addr...
      PUSH [tag] 28			function isOwner(address _addr...
      JUMP 			function isOwner(address _addr...
    tag 27			function isOwner(address _addr...
      JUMPDEST 			function isOwner(address _addr...
      PUSH 40			function isOwner(address _addr...
      MLOAD 			function isOwner(address _addr...
      DUP1 			function isOwner(address _addr...
      DUP3 			function isOwner(address _addr...
      ISZERO 			function isOwner(address _addr...
      ISZERO 			function isOwner(address _addr...
      ISZERO 			function isOwner(address _addr...
      ISZERO 			function isOwner(address _addr...
      DUP2 			function isOwner(address _addr...
      MSTORE 			function isOwner(address _addr...
      PUSH 20			function isOwner(address _addr...
      ADD 			function isOwner(address _addr...
      SWAP2 			function isOwner(address _addr...
      POP 			function isOwner(address _addr...
      POP 			function isOwner(address _addr...
      PUSH 40			function isOwner(address _addr...
      MLOAD 			function isOwner(address _addr...
      DUP1 			function isOwner(address _addr...
      SWAP2 			function isOwner(address _addr...
      SUB 			function isOwner(address _addr...
      SWAP1 			function isOwner(address _addr...
      RETURN 			function isOwner(address _addr...
    tag 4			uint public m_numOwners
      JUMPDEST 			uint public m_numOwners
      CALLVALUE 			uint public m_numOwners
      ISZERO 			uint public m_numOwners
      PUSH [tag] 29			uint public m_numOwners
      JUMPI 			uint public m_numOwners
      PUSH 0			uint public m_numOwners
      DUP1 			uint public m_numOwners
      REVERT 			uint public m_numOwners
    tag 29			uint public m_numOwners
      JUMPDEST 			uint public m_numOwners
      PUSH [tag] 30			uint public m_numOwners
      PUSH [tag] 31			uint public m_numOwners
      JUMP 			uint public m_numOwners
    tag 30			uint public m_numOwners
      JUMPDEST 			uint public m_numOwners
      PUSH 40			uint public m_numOwners
      MLOAD 			uint public m_numOwners
      DUP1 			uint public m_numOwners
      DUP3 			uint public m_numOwners
      DUP2 			uint public m_numOwners
      MSTORE 			uint public m_numOwners
      PUSH 20			uint public m_numOwners
      ADD 			uint public m_numOwners
      SWAP2 			uint public m_numOwners
      POP 			uint public m_numOwners
      POP 			uint public m_numOwners
      PUSH 40			uint public m_numOwners
      MLOAD 			uint public m_numOwners
      DUP1 			uint public m_numOwners
      SWAP2 			uint public m_numOwners
      SUB 			uint public m_numOwners
      SWAP1 			uint public m_numOwners
      RETURN 			uint public m_numOwners
    tag 5			uint public m_lastDay
      JUMPDEST 			uint public m_lastDay
      CALLVALUE 			uint public m_lastDay
      ISZERO 			uint public m_lastDay
      PUSH [tag] 32			uint public m_lastDay
      JUMPI 			uint public m_lastDay
      PUSH 0			uint public m_lastDay
      DUP1 			uint public m_lastDay
      REVERT 			uint public m_lastDay
    tag 32			uint public m_lastDay
      JUMPDEST 			uint public m_lastDay
      PUSH [tag] 33			uint public m_lastDay
      PUSH [tag] 34			uint public m_lastDay
      JUMP 			uint public m_lastDay
    tag 33			uint public m_lastDay
      JUMPDEST 			uint public m_lastDay
      PUSH 40			uint public m_lastDay
      MLOAD 			uint public m_lastDay
      DUP1 			uint public m_lastDay
      DUP3 			uint public m_lastDay
      DUP2 			uint public m_lastDay
      MSTORE 			uint public m_lastDay
      PUSH 20			uint public m_lastDay
      ADD 			uint public m_lastDay
      SWAP2 			uint public m_lastDay
      POP 			uint public m_lastDay
      POP 			uint public m_lastDay
      PUSH 40			uint public m_lastDay
      MLOAD 			uint public m_lastDay
      DUP1 			uint public m_lastDay
      SWAP2 			uint public m_lastDay
      SUB 			uint public m_lastDay
      SWAP1 			uint public m_lastDay
      RETURN 			uint public m_lastDay
    tag 6			function resetSpentToday() onl...
      JUMPDEST 			function resetSpentToday() onl...
      CALLVALUE 			function resetSpentToday() onl...
      ISZERO 			function resetSpentToday() onl...
      PUSH [tag] 35			function resetSpentToday() onl...
      JUMPI 			function resetSpentToday() onl...
      PUSH 0			function resetSpentToday() onl...
      DUP1 			function resetSpentToday() onl...
      REVERT 			function resetSpentToday() onl...
    tag 35			function resetSpentToday() onl...
      JUMPDEST 			function resetSpentToday() onl...
      PUSH [tag] 36			function resetSpentToday() onl...
      PUSH [tag] 37			function resetSpentToday() onl...
      JUMP 			function resetSpentToday() onl...
    tag 36			function resetSpentToday() onl...
      JUMPDEST 			function resetSpentToday() onl...
      STOP 			function resetSpentToday() onl...
    tag 7			uint public m_spentToday
      JUMPDEST 			uint public m_spentToday
      CALLVALUE 			uint public m_spentToday
      ISZERO 			uint public m_spentToday
      PUSH [tag] 38			uint public m_spentToday
      JUMPI 			uint public m_spentToday
      PUSH 0			uint public m_spentToday
      DUP1 			uint public m_spentToday
      REVERT 			uint public m_spentToday
    tag 38			uint public m_spentToday
      JUMPDEST 			uint public m_spentToday
      PUSH [tag] 39			uint public m_spentToday
      PUSH [tag] 40			uint public m_spentToday
      JUMP 			uint public m_spentToday
    tag 39			uint public m_spentToday
      JUMPDEST 			uint public m_spentToday
      PUSH 40			uint public m_spentToday
      MLOAD 			uint public m_spentToday
      DUP1 			uint public m_spentToday
      DUP3 			uint public m_spentToday
      DUP2 			uint public m_spentToday
      MSTORE 			uint public m_spentToday
      PUSH 20			uint public m_spentToday
      ADD 			uint public m_spentToday
      SWAP2 			uint public m_spentToday
      POP 			uint public m_spentToday
      POP 			uint public m_spentToday
      PUSH 40			uint public m_spentToday
      MLOAD 			uint public m_spentToday
      DUP1 			uint public m_spentToday
      SWAP2 			uint public m_spentToday
      SUB 			uint public m_spentToday
      SWAP1 			uint public m_spentToday
      RETURN 			uint public m_spentToday
    tag 8			function addOwner(address _own...
      JUMPDEST 			function addOwner(address _own...
      CALLVALUE 			function addOwner(address _own...
      ISZERO 			function addOwner(address _own...
      PUSH [tag] 41			function addOwner(address _own...
      JUMPI 			function addOwner(address _own...
      PUSH 0			function addOwner(address _own...
      DUP1 			function addOwner(address _own...
      REVERT 			function addOwner(address _own...
    tag 41			function addOwner(address _own...
      JUMPDEST 			function addOwner(address _own...
      PUSH [tag] 42			function addOwner(address _own...
      PUSH 4			function addOwner(address _own...
      DUP1 			function addOwner(address _own...
      DUP1 			function addOwner(address _own...
      CALLDATALOAD 			function addOwner(address _own...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function addOwner(address _own...
      AND 			function addOwner(address _own...
      SWAP1 			function addOwner(address _own...
      PUSH 20			function addOwner(address _own...
      ADD 			function addOwner(address _own...
      SWAP1 			function addOwner(address _own...
      SWAP2 			function addOwner(address _own...
      SWAP1 			function addOwner(address _own...
      POP 			function addOwner(address _own...
      POP 			function addOwner(address _own...
      PUSH [tag] 43			function addOwner(address _own...
      JUMP 			function addOwner(address _own...
    tag 42			function addOwner(address _own...
      JUMPDEST 			function addOwner(address _own...
      STOP 			function addOwner(address _own...
    tag 9			uint public m_required
      JUMPDEST 			uint public m_required
      CALLVALUE 			uint public m_required
      ISZERO 			uint public m_required
      PUSH [tag] 44			uint public m_required
      JUMPI 			uint public m_required
      PUSH 0			uint public m_required
      DUP1 			uint public m_required
      REVERT 			uint public m_required
    tag 44			uint public m_required
      JUMPDEST 			uint public m_required
      PUSH [tag] 45			uint public m_required
      PUSH [tag] 46			uint public m_required
      JUMP 			uint public m_required
    tag 45			uint public m_required
      JUMPDEST 			uint public m_required
      PUSH 40			uint public m_required
      MLOAD 			uint public m_required
      DUP1 			uint public m_required
      DUP3 			uint public m_required
      DUP2 			uint public m_required
      MSTORE 			uint public m_required
      PUSH 20			uint public m_required
      ADD 			uint public m_required
      SWAP2 			uint public m_required
      POP 			uint public m_required
      POP 			uint public m_required
      PUSH 40			uint public m_required
      MLOAD 			uint public m_required
      DUP1 			uint public m_required
      SWAP2 			uint public m_required
      SUB 			uint public m_required
      SWAP1 			uint public m_required
      RETURN 			uint public m_required
    tag 10			function confirm(bytes32 _h) o...
      JUMPDEST 			function confirm(bytes32 _h) o...
      CALLVALUE 			function confirm(bytes32 _h) o...
      ISZERO 			function confirm(bytes32 _h) o...
      PUSH [tag] 47			function confirm(bytes32 _h) o...
      JUMPI 			function confirm(bytes32 _h) o...
      PUSH 0			function confirm(bytes32 _h) o...
      DUP1 			function confirm(bytes32 _h) o...
      REVERT 			function confirm(bytes32 _h) o...
    tag 47			function confirm(bytes32 _h) o...
      JUMPDEST 			function confirm(bytes32 _h) o...
      PUSH [tag] 48			function confirm(bytes32 _h) o...
      PUSH 4			function confirm(bytes32 _h) o...
      DUP1 			function confirm(bytes32 _h) o...
      DUP1 			function confirm(bytes32 _h) o...
      CALLDATALOAD 			function confirm(bytes32 _h) o...
      PUSH 0			function confirm(bytes32 _h) o...
      NOT 			function confirm(bytes32 _h) o...
      AND 			function confirm(bytes32 _h) o...
      SWAP1 			function confirm(bytes32 _h) o...
      PUSH 20			function confirm(bytes32 _h) o...
      ADD 			function confirm(bytes32 _h) o...
      SWAP1 			function confirm(bytes32 _h) o...
      SWAP2 			function confirm(bytes32 _h) o...
      SWAP1 			function confirm(bytes32 _h) o...
      POP 			function confirm(bytes32 _h) o...
      POP 			function confirm(bytes32 _h) o...
      PUSH [tag] 49			function confirm(bytes32 _h) o...
      JUMP 			function confirm(bytes32 _h) o...
    tag 48			function confirm(bytes32 _h) o...
      JUMPDEST 			function confirm(bytes32 _h) o...
      PUSH 40			function confirm(bytes32 _h) o...
      MLOAD 			function confirm(bytes32 _h) o...
      DUP1 			function confirm(bytes32 _h) o...
      DUP3 			function confirm(bytes32 _h) o...
      ISZERO 			function confirm(bytes32 _h) o...
      ISZERO 			function confirm(bytes32 _h) o...
      ISZERO 			function confirm(bytes32 _h) o...
      ISZERO 			function confirm(bytes32 _h) o...
      DUP2 			function confirm(bytes32 _h) o...
      MSTORE 			function confirm(bytes32 _h) o...
      PUSH 20			function confirm(bytes32 _h) o...
      ADD 			function confirm(bytes32 _h) o...
      SWAP2 			function confirm(bytes32 _h) o...
      POP 			function confirm(bytes32 _h) o...
      POP 			function confirm(bytes32 _h) o...
      PUSH 40			function confirm(bytes32 _h) o...
      MLOAD 			function confirm(bytes32 _h) o...
      DUP1 			function confirm(bytes32 _h) o...
      SWAP2 			function confirm(bytes32 _h) o...
      SUB 			function confirm(bytes32 _h) o...
      SWAP1 			function confirm(bytes32 _h) o...
      RETURN 			function confirm(bytes32 _h) o...
    tag 11			function setDailyLimit(uint _n...
      JUMPDEST 			function setDailyLimit(uint _n...
      CALLVALUE 			function setDailyLimit(uint _n...
      ISZERO 			function setDailyLimit(uint _n...
      PUSH [tag] 50			function setDailyLimit(uint _n...
      JUMPI 			function setDailyLimit(uint _n...
      PUSH 0			function setDailyLimit(uint _n...
      DUP1 			function setDailyLimit(uint _n...
      REVERT 			function setDailyLimit(uint _n...
    tag 50			function setDailyLimit(uint _n...
      JUMPDEST 			function setDailyLimit(uint _n...
      PUSH [tag] 51			function setDailyLimit(uint _n...
      PUSH 4			function setDailyLimit(uint _n...
      DUP1 			function setDailyLimit(uint _n...
      DUP1 			function setDailyLimit(uint _n...
      CALLDATALOAD 			function setDailyLimit(uint _n...
      SWAP1 			function setDailyLimit(uint _n...
      PUSH 20			function setDailyLimit(uint _n...
      ADD 			function setDailyLimit(uint _n...
      SWAP1 			function setDailyLimit(uint _n...
      SWAP2 			function setDailyLimit(uint _n...
      SWAP1 			function setDailyLimit(uint _n...
      POP 			function setDailyLimit(uint _n...
      POP 			function setDailyLimit(uint _n...
      PUSH [tag] 52			function setDailyLimit(uint _n...
      JUMP 			function setDailyLimit(uint _n...
    tag 51			function setDailyLimit(uint _n...
      JUMPDEST 			function setDailyLimit(uint _n...
      STOP 			function setDailyLimit(uint _n...
    tag 12			function execute(address _to, ...
      JUMPDEST 			function execute(address _to, ...
      CALLVALUE 			function execute(address _to, ...
      ISZERO 			function execute(address _to, ...
      PUSH [tag] 53			function execute(address _to, ...
      JUMPI 			function execute(address _to, ...
      PUSH 0			function execute(address _to, ...
      DUP1 			function execute(address _to, ...
      REVERT 			function execute(address _to, ...
    tag 53			function execute(address _to, ...
      JUMPDEST 			function execute(address _to, ...
      PUSH [tag] 54			function execute(address _to, ...
      PUSH 4			function execute(address _to, ...
      DUP1 			function execute(address _to, ...
      DUP1 			function execute(address _to, ...
      CALLDATALOAD 			function execute(address _to, ...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function execute(address _to, ...
      AND 			function execute(address _to, ...
      SWAP1 			function execute(address _to, ...
      PUSH 20			function execute(address _to, ...
      ADD 			function execute(address _to, ...
      SWAP1 			function execute(address _to, ...
      SWAP2 			function execute(address _to, ...
      SWAP1 			function execute(address _to, ...
      DUP1 			function execute(address _to, ...
      CALLDATALOAD 			function execute(address _to, ...
      SWAP1 			function execute(address _to, ...
      PUSH 20			function execute(address _to, ...
      ADD 			function execute(address _to, ...
      SWAP1 			function execute(address _to, ...
      SWAP2 			function execute(address _to, ...
      SWAP1 			function execute(address _to, ...
      DUP1 			function execute(address _to, ...
      CALLDATALOAD 			function execute(address _to, ...
      SWAP1 			function execute(address _to, ...
      PUSH 20			function execute(address _to, ...
      ADD 			function execute(address _to, ...
      SWAP1 			function execute(address _to, ...
      DUP3 			function execute(address _to, ...
      ADD 			function execute(address _to, ...
      DUP1 			function execute(address _to, ...
      CALLDATALOAD 			function execute(address _to, ...
      SWAP1 			function execute(address _to, ...
      PUSH 20			function execute(address _to, ...
      ADD 			function execute(address _to, ...
      SWAP2 			function execute(address _to, ...
      SWAP1 			function execute(address _to, ...
      SWAP2 			function execute(address _to, ...
      SWAP3 			function execute(address _to, ...
      SWAP1 			function execute(address _to, ...
      POP 			function execute(address _to, ...
      POP 			function execute(address _to, ...
      PUSH [tag] 55			function execute(address _to, ...
      JUMP 			function execute(address _to, ...
    tag 54			function execute(address _to, ...
      JUMPDEST 			function execute(address _to, ...
      PUSH 40			function execute(address _to, ...
      MLOAD 			function execute(address _to, ...
      DUP1 			function execute(address _to, ...
      DUP3 			function execute(address _to, ...
      PUSH 0			function execute(address _to, ...
      NOT 			function execute(address _to, ...
      AND 			function execute(address _to, ...
      PUSH 0			function execute(address _to, ...
      NOT 			function execute(address _to, ...
      AND 			function execute(address _to, ...
      DUP2 			function execute(address _to, ...
      MSTORE 			function execute(address _to, ...
      PUSH 20			function execute(address _to, ...
      ADD 			function execute(address _to, ...
      SWAP2 			function execute(address _to, ...
      POP 			function execute(address _to, ...
      POP 			function execute(address _to, ...
      PUSH 40			function execute(address _to, ...
      MLOAD 			function execute(address _to, ...
      DUP1 			function execute(address _to, ...
      SWAP2 			function execute(address _to, ...
      SUB 			function execute(address _to, ...
      SWAP1 			function execute(address _to, ...
      RETURN 			function execute(address _to, ...
    tag 13			function revoke(bytes32 _opera...
      JUMPDEST 			function revoke(bytes32 _opera...
      CALLVALUE 			function revoke(bytes32 _opera...
      ISZERO 			function revoke(bytes32 _opera...
      PUSH [tag] 56			function revoke(bytes32 _opera...
      JUMPI 			function revoke(bytes32 _opera...
      PUSH 0			function revoke(bytes32 _opera...
      DUP1 			function revoke(bytes32 _opera...
      REVERT 			function revoke(bytes32 _opera...
    tag 56			function revoke(bytes32 _opera...
      JUMPDEST 			function revoke(bytes32 _opera...
      PUSH [tag] 57			function revoke(bytes32 _opera...
      PUSH 4			function revoke(bytes32 _opera...
      DUP1 			function revoke(bytes32 _opera...
      DUP1 			function revoke(bytes32 _opera...
      CALLDATALOAD 			function revoke(bytes32 _opera...
      PUSH 0			function revoke(bytes32 _opera...
      NOT 			function revoke(bytes32 _opera...
      AND 			function revoke(bytes32 _opera...
      SWAP1 			function revoke(bytes32 _opera...
      PUSH 20			function revoke(bytes32 _opera...
      ADD 			function revoke(bytes32 _opera...
      SWAP1 			function revoke(bytes32 _opera...
      SWAP2 			function revoke(bytes32 _opera...
      SWAP1 			function revoke(bytes32 _opera...
      POP 			function revoke(bytes32 _opera...
      POP 			function revoke(bytes32 _opera...
      PUSH [tag] 58			function revoke(bytes32 _opera...
      JUMP 			function revoke(bytes32 _opera...
    tag 57			function revoke(bytes32 _opera...
      JUMPDEST 			function revoke(bytes32 _opera...
      STOP 			function revoke(bytes32 _opera...
    tag 14			function changeRequirement(uin...
      JUMPDEST 			function changeRequirement(uin...
      CALLVALUE 			function changeRequirement(uin...
      ISZERO 			function changeRequirement(uin...
      PUSH [tag] 59			function changeRequirement(uin...
      JUMPI 			function changeRequirement(uin...
      PUSH 0			function changeRequirement(uin...
      DUP1 			function changeRequirement(uin...
      REVERT 			function changeRequirement(uin...
    tag 59			function changeRequirement(uin...
      JUMPDEST 			function changeRequirement(uin...
      PUSH [tag] 60			function changeRequirement(uin...
      PUSH 4			function changeRequirement(uin...
      DUP1 			function changeRequirement(uin...
      DUP1 			function changeRequirement(uin...
      CALLDATALOAD 			function changeRequirement(uin...
      SWAP1 			function changeRequirement(uin...
      PUSH 20			function changeRequirement(uin...
      ADD 			function changeRequirement(uin...
      SWAP1 			function changeRequirement(uin...
      SWAP2 			function changeRequirement(uin...
      SWAP1 			function changeRequirement(uin...
      POP 			function changeRequirement(uin...
      POP 			function changeRequirement(uin...
      PUSH [tag] 61			function changeRequirement(uin...
      JUMP 			function changeRequirement(uin...
    tag 60			function changeRequirement(uin...
      JUMPDEST 			function changeRequirement(uin...
      STOP 			function changeRequirement(uin...
    tag 15			function hasConfirmed(bytes32 ...
      JUMPDEST 			function hasConfirmed(bytes32 ...
      CALLVALUE 			function hasConfirmed(bytes32 ...
      ISZERO 			function hasConfirmed(bytes32 ...
      PUSH [tag] 62			function hasConfirmed(bytes32 ...
      JUMPI 			function hasConfirmed(bytes32 ...
      PUSH 0			function hasConfirmed(bytes32 ...
      DUP1 			function hasConfirmed(bytes32 ...
      REVERT 			function hasConfirmed(bytes32 ...
    tag 62			function hasConfirmed(bytes32 ...
      JUMPDEST 			function hasConfirmed(bytes32 ...
      PUSH [tag] 63			function hasConfirmed(bytes32 ...
      PUSH 4			function hasConfirmed(bytes32 ...
      DUP1 			function hasConfirmed(bytes32 ...
      DUP1 			function hasConfirmed(bytes32 ...
      CALLDATALOAD 			function hasConfirmed(bytes32 ...
      PUSH 0			function hasConfirmed(bytes32 ...
      NOT 			function hasConfirmed(bytes32 ...
      AND 			function hasConfirmed(bytes32 ...
      SWAP1 			function hasConfirmed(bytes32 ...
      PUSH 20			function hasConfirmed(bytes32 ...
      ADD 			function hasConfirmed(bytes32 ...
      SWAP1 			function hasConfirmed(bytes32 ...
      SWAP2 			function hasConfirmed(bytes32 ...
      SWAP1 			function hasConfirmed(bytes32 ...
      DUP1 			function hasConfirmed(bytes32 ...
      CALLDATALOAD 			function hasConfirmed(bytes32 ...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function hasConfirmed(bytes32 ...
      AND 			function hasConfirmed(bytes32 ...
      SWAP1 			function hasConfirmed(bytes32 ...
      PUSH 20			function hasConfirmed(bytes32 ...
      ADD 			function hasConfirmed(bytes32 ...
      SWAP1 			function hasConfirmed(bytes32 ...
      SWAP2 			function hasConfirmed(bytes32 ...
      SWAP1 			function hasConfirmed(bytes32 ...
      POP 			function hasConfirmed(bytes32 ...
      POP 			function hasConfirmed(bytes32 ...
      PUSH [tag] 64			function hasConfirmed(bytes32 ...
      JUMP 			function hasConfirmed(bytes32 ...
    tag 63			function hasConfirmed(bytes32 ...
      JUMPDEST 			function hasConfirmed(bytes32 ...
      PUSH 40			function hasConfirmed(bytes32 ...
      MLOAD 			function hasConfirmed(bytes32 ...
      DUP1 			function hasConfirmed(bytes32 ...
      DUP3 			function hasConfirmed(bytes32 ...
      ISZERO 			function hasConfirmed(bytes32 ...
      ISZERO 			function hasConfirmed(bytes32 ...
      ISZERO 			function hasConfirmed(bytes32 ...
      ISZERO 			function hasConfirmed(bytes32 ...
      DUP2 			function hasConfirmed(bytes32 ...
      MSTORE 			function hasConfirmed(bytes32 ...
      PUSH 20			function hasConfirmed(bytes32 ...
      ADD 			function hasConfirmed(bytes32 ...
      SWAP2 			function hasConfirmed(bytes32 ...
      POP 			function hasConfirmed(bytes32 ...
      POP 			function hasConfirmed(bytes32 ...
      PUSH 40			function hasConfirmed(bytes32 ...
      MLOAD 			function hasConfirmed(bytes32 ...
      DUP1 			function hasConfirmed(bytes32 ...
      SWAP2 			function hasConfirmed(bytes32 ...
      SUB 			function hasConfirmed(bytes32 ...
      SWAP1 			function hasConfirmed(bytes32 ...
      RETURN 			function hasConfirmed(bytes32 ...
    tag 16			function getOwner(uint ownerIn...
      JUMPDEST 			function getOwner(uint ownerIn...
      CALLVALUE 			function getOwner(uint ownerIn...
      ISZERO 			function getOwner(uint ownerIn...
      PUSH [tag] 65			function getOwner(uint ownerIn...
      JUMPI 			function getOwner(uint ownerIn...
      PUSH 0			function getOwner(uint ownerIn...
      DUP1 			function getOwner(uint ownerIn...
      REVERT 			function getOwner(uint ownerIn...
    tag 65			function getOwner(uint ownerIn...
      JUMPDEST 			function getOwner(uint ownerIn...
      PUSH [tag] 66			function getOwner(uint ownerIn...
      PUSH 4			function getOwner(uint ownerIn...
      DUP1 			function getOwner(uint ownerIn...
      DUP1 			function getOwner(uint ownerIn...
      CALLDATALOAD 			function getOwner(uint ownerIn...
      SWAP1 			function getOwner(uint ownerIn...
      PUSH 20			function getOwner(uint ownerIn...
      ADD 			function getOwner(uint ownerIn...
      SWAP1 			function getOwner(uint ownerIn...
      SWAP2 			function getOwner(uint ownerIn...
      SWAP1 			function getOwner(uint ownerIn...
      POP 			function getOwner(uint ownerIn...
      POP 			function getOwner(uint ownerIn...
      PUSH [tag] 67			function getOwner(uint ownerIn...
      JUMP 			function getOwner(uint ownerIn...
    tag 66			function getOwner(uint ownerIn...
      JUMPDEST 			function getOwner(uint ownerIn...
      PUSH 40			function getOwner(uint ownerIn...
      MLOAD 			function getOwner(uint ownerIn...
      DUP1 			function getOwner(uint ownerIn...
      DUP3 			function getOwner(uint ownerIn...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function getOwner(uint ownerIn...
      AND 			function getOwner(uint ownerIn...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function getOwner(uint ownerIn...
      AND 			function getOwner(uint ownerIn...
      DUP2 			function getOwner(uint ownerIn...
      MSTORE 			function getOwner(uint ownerIn...
      PUSH 20			function getOwner(uint ownerIn...
      ADD 			function getOwner(uint ownerIn...
      SWAP2 			function getOwner(uint ownerIn...
      POP 			function getOwner(uint ownerIn...
      POP 			function getOwner(uint ownerIn...
      PUSH 40			function getOwner(uint ownerIn...
      MLOAD 			function getOwner(uint ownerIn...
      DUP1 			function getOwner(uint ownerIn...
      SWAP2 			function getOwner(uint ownerIn...
      SUB 			function getOwner(uint ownerIn...
      SWAP1 			function getOwner(uint ownerIn...
      RETURN 			function getOwner(uint ownerIn...
    tag 17			function kill(address _to) onl...
      JUMPDEST 			function kill(address _to) onl...
      CALLVALUE 			function kill(address _to) onl...
      ISZERO 			function kill(address _to) onl...
      PUSH [tag] 68			function kill(address _to) onl...
      JUMPI 			function kill(address _to) onl...
      PUSH 0			function kill(address _to) onl...
      DUP1 			function kill(address _to) onl...
      REVERT 			function kill(address _to) onl...
    tag 68			function kill(address _to) onl...
      JUMPDEST 			function kill(address _to) onl...
      PUSH [tag] 69			function kill(address _to) onl...
      PUSH 4			function kill(address _to) onl...
      DUP1 			function kill(address _to) onl...
      DUP1 			function kill(address _to) onl...
      CALLDATALOAD 			function kill(address _to) onl...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function kill(address _to) onl...
      AND 			function kill(address _to) onl...
      SWAP1 			function kill(address _to) onl...
      PUSH 20			function kill(address _to) onl...
      ADD 			function kill(address _to) onl...
      SWAP1 			function kill(address _to) onl...
      SWAP2 			function kill(address _to) onl...
      SWAP1 			function kill(address _to) onl...
      POP 			function kill(address _to) onl...
      POP 			function kill(address _to) onl...
      PUSH [tag] 70			function kill(address _to) onl...
      JUMP 			function kill(address _to) onl...
    tag 69			function kill(address _to) onl...
      JUMPDEST 			function kill(address _to) onl...
      STOP 			function kill(address _to) onl...
    tag 18			function changeOwner(address _...
      JUMPDEST 			function changeOwner(address _...
      CALLVALUE 			function changeOwner(address _...
      ISZERO 			function changeOwner(address _...
      PUSH [tag] 71			function changeOwner(address _...
      JUMPI 			function changeOwner(address _...
      PUSH 0			function changeOwner(address _...
      DUP1 			function changeOwner(address _...
      REVERT 			function changeOwner(address _...
    tag 71			function changeOwner(address _...
      JUMPDEST 			function changeOwner(address _...
      PUSH [tag] 72			function changeOwner(address _...
      PUSH 4			function changeOwner(address _...
      DUP1 			function changeOwner(address _...
      DUP1 			function changeOwner(address _...
      CALLDATALOAD 			function changeOwner(address _...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function changeOwner(address _...
      AND 			function changeOwner(address _...
      SWAP1 			function changeOwner(address _...
      PUSH 20			function changeOwner(address _...
      ADD 			function changeOwner(address _...
      SWAP1 			function changeOwner(address _...
      SWAP2 			function changeOwner(address _...
      SWAP1 			function changeOwner(address _...
      DUP1 			function changeOwner(address _...
      CALLDATALOAD 			function changeOwner(address _...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function changeOwner(address _...
      AND 			function changeOwner(address _...
      SWAP1 			function changeOwner(address _...
      PUSH 20			function changeOwner(address _...
      ADD 			function changeOwner(address _...
      SWAP1 			function changeOwner(address _...
      SWAP2 			function changeOwner(address _...
      SWAP1 			function changeOwner(address _...
      POP 			function changeOwner(address _...
      POP 			function changeOwner(address _...
      PUSH [tag] 73			function changeOwner(address _...
      JUMP 			function changeOwner(address _...
    tag 72			function changeOwner(address _...
      JUMPDEST 			function changeOwner(address _...
      STOP 			function changeOwner(address _...
    tag 19			uint public m_dailyLimit
      JUMPDEST 			uint public m_dailyLimit
      CALLVALUE 			uint public m_dailyLimit
      ISZERO 			uint public m_dailyLimit
      PUSH [tag] 74			uint public m_dailyLimit
      JUMPI 			uint public m_dailyLimit
      PUSH 0			uint public m_dailyLimit
      DUP1 			uint public m_dailyLimit
      REVERT 			uint public m_dailyLimit
    tag 74			uint public m_dailyLimit
      JUMPDEST 			uint public m_dailyLimit
      PUSH [tag] 75			uint public m_dailyLimit
      PUSH [tag] 76			uint public m_dailyLimit
      JUMP 			uint public m_dailyLimit
    tag 75			uint public m_dailyLimit
      JUMPDEST 			uint public m_dailyLimit
      PUSH 40			uint public m_dailyLimit
      MLOAD 			uint public m_dailyLimit
      DUP1 			uint public m_dailyLimit
      DUP3 			uint public m_dailyLimit
      DUP2 			uint public m_dailyLimit
      MSTORE 			uint public m_dailyLimit
      PUSH 20			uint public m_dailyLimit
      ADD 			uint public m_dailyLimit
      SWAP2 			uint public m_dailyLimit
      POP 			uint public m_dailyLimit
      POP 			uint public m_dailyLimit
      PUSH 40			uint public m_dailyLimit
      MLOAD 			uint public m_dailyLimit
      DUP1 			uint public m_dailyLimit
      SWAP2 			uint public m_dailyLimit
      SUB 			uint public m_dailyLimit
      SWAP1 			uint public m_dailyLimit
      RETURN 			uint public m_dailyLimit
    tag 25			function removeOwner(address _...
      JUMPDEST 			function removeOwner(address _...
      PUSH 0			uint ownerIndex
      DUP1 			msg.data
      CALLDATASIZE 			msg.data
      PUSH 40			sha3(msg.data)
      MLOAD 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      DUP4 			sha3(msg.data)
      DUP4 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      DUP3 			sha3(msg.data)
      DUP5 			sha3(msg.data)
      CALLDATACOPY 			sha3(msg.data)
      DUP3 			sha3(msg.data)
      ADD 			sha3(msg.data)
      SWAP2 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      SWAP3 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      PUSH 40			sha3(msg.data)
      MLOAD 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      SWAP2 			sha3(msg.data)
      SUB 			sha3(msg.data)
      SWAP1 			sha3(msg.data)
      KECCAK256 			sha3(msg.data)
      PUSH [tag] 78			confirmAndCheck(_operation)
      DUP2 			_operation
      PUSH [tag] 79			confirmAndCheck
      JUMP [in]			confirmAndCheck(_operation)
    tag 78			confirmAndCheck(_operation)
      JUMPDEST 			confirmAndCheck(_operation)
      ISZERO 			if (confirmAndCheck(_operation...
      PUSH [tag] 80			if (confirmAndCheck(_operation...
      JUMPI 			if (confirmAndCheck(_operation...
      PUSH 102			m_ownerIndex
      PUSH 0			m_ownerIndex[uint(_owner)]
      DUP5 			_owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			uint(_owner)
      AND 			uint(_owner)
      DUP2 			m_ownerIndex[uint(_owner)]
      MSTORE 			m_ownerIndex[uint(_owner)]
      PUSH 20			m_ownerIndex[uint(_owner)]
      ADD 			m_ownerIndex[uint(_owner)]
      SWAP1 			m_ownerIndex[uint(_owner)]
      DUP2 			m_ownerIndex[uint(_owner)]
      MSTORE 			m_ownerIndex[uint(_owner)]
      PUSH 20			m_ownerIndex[uint(_owner)]
      ADD 			m_ownerIndex[uint(_owner)]
      PUSH 0			m_ownerIndex[uint(_owner)]
      KECCAK256 			m_ownerIndex[uint(_owner)]
      SLOAD 			m_ownerIndex[uint(_owner)]
      SWAP2 			uint ownerIndex = m_ownerIndex...
      POP 			uint ownerIndex = m_ownerIndex...
      PUSH 0			0
      DUP3 			ownerIndex
      EQ 			ownerIndex == 0
      ISZERO 			if (ownerIndex == 0) return;
      PUSH [tag] 82			if (ownerIndex == 0) return;
      JUMPI 			if (ownerIndex == 0) return;
      PUSH [tag] 81			return;
      JUMP 			return;
    tag 82			if (ownerIndex == 0) return;
      JUMPDEST 			if (ownerIndex == 0) return;
      PUSH 1			1
      DUP1 			m_numOwners
      SLOAD 			m_numOwners
      SUB 			m_numOwners - 1
      PUSH 0			m_required
      SLOAD 			m_required
      GT 			m_required > m_numOwners - 1
      ISZERO 			if (m_required > m_numOwners -...
      PUSH [tag] 83			if (m_required > m_numOwners -...
      JUMPI 			if (m_required > m_numOwners -...
      PUSH [tag] 81			return;
      JUMP 			return;
    tag 83			if (m_required > m_numOwners -...
      JUMPDEST 			if (m_required > m_numOwners -...
      PUSH 0			0
      PUSH 2			m_owners
      DUP4 			ownerIndex
      PUSH 100			m_owners[ownerIndex]
      DUP2 			m_owners[ownerIndex]
      LT 			m_owners[ownerIndex]
      ISZERO 			m_owners[ownerIndex]
      ISZERO 			m_owners[ownerIndex]
      PUSH [tag] 84			m_owners[ownerIndex]
      JUMPI 			m_owners[ownerIndex]
      INVALID 			m_owners[ownerIndex]
    tag 84			m_owners[ownerIndex]
      JUMPDEST 			m_owners[ownerIndex]
      ADD 			m_owners[ownerIndex]
      DUP2 			m_owners[ownerIndex] = 0
      SWAP1 			m_owners[ownerIndex] = 0
      SSTORE 			m_owners[ownerIndex] = 0
      POP 			m_owners[ownerIndex] = 0
      PUSH 0			0
      PUSH 102			m_ownerIndex
      PUSH 0			m_ownerIndex[uint(_owner)]
      DUP6 			_owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			uint(_owner)
      AND 			uint(_owner)
      DUP2 			m_ownerIndex[uint(_owner)]
      MSTORE 			m_ownerIndex[uint(_owner)]
      PUSH 20			m_ownerIndex[uint(_owner)]
      ADD 			m_ownerIndex[uint(_owner)]
      SWAP1 			m_ownerIndex[uint(_owner)]
      DUP2 			m_ownerIndex[uint(_owner)]
      MSTORE 			m_ownerIndex[uint(_owner)]
      PUSH 20			m_ownerIndex[uint(_owner)]
      ADD 			m_ownerIndex[uint(_owner)]
      PUSH 0			m_ownerIndex[uint(_owner)]
      KECCAK256 			m_ownerIndex[uint(_owner)]
      DUP2 			m_ownerIndex[uint(_owner)] = 0
      SWAP1 			m_ownerIndex[uint(_owner)] = 0
      SSTORE 			m_ownerIndex[uint(_owner)] = 0
      POP 			m_ownerIndex[uint(_owner)] = 0
      PUSH [tag] 86			clearPending()
      PUSH [tag] 87			clearPending
      JUMP [in]			clearPending()
    tag 86			clearPending()
      JUMPDEST 			clearPending()
      PUSH [tag] 88			reorganizeOwners()
      PUSH [tag] 89			reorganizeOwners
      JUMP [in]			reorganizeOwners()
    tag 88			reorganizeOwners()
      JUMPDEST 			reorganizeOwners()
      PUSH 58619076ADF5BB0943D100EF88D52D7C3FD691B19D3A9071B555B651FBF418DA			OwnerRemoved(_owner)
      DUP4 			_owner
      PUSH 40			OwnerRemoved(_owner)
      MLOAD 			OwnerRemoved(_owner)
      DUP1 			OwnerRemoved(_owner)
      DUP3 			OwnerRemoved(_owner)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			OwnerRemoved(_owner)
      AND 			OwnerRemoved(_owner)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			OwnerRemoved(_owner)
      AND 			OwnerRemoved(_owner)
      DUP2 			OwnerRemoved(_owner)
      MSTORE 			OwnerRemoved(_owner)
      PUSH 20			OwnerRemoved(_owner)
      ADD 			OwnerRemoved(_owner)
      SWAP2 			OwnerRemoved(_owner)
      POP 			OwnerRemoved(_owner)
      POP 			OwnerRemoved(_owner)
      PUSH 40			OwnerRemoved(_owner)
      MLOAD 			OwnerRemoved(_owner)
      DUP1 			OwnerRemoved(_owner)
      SWAP2 			OwnerRemoved(_owner)
      SUB 			OwnerRemoved(_owner)
      SWAP1 			OwnerRemoved(_owner)
      LOG1 			OwnerRemoved(_owner)
    tag 81			_
      JUMPDEST 			_
    tag 80			if (confirmAndCheck(_operation...
      JUMPDEST 			if (confirmAndCheck(_operation...
      POP 			function removeOwner(address _...
      POP 			function removeOwner(address _...
      POP 			function removeOwner(address _...
      JUMP [out]			function removeOwner(address _...
    tag 28			function isOwner(address _addr...
      JUMPDEST 			function isOwner(address _addr...
      PUSH 0			bool
      DUP1 			0
      PUSH 102			m_ownerIndex
      PUSH 0			m_ownerIndex[uint(_addr)]
      DUP5 			_addr
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			uint(_addr)
      AND 			uint(_addr)
      DUP2 			m_ownerIndex[uint(_addr)]
      MSTORE 			m_ownerIndex[uint(_addr)]
      PUSH 20			m_ownerIndex[uint(_addr)]
      ADD 			m_ownerIndex[uint(_addr)]
      SWAP1 			m_ownerIndex[uint(_addr)]
      DUP2 			m_ownerIndex[uint(_addr)]
      MSTORE 			m_ownerIndex[uint(_addr)]
      PUSH 20			m_ownerIndex[uint(_addr)]
      ADD 			m_ownerIndex[uint(_addr)]
      PUSH 0			m_ownerIndex[uint(_addr)]
      KECCAK256 			m_ownerIndex[uint(_addr)]
      SLOAD 			m_ownerIndex[uint(_addr)]
      GT 			m_ownerIndex[uint(_addr)] > 0
      SWAP1 			return m_ownerIndex[uint(_addr...
      POP 			return m_ownerIndex[uint(_addr...
      SWAP2 			function isOwner(address _addr...
      SWAP1 			function isOwner(address _addr...
      POP 			function isOwner(address _addr...
      JUMP [out]			function isOwner(address _addr...
    tag 31			uint public m_numOwners
      JUMPDEST 			uint public m_numOwners
      PUSH 1			uint public m_numOwners
      SLOAD 			uint public m_numOwners
      DUP2 			uint public m_numOwners
      JUMP [out]			uint public m_numOwners
    tag 34			uint public m_lastDay
      JUMPDEST 			uint public m_lastDay
      PUSH 107			uint public m_lastDay
      SLOAD 			uint public m_lastDay
      DUP2 			uint public m_lastDay
      JUMP [out]			uint public m_lastDay
    tag 37			function resetSpentToday() onl...
      JUMPDEST 			function resetSpentToday() onl...
      PUSH 0			msg.data
      CALLDATASIZE 			msg.data
      PUSH 40			sha3(msg.data)
      MLOAD 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      DUP4 			sha3(msg.data)
      DUP4 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      DUP3 			sha3(msg.data)
      DUP5 			sha3(msg.data)
      CALLDATACOPY 			sha3(msg.data)
      DUP3 			sha3(msg.data)
      ADD 			sha3(msg.data)
      SWAP2 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      SWAP3 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      PUSH 40			sha3(msg.data)
      MLOAD 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      SWAP2 			sha3(msg.data)
      SUB 			sha3(msg.data)
      SWAP1 			sha3(msg.data)
      KECCAK256 			sha3(msg.data)
      PUSH [tag] 92			confirmAndCheck(_operation)
      DUP2 			_operation
      PUSH [tag] 79			confirmAndCheck
      JUMP [in]			confirmAndCheck(_operation)
    tag 92			confirmAndCheck(_operation)
      JUMPDEST 			confirmAndCheck(_operation)
      ISZERO 			if (confirmAndCheck(_operation...
      PUSH [tag] 93			if (confirmAndCheck(_operation...
      JUMPI 			if (confirmAndCheck(_operation...
      PUSH 0			0
      PUSH 106			m_spentToday
      DUP2 			m_spentToday = 0
      SWAP1 			m_spentToday = 0
      SSTORE 			m_spentToday = 0
      POP 			m_spentToday = 0
    tag 93			if (confirmAndCheck(_operation...
      JUMPDEST 			if (confirmAndCheck(_operation...
      POP 			function resetSpentToday() onl...
      JUMP [out]			function resetSpentToday() onl...
    tag 40			uint public m_spentToday
      JUMPDEST 			uint public m_spentToday
      PUSH 106			uint public m_spentToday
      SLOAD 			uint public m_spentToday
      DUP2 			uint public m_spentToday
      JUMP [out]			uint public m_spentToday
    tag 43			function addOwner(address _own...
      JUMPDEST 			function addOwner(address _own...
      PUSH 0			msg.data
      CALLDATASIZE 			msg.data
      PUSH 40			sha3(msg.data)
      MLOAD 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      DUP4 			sha3(msg.data)
      DUP4 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      DUP3 			sha3(msg.data)
      DUP5 			sha3(msg.data)
      CALLDATACOPY 			sha3(msg.data)
      DUP3 			sha3(msg.data)
      ADD 			sha3(msg.data)
      SWAP2 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      SWAP3 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      PUSH 40			sha3(msg.data)
      MLOAD 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      SWAP2 			sha3(msg.data)
      SUB 			sha3(msg.data)
      SWAP1 			sha3(msg.data)
      KECCAK256 			sha3(msg.data)
      PUSH [tag] 96			confirmAndCheck(_operation)
      DUP2 			_operation
      PUSH [tag] 79			confirmAndCheck
      JUMP [in]			confirmAndCheck(_operation)
    tag 96			confirmAndCheck(_operation)
      JUMPDEST 			confirmAndCheck(_operation)
      ISZERO 			if (confirmAndCheck(_operation...
      PUSH [tag] 97			if (confirmAndCheck(_operation...
      JUMPI 			if (confirmAndCheck(_operation...
      PUSH [tag] 99			isOwner(_owner)
      DUP3 			_owner
      PUSH [tag] 28			isOwner
      JUMP [in]			isOwner(_owner)
    tag 99			isOwner(_owner)
      JUMPDEST 			isOwner(_owner)
      ISZERO 			if (isOwner(_owner)) return;
      PUSH [tag] 100			if (isOwner(_owner)) return;
      JUMPI 			if (isOwner(_owner)) return;
      PUSH [tag] 98			return;
      JUMP 			return;
    tag 100			if (isOwner(_owner)) return;
      JUMPDEST 			if (isOwner(_owner)) return;
      PUSH [tag] 101			clearPending()
      PUSH [tag] 87			clearPending
      JUMP [in]			clearPending()
    tag 101			clearPending()
      JUMPDEST 			clearPending()
      PUSH FA			250
      PUSH 1			m_numOwners
      SLOAD 			m_numOwners
      LT 			m_numOwners >= c_maxOwners
      ISZERO 			m_numOwners >= c_maxOwners
      ISZERO 			if (m_numOwners >= c_maxOwners...
      PUSH [tag] 102			if (m_numOwners >= c_maxOwners...
      JUMPI 			if (m_numOwners >= c_maxOwners...
      PUSH [tag] 103			reorganizeOwners()
      PUSH [tag] 89			reorganizeOwners
      JUMP [in]			reorganizeOwners()
    tag 103			reorganizeOwners()
      JUMPDEST 			reorganizeOwners()
    tag 102			if (m_numOwners >= c_maxOwners...
      JUMPDEST 			if (m_numOwners >= c_maxOwners...
      PUSH FA			250
      PUSH 1			m_numOwners
      SLOAD 			m_numOwners
      LT 			m_numOwners >= c_maxOwners
      ISZERO 			m_numOwners >= c_maxOwners
      ISZERO 			if (m_numOwners >= c_maxOwners...
      PUSH [tag] 104			if (m_numOwners >= c_maxOwners...
      JUMPI 			if (m_numOwners >= c_maxOwners...
      PUSH [tag] 98			return;
      JUMP 			return;
    tag 104			if (m_numOwners >= c_maxOwners...
      JUMPDEST 			if (m_numOwners >= c_maxOwners...
      PUSH 1			m_numOwners
      PUSH 0			m_numOwners
      DUP2 			m_numOwners++
      SLOAD 			m_numOwners++
      DUP1 			m_numOwners++
      SWAP3 			m_numOwners++
      SWAP2 			m_numOwners++
      SWAP1 			m_numOwners++
      PUSH 1			m_numOwners++
      ADD 			m_numOwners++
      SWAP2 			m_numOwners++
      SWAP1 			m_numOwners++
      POP 			m_numOwners++
      SSTORE 			m_numOwners++
      POP 			m_numOwners++
      DUP2 			_owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			uint(_owner)
      AND 			uint(_owner)
      PUSH 2			m_owners
      PUSH 1			m_numOwners
      SLOAD 			m_numOwners
      PUSH 100			m_owners[m_numOwners]
      DUP2 			m_owners[m_numOwners]
      LT 			m_owners[m_numOwners]
      ISZERO 			m_owners[m_numOwners]
      ISZERO 			m_owners[m_numOwners]
      PUSH [tag] 105			m_owners[m_numOwners]
      JUMPI 			m_owners[m_numOwners]
      INVALID 			m_owners[m_numOwners]
    tag 105			m_owners[m_numOwners]
      JUMPDEST 			m_owners[m_numOwners]
      ADD 			m_owners[m_numOwners]
      DUP2 			m_owners[m_numOwners] = uint(_...
      SWAP1 			m_owners[m_numOwners] = uint(_...
      SSTORE 			m_owners[m_numOwners] = uint(_...
      POP 			m_owners[m_numOwners] = uint(_...
      PUSH 1			m_numOwners
      SLOAD 			m_numOwners
      PUSH 102			m_ownerIndex
      PUSH 0			m_ownerIndex[uint(_owner)]
      DUP5 			_owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			uint(_owner)
      AND 			uint(_owner)
      DUP2 			m_ownerIndex[uint(_owner)]
      MSTORE 			m_ownerIndex[uint(_owner)]
      PUSH 20			m_ownerIndex[uint(_owner)]
      ADD 			m_ownerIndex[uint(_owner)]
      SWAP1 			m_ownerIndex[uint(_owner)]
      DUP2 			m_ownerIndex[uint(_owner)]
      MSTORE 			m_ownerIndex[uint(_owner)]
      PUSH 20			m_ownerIndex[uint(_owner)]
      ADD 			m_ownerIndex[uint(_owner)]
      PUSH 0			m_ownerIndex[uint(_owner)]
      KECCAK256 			m_ownerIndex[uint(_owner)]
      DUP2 			m_ownerIndex[uint(_owner)] = m...
      SWAP1 			m_ownerIndex[uint(_owner)] = m...
      SSTORE 			m_ownerIndex[uint(_owner)] = m...
      POP 			m_ownerIndex[uint(_owner)] = m...
      PUSH 994A936646FE87FFE4F1E469D3D6AA417D6B855598397F323DE5B449F765F0C3			OwnerAdded(_owner)
      DUP3 			_owner
      PUSH 40			OwnerAdded(_owner)
      MLOAD 			OwnerAdded(_owner)
      DUP1 			OwnerAdded(_owner)
      DUP3 			OwnerAdded(_owner)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			OwnerAdded(_owner)
      AND 			OwnerAdded(_owner)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			OwnerAdded(_owner)
      AND 			OwnerAdded(_owner)
      DUP2 			OwnerAdded(_owner)
      MSTORE 			OwnerAdded(_owner)
      PUSH 20			OwnerAdded(_owner)
      ADD 			OwnerAdded(_owner)
      SWAP2 			OwnerAdded(_owner)
      POP 			OwnerAdded(_owner)
      POP 			OwnerAdded(_owner)
      PUSH 40			OwnerAdded(_owner)
      MLOAD 			OwnerAdded(_owner)
      DUP1 			OwnerAdded(_owner)
      SWAP2 			OwnerAdded(_owner)
      SUB 			OwnerAdded(_owner)
      SWAP1 			OwnerAdded(_owner)
      LOG1 			OwnerAdded(_owner)
    tag 98			_
      JUMPDEST 			_
    tag 97			if (confirmAndCheck(_operation...
      JUMPDEST 			if (confirmAndCheck(_operation...
      POP 			function addOwner(address _own...
      POP 			function addOwner(address _own...
      JUMP [out]			function addOwner(address _own...
    tag 46			uint public m_required
      JUMPDEST 			uint public m_required
      PUSH 0			uint public m_required
      SLOAD 			uint public m_required
      DUP2 			uint public m_required
      JUMP [out]			uint public m_required
    tag 49			function confirm(bytes32 _h) o...
      JUMPDEST 			function confirm(bytes32 _h) o...
      PUSH 0			bool o_success
      DUP1 			address created
      DUP3 			_h
      PUSH [tag] 108			confirmAndCheck(_operation)
      DUP2 			_operation
      PUSH [tag] 79			confirmAndCheck
      JUMP [in]			confirmAndCheck(_operation)
    tag 108			confirmAndCheck(_operation)
      JUMPDEST 			confirmAndCheck(_operation)
      ISZERO 			if (confirmAndCheck(_operation...
      PUSH [tag] 109			if (confirmAndCheck(_operation...
      JUMPI 			if (confirmAndCheck(_operation...
      PUSH 0			0
      PUSH 108			m_txs
      PUSH 0			m_txs[_h]
      DUP7 			_h
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      SWAP1 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      PUSH 0			m_txs[_h]
      KECCAK256 			m_txs[_h]
      PUSH 0			m_txs[_h].to
      ADD 			m_txs[_h].to
      PUSH 0			m_txs[_h].to
      SWAP1 			m_txs[_h].to
      SLOAD 			m_txs[_h].to
      SWAP1 			m_txs[_h].to
      PUSH 100			m_txs[_h].to
      EXP 			m_txs[_h].to
      SWAP1 			m_txs[_h].to
      DIV 			m_txs[_h].to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			m_txs[_h].to
      AND 			m_txs[_h].to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			m_txs[_h].to != 0
      AND 			m_txs[_h].to != 0
      EQ 			m_txs[_h].to != 0
      ISZERO 			m_txs[_h].to != 0
      DUP1 			m_txs[_h].to != 0 || m_txs[_h]...
      PUSH [tag] 111			m_txs[_h].to != 0 || m_txs[_h]...
      JUMPI 			m_txs[_h].to != 0 || m_txs[_h]...
      POP 			m_txs[_h].to != 0 || m_txs[_h]...
      PUSH 0			0
      PUSH 108			m_txs
      PUSH 0			m_txs[_h]
      DUP7 			_h
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      SWAP1 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      PUSH 0			m_txs[_h]
      KECCAK256 			m_txs[_h]
      PUSH 1			m_txs[_h].value
      ADD 			m_txs[_h].value
      SLOAD 			m_txs[_h].value
      EQ 			m_txs[_h].value != 0
      ISZERO 			m_txs[_h].value != 0
    tag 111			m_txs[_h].to != 0 || m_txs[_h]...
      JUMPDEST 			m_txs[_h].to != 0 || m_txs[_h]...
      DUP1 			m_txs[_h].to != 0 || m_txs[_h]...
      PUSH [tag] 112			m_txs[_h].to != 0 || m_txs[_h]...
      JUMPI 			m_txs[_h].to != 0 || m_txs[_h]...
      POP 			m_txs[_h].to != 0 || m_txs[_h]...
      PUSH 0			0
      PUSH 108			m_txs
      PUSH 0			m_txs[_h]
      DUP7 			_h
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      SWAP1 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      PUSH 0			m_txs[_h]
      KECCAK256 			m_txs[_h]
      PUSH 2			m_txs[_h].data
      ADD 			m_txs[_h].data
      DUP1 			m_txs[_h].data.length
      SLOAD 			m_txs[_h].data.length
      PUSH 1			m_txs[_h].data.length
      DUP2 			m_txs[_h].data.length
      PUSH 1			m_txs[_h].data.length
      AND 			m_txs[_h].data.length
      ISZERO 			m_txs[_h].data.length
      PUSH 100			m_txs[_h].data.length
      MUL 			m_txs[_h].data.length
      SUB 			m_txs[_h].data.length
      AND 			m_txs[_h].data.length
      PUSH 2			m_txs[_h].data.length
      SWAP1 			m_txs[_h].data.length
      DIV 			m_txs[_h].data.length
      SWAP1 			m_txs[_h].data.length
      POP 			m_txs[_h].data.length
      EQ 			m_txs[_h].data.length != 0
      ISZERO 			m_txs[_h].data.length != 0
    tag 112			m_txs[_h].to != 0 || m_txs[_h]...
      JUMPDEST 			m_txs[_h].to != 0 || m_txs[_h]...
      ISZERO 			if (m_txs[_h].to != 0 || m_txs...
      PUSH [tag] 113			if (m_txs[_h].to != 0 || m_txs...
      JUMPI 			if (m_txs[_h].to != 0 || m_txs...
      PUSH 0			0
      PUSH 108			m_txs
      PUSH 0			m_txs[_h]
      DUP7 			_h
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      SWAP1 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      PUSH 0			m_txs[_h]
      KECCAK256 			m_txs[_h]
      PUSH 0			m_txs[_h].to
      ADD 			m_txs[_h].to
      PUSH 0			m_txs[_h].to
      SWAP1 			m_txs[_h].to
      SLOAD 			m_txs[_h].to
      SWAP1 			m_txs[_h].to
      PUSH 100			m_txs[_h].to
      EXP 			m_txs[_h].to
      SWAP1 			m_txs[_h].to
      DIV 			m_txs[_h].to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			m_txs[_h].to
      AND 			m_txs[_h].to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			m_txs[_h].to == 0
      AND 			m_txs[_h].to == 0
      EQ 			m_txs[_h].to == 0
      ISZERO 			if (m_txs[_h].to == 0) {\n				...
      PUSH [tag] 114			if (m_txs[_h].to == 0) {\n				...
      JUMPI 			if (m_txs[_h].to == 0) {\n				...
      PUSH [tag] 115			create(m_txs[_h].value, m_txs[...
      PUSH 108			m_txs
      PUSH 0			m_txs[_h]
      DUP7 			_h
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      SWAP1 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      PUSH 0			m_txs[_h]
      KECCAK256 			m_txs[_h]
      PUSH 1			m_txs[_h].value
      ADD 			m_txs[_h].value
      SLOAD 			m_txs[_h].value
      PUSH 108			m_txs
      PUSH 0			m_txs[_h]
      DUP8 			_h
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      SWAP1 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      PUSH 0			m_txs[_h]
      KECCAK256 			m_txs[_h]
      PUSH 2			m_txs[_h].data
      ADD 			m_txs[_h].data
      DUP1 			create(m_txs[_h].value, m_txs[...
      SLOAD 			create(m_txs[_h].value, m_txs[...
      PUSH 1			create(m_txs[_h].value, m_txs[...
      DUP2 			create(m_txs[_h].value, m_txs[...
      PUSH 1			create(m_txs[_h].value, m_txs[...
      AND 			create(m_txs[_h].value, m_txs[...
      ISZERO 			create(m_txs[_h].value, m_txs[...
      PUSH 100			create(m_txs[_h].value, m_txs[...
      MUL 			create(m_txs[_h].value, m_txs[...
      SUB 			create(m_txs[_h].value, m_txs[...
      AND 			create(m_txs[_h].value, m_txs[...
      PUSH 2			create(m_txs[_h].value, m_txs[...
      SWAP1 			create(m_txs[_h].value, m_txs[...
      DIV 			create(m_txs[_h].value, m_txs[...
      DUP1 			create(m_txs[_h].value, m_txs[...
      PUSH 1F			create(m_txs[_h].value, m_txs[...
      ADD 			create(m_txs[_h].value, m_txs[...
      PUSH 20			create(m_txs[_h].value, m_txs[...
      DUP1 			create(m_txs[_h].value, m_txs[...
      SWAP2 			create(m_txs[_h].value, m_txs[...
      DIV 			create(m_txs[_h].value, m_txs[...
      MUL 			create(m_txs[_h].value, m_txs[...
      PUSH 20			create(m_txs[_h].value, m_txs[...
      ADD 			create(m_txs[_h].value, m_txs[...
      PUSH 40			create(m_txs[_h].value, m_txs[...
      MLOAD 			create(m_txs[_h].value, m_txs[...
      SWAP1 			create(m_txs[_h].value, m_txs[...
      DUP2 			create(m_txs[_h].value, m_txs[...
      ADD 			create(m_txs[_h].value, m_txs[...
      PUSH 40			create(m_txs[_h].value, m_txs[...
      MSTORE 			create(m_txs[_h].value, m_txs[...
      DUP1 			create(m_txs[_h].value, m_txs[...
      SWAP3 			create(m_txs[_h].value, m_txs[...
      SWAP2 			create(m_txs[_h].value, m_txs[...
      SWAP1 			create(m_txs[_h].value, m_txs[...
      DUP2 			create(m_txs[_h].value, m_txs[...
      DUP2 			create(m_txs[_h].value, m_txs[...
      MSTORE 			create(m_txs[_h].value, m_txs[...
      PUSH 20			create(m_txs[_h].value, m_txs[...
      ADD 			create(m_txs[_h].value, m_txs[...
      DUP3 			create(m_txs[_h].value, m_txs[...
      DUP1 			create(m_txs[_h].value, m_txs[...
      SLOAD 			create(m_txs[_h].value, m_txs[...
      PUSH 1			create(m_txs[_h].value, m_txs[...
      DUP2 			create(m_txs[_h].value, m_txs[...
      PUSH 1			create(m_txs[_h].value, m_txs[...
      AND 			create(m_txs[_h].value, m_txs[...
      ISZERO 			create(m_txs[_h].value, m_txs[...
      PUSH 100			create(m_txs[_h].value, m_txs[...
      MUL 			create(m_txs[_h].value, m_txs[...
      SUB 			create(m_txs[_h].value, m_txs[...
      AND 			create(m_txs[_h].value, m_txs[...
      PUSH 2			create(m_txs[_h].value, m_txs[...
      SWAP1 			create(m_txs[_h].value, m_txs[...
      DIV 			create(m_txs[_h].value, m_txs[...
      DUP1 			create(m_txs[_h].value, m_txs[...
      ISZERO 			create(m_txs[_h].value, m_txs[...
      PUSH [tag] 116			create(m_txs[_h].value, m_txs[...
      JUMPI 			create(m_txs[_h].value, m_txs[...
      DUP1 			create(m_txs[_h].value, m_txs[...
      PUSH 1F			create(m_txs[_h].value, m_txs[...
      LT 			create(m_txs[_h].value, m_txs[...
      PUSH [tag] 117			create(m_txs[_h].value, m_txs[...
      JUMPI 			create(m_txs[_h].value, m_txs[...
      PUSH 100			create(m_txs[_h].value, m_txs[...
      DUP1 			create(m_txs[_h].value, m_txs[...
      DUP4 			create(m_txs[_h].value, m_txs[...
      SLOAD 			create(m_txs[_h].value, m_txs[...
      DIV 			create(m_txs[_h].value, m_txs[...
      MUL 			create(m_txs[_h].value, m_txs[...
      DUP4 			create(m_txs[_h].value, m_txs[...
      MSTORE 			create(m_txs[_h].value, m_txs[...
      SWAP2 			create(m_txs[_h].value, m_txs[...
      PUSH 20			create(m_txs[_h].value, m_txs[...
      ADD 			create(m_txs[_h].value, m_txs[...
      SWAP2 			create(m_txs[_h].value, m_txs[...
      PUSH [tag] 116			create(m_txs[_h].value, m_txs[...
      JUMP 			create(m_txs[_h].value, m_txs[...
    tag 117			create(m_txs[_h].value, m_txs[...
      JUMPDEST 			create(m_txs[_h].value, m_txs[...
      DUP3 			create(m_txs[_h].value, m_txs[...
      ADD 			create(m_txs[_h].value, m_txs[...
      SWAP2 			create(m_txs[_h].value, m_txs[...
      SWAP1 			create(m_txs[_h].value, m_txs[...
      PUSH 0			create(m_txs[_h].value, m_txs[...
      MSTORE 			create(m_txs[_h].value, m_txs[...
      PUSH 20			create(m_txs[_h].value, m_txs[...
      PUSH 0			create(m_txs[_h].value, m_txs[...
      KECCAK256 			create(m_txs[_h].value, m_txs[...
      SWAP1 			create(m_txs[_h].value, m_txs[...
    tag 118			create(m_txs[_h].value, m_txs[...
      JUMPDEST 			create(m_txs[_h].value, m_txs[...
      DUP2 			create(m_txs[_h].value, m_txs[...
      SLOAD 			create(m_txs[_h].value, m_txs[...
      DUP2 			create(m_txs[_h].value, m_txs[...
      MSTORE 			create(m_txs[_h].value, m_txs[...
      SWAP1 			create(m_txs[_h].value, m_txs[...
      PUSH 1			create(m_txs[_h].value, m_txs[...
      ADD 			create(m_txs[_h].value, m_txs[...
      SWAP1 			create(m_txs[_h].value, m_txs[...
      PUSH 20			create(m_txs[_h].value, m_txs[...
      ADD 			create(m_txs[_h].value, m_txs[...
      DUP1 			create(m_txs[_h].value, m_txs[...
      DUP4 			create(m_txs[_h].value, m_txs[...
      GT 			create(m_txs[_h].value, m_txs[...
      PUSH [tag] 118			create(m_txs[_h].value, m_txs[...
      JUMPI 			create(m_txs[_h].value, m_txs[...
      DUP3 			create(m_txs[_h].value, m_txs[...
      SWAP1 			create(m_txs[_h].value, m_txs[...
      SUB 			create(m_txs[_h].value, m_txs[...
      PUSH 1F			create(m_txs[_h].value, m_txs[...
      AND 			create(m_txs[_h].value, m_txs[...
      DUP3 			create(m_txs[_h].value, m_txs[...
      ADD 			create(m_txs[_h].value, m_txs[...
      SWAP2 			create(m_txs[_h].value, m_txs[...
    tag 116			create(m_txs[_h].value, m_txs[...
      JUMPDEST 			create(m_txs[_h].value, m_txs[...
      POP 			create(m_txs[_h].value, m_txs[...
      POP 			create(m_txs[_h].value, m_txs[...
      POP 			create(m_txs[_h].value, m_txs[...
      POP 			create(m_txs[_h].value, m_txs[...
      POP 			create(m_txs[_h].value, m_txs[...
      PUSH [tag] 119			create
      JUMP [in]			create(m_txs[_h].value, m_txs[...
    tag 115			create(m_txs[_h].value, m_txs[...
      JUMPDEST 			create(m_txs[_h].value, m_txs[...
      SWAP2 			created = create(m_txs[_h].val...
      POP 			created = create(m_txs[_h].val...
      PUSH [tag] 120			if (m_txs[_h].to == 0) {\n				...
      JUMP 			if (m_txs[_h].to == 0) {\n				...
    tag 114			if (m_txs[_h].to == 0) {\n				...
      JUMPDEST 			if (m_txs[_h].to == 0) {\n				...
      PUSH 108			m_txs
      PUSH 0			m_txs[_h]
      DUP6 			_h
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      SWAP1 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      PUSH 0			m_txs[_h]
      KECCAK256 			m_txs[_h]
      PUSH 0			m_txs[_h].to
      ADD 			m_txs[_h].to
      PUSH 0			m_txs[_h].to
      SWAP1 			m_txs[_h].to
      SLOAD 			m_txs[_h].to
      SWAP1 			m_txs[_h].to
      PUSH 100			m_txs[_h].to
      EXP 			m_txs[_h].to
      SWAP1 			m_txs[_h].to
      DIV 			m_txs[_h].to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			m_txs[_h].to
      AND 			m_txs[_h].to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			m_txs[_h].to.call
      AND 			m_txs[_h].to.call
      PUSH 108			m_txs
      PUSH 0			m_txs[_h]
      DUP7 			_h
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      SWAP1 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      PUSH 0			m_txs[_h]
      KECCAK256 			m_txs[_h]
      PUSH 1			m_txs[_h].value
      ADD 			m_txs[_h].value
      SLOAD 			m_txs[_h].value
      PUSH 108			m_txs
      PUSH 0			m_txs[_h]
      DUP8 			_h
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      SWAP1 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      PUSH 0			m_txs[_h]
      KECCAK256 			m_txs[_h]
      PUSH 2			m_txs[_h].data
      ADD 			m_txs[_h].data
      PUSH 40			m_txs[_h].to.call.value(m_txs[...
      MLOAD 			m_txs[_h].to.call.value(m_txs[...
      DUP1 			m_txs[_h].to.call.value(m_txs[...
      DUP3 			m_txs[_h].to.call.value(m_txs[...
      DUP1 			m_txs[_h].to.call.value(m_txs[...
      SLOAD 			m_txs[_h].to.call.value(m_txs[...
      PUSH 1			m_txs[_h].to.call.value(m_txs[...
      DUP2 			m_txs[_h].to.call.value(m_txs[...
      PUSH 1			m_txs[_h].to.call.value(m_txs[...
      AND 			m_txs[_h].to.call.value(m_txs[...
      ISZERO 			m_txs[_h].to.call.value(m_txs[...
      PUSH 100			m_txs[_h].to.call.value(m_txs[...
      MUL 			m_txs[_h].to.call.value(m_txs[...
      SUB 			m_txs[_h].to.call.value(m_txs[...
      AND 			m_txs[_h].to.call.value(m_txs[...
      PUSH 2			m_txs[_h].to.call.value(m_txs[...
      SWAP1 			m_txs[_h].to.call.value(m_txs[...
      DIV 			m_txs[_h].to.call.value(m_txs[...
      DUP1 			m_txs[_h].to.call.value(m_txs[...
      ISZERO 			m_txs[_h].to.call.value(m_txs[...
      PUSH [tag] 121			m_txs[_h].to.call.value(m_txs[...
      JUMPI 			m_txs[_h].to.call.value(m_txs[...
      DUP1 			m_txs[_h].to.call.value(m_txs[...
      PUSH 1F			m_txs[_h].to.call.value(m_txs[...
      LT 			m_txs[_h].to.call.value(m_txs[...
      PUSH [tag] 122			m_txs[_h].to.call.value(m_txs[...
      JUMPI 			m_txs[_h].to.call.value(m_txs[...
      PUSH 100			m_txs[_h].to.call.value(m_txs[...
      DUP1 			m_txs[_h].to.call.value(m_txs[...
      DUP4 			m_txs[_h].to.call.value(m_txs[...
      SLOAD 			m_txs[_h].to.call.value(m_txs[...
      DIV 			m_txs[_h].to.call.value(m_txs[...
      MUL 			m_txs[_h].to.call.value(m_txs[...
      DUP4 			m_txs[_h].to.call.value(m_txs[...
      MSTORE 			m_txs[_h].to.call.value(m_txs[...
      SWAP2 			m_txs[_h].to.call.value(m_txs[...
      PUSH 20			m_txs[_h].to.call.value(m_txs[...
      ADD 			m_txs[_h].to.call.value(m_txs[...
      SWAP2 			m_txs[_h].to.call.value(m_txs[...
      PUSH [tag] 121			m_txs[_h].to.call.value(m_txs[...
      JUMP 			m_txs[_h].to.call.value(m_txs[...
    tag 122			m_txs[_h].to.call.value(m_txs[...
      JUMPDEST 			m_txs[_h].to.call.value(m_txs[...
      DUP3 			m_txs[_h].to.call.value(m_txs[...
      ADD 			m_txs[_h].to.call.value(m_txs[...
      SWAP2 			m_txs[_h].to.call.value(m_txs[...
      SWAP1 			m_txs[_h].to.call.value(m_txs[...
      PUSH 0			m_txs[_h].to.call.value(m_txs[...
      MSTORE 			m_txs[_h].to.call.value(m_txs[...
      PUSH 20			m_txs[_h].to.call.value(m_txs[...
      PUSH 0			m_txs[_h].to.call.value(m_txs[...
      KECCAK256 			m_txs[_h].to.call.value(m_txs[...
      SWAP1 			m_txs[_h].to.call.value(m_txs[...
    tag 123			m_txs[_h].to.call.value(m_txs[...
      JUMPDEST 			m_txs[_h].to.call.value(m_txs[...
      DUP2 			m_txs[_h].to.call.value(m_txs[...
      SLOAD 			m_txs[_h].to.call.value(m_txs[...
      DUP2 			m_txs[_h].to.call.value(m_txs[...
      MSTORE 			m_txs[_h].to.call.value(m_txs[...
      SWAP1 			m_txs[_h].to.call.value(m_txs[...
      PUSH 1			m_txs[_h].to.call.value(m_txs[...
      ADD 			m_txs[_h].to.call.value(m_txs[...
      SWAP1 			m_txs[_h].to.call.value(m_txs[...
      PUSH 20			m_txs[_h].to.call.value(m_txs[...
      ADD 			m_txs[_h].to.call.value(m_txs[...
      DUP1 			m_txs[_h].to.call.value(m_txs[...
      DUP4 			m_txs[_h].to.call.value(m_txs[...
      GT 			m_txs[_h].to.call.value(m_txs[...
      PUSH [tag] 123			m_txs[_h].to.call.value(m_txs[...
      JUMPI 			m_txs[_h].to.call.value(m_txs[...
      DUP3 			m_txs[_h].to.call.value(m_txs[...
      SWAP1 			m_txs[_h].to.call.value(m_txs[...
      SUB 			m_txs[_h].to.call.value(m_txs[...
      PUSH 1F			m_txs[_h].to.call.value(m_txs[...
      AND 			m_txs[_h].to.call.value(m_txs[...
      DUP3 			m_txs[_h].to.call.value(m_txs[...
      ADD 			m_txs[_h].to.call.value(m_txs[...
      SWAP2 			m_txs[_h].to.call.value(m_txs[...
    tag 121			m_txs[_h].to.call.value(m_txs[...
      JUMPDEST 			m_txs[_h].to.call.value(m_txs[...
      POP 			m_txs[_h].to.call.value(m_txs[...
      POP 			m_txs[_h].to.call.value(m_txs[...
      SWAP2 			m_txs[_h].to.call.value(m_txs[...
      POP 			m_txs[_h].to.call.value(m_txs[...
      POP 			m_txs[_h].to.call.value(m_txs[...
      PUSH 0			m_txs[_h].to.call.value(m_txs[...
      PUSH 40			m_txs[_h].to.call.value(m_txs[...
      MLOAD 			m_txs[_h].to.call.value(m_txs[...
      DUP1 			m_txs[_h].to.call.value(m_txs[...
      DUP4 			m_txs[_h].to.call.value(m_txs[...
      SUB 			m_txs[_h].to.call.value(m_txs[...
      DUP2 			m_txs[_h].to.call.value(m_txs[...
      DUP6 			m_txs[_h].to.call.value(m_txs[...
      DUP8 			m_txs[_h].to.call.value(m_txs[...
      PUSH 8796			m_txs[_h].to.call.value(m_txs[...
      GAS 			m_txs[_h].to.call.value(m_txs[...
      SUB 			m_txs[_h].to.call.value(m_txs[...
      CALL 			m_txs[_h].to.call.value(m_txs[...
      SWAP3 			m_txs[_h].to.call.value(m_txs[...
      POP 			m_txs[_h].to.call.value(m_txs[...
      POP 			m_txs[_h].to.call.value(m_txs[...
      POP 			m_txs[_h].to.call.value(m_txs[...
      ISZERO 			require(m_txs[_h].to.call.valu...
      ISZERO 			require(m_txs[_h].to.call.valu...
      PUSH [tag] 124			require(m_txs[_h].to.call.valu...
      JUMPI 			require(m_txs[_h].to.call.valu...
      PUSH 0			require(m_txs[_h].to.call.valu...
      DUP1 			require(m_txs[_h].to.call.valu...
      REVERT 			require(m_txs[_h].to.call.valu...
    tag 124			require(m_txs[_h].to.call.valu...
      JUMPDEST 			require(m_txs[_h].to.call.valu...
    tag 120			if (m_txs[_h].to == 0) {\n				...
      JUMPDEST 			if (m_txs[_h].to == 0) {\n				...
      PUSH E3A3A4111A84DF27D76B68DC721E65C7711605EA5EEE4AFD3A9C58195217365C			MultiTransact(msg.sender, _h, ...
      CALLER 			msg.sender
      DUP6 			_h
      PUSH 108			m_txs
      PUSH 0			m_txs[_h]
      DUP9 			_h
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      SWAP1 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      PUSH 0			m_txs[_h]
      KECCAK256 			m_txs[_h]
      PUSH 1			m_txs[_h].value
      ADD 			m_txs[_h].value
      SLOAD 			m_txs[_h].value
      PUSH 108			m_txs
      PUSH 0			m_txs[_h]
      DUP10 			_h
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      SWAP1 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      PUSH 0			m_txs[_h]
      KECCAK256 			m_txs[_h]
      PUSH 0			m_txs[_h].to
      ADD 			m_txs[_h].to
      PUSH 0			m_txs[_h].to
      SWAP1 			m_txs[_h].to
      SLOAD 			m_txs[_h].to
      SWAP1 			m_txs[_h].to
      PUSH 100			m_txs[_h].to
      EXP 			m_txs[_h].to
      SWAP1 			m_txs[_h].to
      DIV 			m_txs[_h].to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			m_txs[_h].to
      AND 			m_txs[_h].to
      PUSH 108			m_txs
      PUSH 0			m_txs[_h]
      DUP11 			_h
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      SWAP1 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      PUSH 0			m_txs[_h]
      KECCAK256 			m_txs[_h]
      PUSH 2			m_txs[_h].data
      ADD 			m_txs[_h].data
      DUP8 			created
      PUSH 40			MultiTransact(msg.sender, _h, ...
      MLOAD 			MultiTransact(msg.sender, _h, ...
      DUP1 			MultiTransact(msg.sender, _h, ...
      DUP8 			MultiTransact(msg.sender, _h, ...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			MultiTransact(msg.sender, _h, ...
      AND 			MultiTransact(msg.sender, _h, ...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			MultiTransact(msg.sender, _h, ...
      AND 			MultiTransact(msg.sender, _h, ...
      DUP2 			MultiTransact(msg.sender, _h, ...
      MSTORE 			MultiTransact(msg.sender, _h, ...
      PUSH 20			MultiTransact(msg.sender, _h, ...
      ADD 			MultiTransact(msg.sender, _h, ...
      DUP7 			MultiTransact(msg.sender, _h, ...
      PUSH 0			MultiTransact(msg.sender, _h, ...
      NOT 			MultiTransact(msg.sender, _h, ...
      AND 			MultiTransact(msg.sender, _h, ...
      PUSH 0			MultiTransact(msg.sender, _h, ...
      NOT 			MultiTransact(msg.sender, _h, ...
      AND 			MultiTransact(msg.sender, _h, ...
      DUP2 			MultiTransact(msg.sender, _h, ...
      MSTORE 			MultiTransact(msg.sender, _h, ...
      PUSH 20			MultiTransact(msg.sender, _h, ...
      ADD 			MultiTransact(msg.sender, _h, ...
      DUP6 			MultiTransact(msg.sender, _h, ...
      DUP2 			MultiTransact(msg.sender, _h, ...
      MSTORE 			MultiTransact(msg.sender, _h, ...
      PUSH 20			MultiTransact(msg.sender, _h, ...
      ADD 			MultiTransact(msg.sender, _h, ...
      DUP5 			MultiTransact(msg.sender, _h, ...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			MultiTransact(msg.sender, _h, ...
      AND 			MultiTransact(msg.sender, _h, ...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			MultiTransact(msg.sender, _h, ...
      AND 			MultiTransact(msg.sender, _h, ...
      DUP2 			MultiTransact(msg.sender, _h, ...
      MSTORE 			MultiTransact(msg.sender, _h, ...
      PUSH 20			MultiTransact(msg.sender, _h, ...
      ADD 			MultiTransact(msg.sender, _h, ...
      DUP1 			MultiTransact(msg.sender, _h, ...
      PUSH 20			MultiTransact(msg.sender, _h, ...
      ADD 			MultiTransact(msg.sender, _h, ...
      DUP4 			MultiTransact(msg.sender, _h, ...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			MultiTransact(msg.sender, _h, ...
      AND 			MultiTransact(msg.sender, _h, ...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			MultiTransact(msg.sender, _h, ...
      AND 			MultiTransact(msg.sender, _h, ...
      DUP2 			MultiTransact(msg.sender, _h, ...
      MSTORE 			MultiTransact(msg.sender, _h, ...
      PUSH 20			MultiTransact(msg.sender, _h, ...
      ADD 			MultiTransact(msg.sender, _h, ...
      DUP3 			MultiTransact(msg.sender, _h, ...
      DUP2 			MultiTransact(msg.sender, _h, ...
      SUB 			MultiTransact(msg.sender, _h, ...
      DUP3 			MultiTransact(msg.sender, _h, ...
      MSTORE 			MultiTransact(msg.sender, _h, ...
      DUP5 			MultiTransact(msg.sender, _h, ...
      DUP2 			MultiTransact(msg.sender, _h, ...
      DUP2 			MultiTransact(msg.sender, _h, ...
      SLOAD 			MultiTransact(msg.sender, _h, ...
      PUSH 1			MultiTransact(msg.sender, _h, ...
      DUP2 			MultiTransact(msg.sender, _h, ...
      PUSH 1			MultiTransact(msg.sender, _h, ...
      AND 			MultiTransact(msg.sender, _h, ...
      ISZERO 			MultiTransact(msg.sender, _h, ...
      PUSH 100			MultiTransact(msg.sender, _h, ...
      MUL 			MultiTransact(msg.sender, _h, ...
      SUB 			MultiTransact(msg.sender, _h, ...
      AND 			MultiTransact(msg.sender, _h, ...
      PUSH 2			MultiTransact(msg.sender, _h, ...
      SWAP1 			MultiTransact(msg.sender, _h, ...
      DIV 			MultiTransact(msg.sender, _h, ...
      DUP2 			MultiTransact(msg.sender, _h, ...
      MSTORE 			MultiTransact(msg.sender, _h, ...
      PUSH 20			MultiTransact(msg.sender, _h, ...
      ADD 			MultiTransact(msg.sender, _h, ...
      SWAP2 			MultiTransact(msg.sender, _h, ...
      POP 			MultiTransact(msg.sender, _h, ...
      DUP1 			MultiTransact(msg.sender, _h, ...
      SLOAD 			MultiTransact(msg.sender, _h, ...
      PUSH 1			MultiTransact(msg.sender, _h, ...
      DUP2 			MultiTransact(msg.sender, _h, ...
      PUSH 1			MultiTransact(msg.sender, _h, ...
      AND 			MultiTransact(msg.sender, _h, ...
      ISZERO 			MultiTransact(msg.sender, _h, ...
      PUSH 100			MultiTransact(msg.sender, _h, ...
      MUL 			MultiTransact(msg.sender, _h, ...
      SUB 			MultiTransact(msg.sender, _h, ...
      AND 			MultiTransact(msg.sender, _h, ...
      PUSH 2			MultiTransact(msg.sender, _h, ...
      SWAP1 			MultiTransact(msg.sender, _h, ...
      DIV 			MultiTransact(msg.sender, _h, ...
      DUP1 			MultiTransact(msg.sender, _h, ...
      ISZERO 			MultiTransact(msg.sender, _h, ...
      PUSH [tag] 125			MultiTransact(msg.sender, _h, ...
      JUMPI 			MultiTransact(msg.sender, _h, ...
      DUP1 			MultiTransact(msg.sender, _h, ...
      PUSH 1F			MultiTransact(msg.sender, _h, ...
      LT 			MultiTransact(msg.sender, _h, ...
      PUSH [tag] 126			MultiTransact(msg.sender, _h, ...
      JUMPI 			MultiTransact(msg.sender, _h, ...
      PUSH 100			MultiTransact(msg.sender, _h, ...
      DUP1 			MultiTransact(msg.sender, _h, ...
      DUP4 			MultiTransact(msg.sender, _h, ...
      SLOAD 			MultiTransact(msg.sender, _h, ...
      DIV 			MultiTransact(msg.sender, _h, ...
      MUL 			MultiTransact(msg.sender, _h, ...
      DUP4 			MultiTransact(msg.sender, _h, ...
      MSTORE 			MultiTransact(msg.sender, _h, ...
      SWAP2 			MultiTransact(msg.sender, _h, ...
      PUSH 20			MultiTransact(msg.sender, _h, ...
      ADD 			MultiTransact(msg.sender, _h, ...
      SWAP2 			MultiTransact(msg.sender, _h, ...
      PUSH [tag] 125			MultiTransact(msg.sender, _h, ...
      JUMP 			MultiTransact(msg.sender, _h, ...
    tag 126			MultiTransact(msg.sender, _h, ...
      JUMPDEST 			MultiTransact(msg.sender, _h, ...
      DUP3 			MultiTransact(msg.sender, _h, ...
      ADD 			MultiTransact(msg.sender, _h, ...
      SWAP2 			MultiTransact(msg.sender, _h, ...
      SWAP1 			MultiTransact(msg.sender, _h, ...
      PUSH 0			MultiTransact(msg.sender, _h, ...
      MSTORE 			MultiTransact(msg.sender, _h, ...
      PUSH 20			MultiTransact(msg.sender, _h, ...
      PUSH 0			MultiTransact(msg.sender, _h, ...
      KECCAK256 			MultiTransact(msg.sender, _h, ...
      SWAP1 			MultiTransact(msg.sender, _h, ...
    tag 127			MultiTransact(msg.sender, _h, ...
      JUMPDEST 			MultiTransact(msg.sender, _h, ...
      DUP2 			MultiTransact(msg.sender, _h, ...
      SLOAD 			MultiTransact(msg.sender, _h, ...
      DUP2 			MultiTransact(msg.sender, _h, ...
      MSTORE 			MultiTransact(msg.sender, _h, ...
      SWAP1 			MultiTransact(msg.sender, _h, ...
      PUSH 1			MultiTransact(msg.sender, _h, ...
      ADD 			MultiTransact(msg.sender, _h, ...
      SWAP1 			MultiTransact(msg.sender, _h, ...
      PUSH 20			MultiTransact(msg.sender, _h, ...
      ADD 			MultiTransact(msg.sender, _h, ...
      DUP1 			MultiTransact(msg.sender, _h, ...
      DUP4 			MultiTransact(msg.sender, _h, ...
      GT 			MultiTransact(msg.sender, _h, ...
      PUSH [tag] 127			MultiTransact(msg.sender, _h, ...
      JUMPI 			MultiTransact(msg.sender, _h, ...
      DUP3 			MultiTransact(msg.sender, _h, ...
      SWAP1 			MultiTransact(msg.sender, _h, ...
      SUB 			MultiTransact(msg.sender, _h, ...
      PUSH 1F			MultiTransact(msg.sender, _h, ...
      AND 			MultiTransact(msg.sender, _h, ...
      DUP3 			MultiTransact(msg.sender, _h, ...
      ADD 			MultiTransact(msg.sender, _h, ...
      SWAP2 			MultiTransact(msg.sender, _h, ...
    tag 125			MultiTransact(msg.sender, _h, ...
      JUMPDEST 			MultiTransact(msg.sender, _h, ...
      POP 			MultiTransact(msg.sender, _h, ...
      POP 			MultiTransact(msg.sender, _h, ...
      SWAP8 			MultiTransact(msg.sender, _h, ...
      POP 			MultiTransact(msg.sender, _h, ...
      POP 			MultiTransact(msg.sender, _h, ...
      POP 			MultiTransact(msg.sender, _h, ...
      POP 			MultiTransact(msg.sender, _h, ...
      POP 			MultiTransact(msg.sender, _h, ...
      POP 			MultiTransact(msg.sender, _h, ...
      POP 			MultiTransact(msg.sender, _h, ...
      POP 			MultiTransact(msg.sender, _h, ...
      PUSH 40			MultiTransact(msg.sender, _h, ...
      MLOAD 			MultiTransact(msg.sender, _h, ...
      DUP1 			MultiTransact(msg.sender, _h, ...
      SWAP2 			MultiTransact(msg.sender, _h, ...
      SUB 			MultiTransact(msg.sender, _h, ...
      SWAP1 			MultiTransact(msg.sender, _h, ...
      LOG1 			MultiTransact(msg.sender, _h, ...
      PUSH 108			m_txs
      PUSH 0			m_txs[_h]
      DUP6 			_h
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      PUSH 0			m_txs[_h]
      NOT 			m_txs[_h]
      AND 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      SWAP1 			m_txs[_h]
      DUP2 			m_txs[_h]
      MSTORE 			m_txs[_h]
      PUSH 20			m_txs[_h]
      ADD 			m_txs[_h]
      PUSH 0			m_txs[_h]
      KECCAK256 			m_txs[_h]
      PUSH 0			m_txs[_h]
      DUP1 			delete m_txs[_h]
      DUP3 			delete m_txs[_h]
      ADD 			delete m_txs[_h]
      PUSH 0			delete m_txs[_h]
      PUSH 100			delete m_txs[_h]
      EXP 			delete m_txs[_h]
      DUP2 			delete m_txs[_h]
      SLOAD 			delete m_txs[_h]
      SWAP1 			delete m_txs[_h]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			delete m_txs[_h]
      MUL 			delete m_txs[_h]
      NOT 			delete m_txs[_h]
      AND 			delete m_txs[_h]
      SWAP1 			delete m_txs[_h]
      SSTORE 			delete m_txs[_h]
      PUSH 1			delete m_txs[_h]
      DUP3 			delete m_txs[_h]
      ADD 			delete m_txs[_h]
      PUSH 0			delete m_txs[_h]
      SWAP1 			delete m_txs[_h]
      SSTORE 			delete m_txs[_h]
      PUSH 2			delete m_txs[_h]
      DUP3 			delete m_txs[_h]
      ADD 			delete m_txs[_h]
      PUSH 0			delete m_txs[_h]
      PUSH [tag] 128			delete m_txs[_h]
      SWAP2 			delete m_txs[_h]
      SWAP1 			delete m_txs[_h]
      PUSH [tag] 129			delete m_txs[_h]
      JUMP [in]			delete m_txs[_h]
    tag 128			delete m_txs[_h]
      JUMPDEST 			delete m_txs[_h]
      POP 			delete m_txs[_h]
      POP 			delete m_txs[_h]
      PUSH 1			true
      SWAP3 			return true
      POP 			return true
      PUSH [tag] 110			return true
      JUMP 			return true
    tag 113			if (m_txs[_h].to != 0 || m_txs...
      JUMPDEST 			if (m_txs[_h].to != 0 || m_txs...
    tag 110			_
      JUMPDEST 			_
    tag 109			if (confirmAndCheck(_operation...
      JUMPDEST 			if (confirmAndCheck(_operation...
      POP 			function confirm(bytes32 _h) o...
      POP 			function confirm(bytes32 _h) o...
      SWAP2 			function confirm(bytes32 _h) o...
      SWAP1 			function confirm(bytes32 _h) o...
      POP 			function confirm(bytes32 _h) o...
      JUMP [out]			function confirm(bytes32 _h) o...
    tag 52			function setDailyLimit(uint _n...
      JUMPDEST 			function setDailyLimit(uint _n...
      PUSH 0			msg.data
      CALLDATASIZE 			msg.data
      PUSH 40			sha3(msg.data)
      MLOAD 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      DUP4 			sha3(msg.data)
      DUP4 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      DUP3 			sha3(msg.data)
      DUP5 			sha3(msg.data)
      CALLDATACOPY 			sha3(msg.data)
      DUP3 			sha3(msg.data)
      ADD 			sha3(msg.data)
      SWAP2 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      SWAP3 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      PUSH 40			sha3(msg.data)
      MLOAD 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      SWAP2 			sha3(msg.data)
      SUB 			sha3(msg.data)
      SWAP1 			sha3(msg.data)
      KECCAK256 			sha3(msg.data)
      PUSH [tag] 131			confirmAndCheck(_operation)
      DUP2 			_operation
      PUSH [tag] 79			confirmAndCheck
      JUMP [in]			confirmAndCheck(_operation)
    tag 131			confirmAndCheck(_operation)
      JUMPDEST 			confirmAndCheck(_operation)
      ISZERO 			if (confirmAndCheck(_operation...
      PUSH [tag] 132			if (confirmAndCheck(_operation...
      JUMPI 			if (confirmAndCheck(_operation...
      DUP2 			_newLimit
      PUSH 105			m_dailyLimit
      DUP2 			m_dailyLimit = _newLimit
      SWAP1 			m_dailyLimit = _newLimit
      SSTORE 			m_dailyLimit = _newLimit
      POP 			m_dailyLimit = _newLimit
    tag 132			if (confirmAndCheck(_operation...
      JUMPDEST 			if (confirmAndCheck(_operation...
      POP 			function setDailyLimit(uint _n...
      POP 			function setDailyLimit(uint _n...
      JUMP [out]			function setDailyLimit(uint _n...
    tag 55			function execute(address _to, ...
      JUMPDEST 			function execute(address _to, ...
      PUSH 0			bytes32 o_hash
      DUP1 			address created
      PUSH [tag] 135			isOwner(msg.sender)
      CALLER 			msg.sender
      PUSH [tag] 28			isOwner
      JUMP [in]			isOwner(msg.sender)
    tag 135			isOwner(msg.sender)
      JUMPDEST 			isOwner(msg.sender)
      ISZERO 			if (isOwner(msg.sender))\n			_
      PUSH [tag] 136			if (isOwner(msg.sender))\n			_
      JUMPI 			if (isOwner(msg.sender))\n			_
      PUSH 0			0
      DUP5 			_data
      DUP5 			_data
      SWAP1 			_data.length
      POP 			_data.length
      EQ 			_data.length == 0
      DUP1 			_data.length == 0 && underLimi...
      ISZERO 			_data.length == 0 && underLimi...
      PUSH [tag] 138			_data.length == 0 && underLimi...
      JUMPI 			_data.length == 0 && underLimi...
      POP 			_data.length == 0 && underLimi...
      PUSH [tag] 139			underLimit(_value)
      DUP6 			_value
      PUSH [tag] 140			underLimit
      JUMP [in]			underLimit(_value)
    tag 139			underLimit(_value)
      JUMPDEST 			underLimit(_value)
    tag 138			_data.length == 0 && underLimi...
      JUMPDEST 			_data.length == 0 && underLimi...
      DUP1 			(_data.length == 0 && underLim...
      PUSH [tag] 141			(_data.length == 0 && underLim...
      JUMPI 			(_data.length == 0 && underLim...
      POP 			(_data.length == 0 && underLim...
      PUSH 1			1
      PUSH 0			m_required
      SLOAD 			m_required
      EQ 			m_required == 1
    tag 141			(_data.length == 0 && underLim...
      JUMPDEST 			(_data.length == 0 && underLim...
      ISZERO 			if ((_data.length == 0 && unde...
      PUSH [tag] 142			if ((_data.length == 0 && unde...
      JUMPI 			if ((_data.length == 0 && unde...
      PUSH 0			0
      DUP7 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to == 0
      AND 			_to == 0
      EQ 			_to == 0
      ISZERO 			if (_to == 0) {\n				created =...
      PUSH [tag] 143			if (_to == 0) {\n				created =...
      JUMPI 			if (_to == 0) {\n				created =...
      PUSH [tag] 144			create(_value, _data)
      DUP6 			_value
      DUP6 			_data
      DUP6 			_data
      DUP1 			create(_value, _data)
      DUP1 			create(_value, _data)
      PUSH 1F			create(_value, _data)
      ADD 			create(_value, _data)
      PUSH 20			create(_value, _data)
      DUP1 			create(_value, _data)
      SWAP2 			create(_value, _data)
      DIV 			create(_value, _data)
      MUL 			create(_value, _data)
      PUSH 20			create(_value, _data)
      ADD 			create(_value, _data)
      PUSH 40			create(_value, _data)
      MLOAD 			create(_value, _data)
      SWAP1 			create(_value, _data)
      DUP2 			create(_value, _data)
      ADD 			create(_value, _data)
      PUSH 40			create(_value, _data)
      MSTORE 			create(_value, _data)
      DUP1 			create(_value, _data)
      SWAP4 			create(_value, _data)
      SWAP3 			create(_value, _data)
      SWAP2 			create(_value, _data)
      SWAP1 			create(_value, _data)
      DUP2 			create(_value, _data)
      DUP2 			create(_value, _data)
      MSTORE 			create(_value, _data)
      PUSH 20			create(_value, _data)
      ADD 			create(_value, _data)
      DUP4 			create(_value, _data)
      DUP4 			create(_value, _data)
      DUP1 			create(_value, _data)
      DUP3 			create(_value, _data)
      DUP5 			create(_value, _data)
      CALLDATACOPY 			create(_value, _data)
      DUP3 			create(_value, _data)
      ADD 			create(_value, _data)
      SWAP2 			create(_value, _data)
      POP 			create(_value, _data)
      POP 			create(_value, _data)
      POP 			create(_value, _data)
      POP 			create(_value, _data)
      POP 			create(_value, _data)
      POP 			create(_value, _data)
      PUSH [tag] 119			create
      JUMP [in]			create(_value, _data)
    tag 144			create(_value, _data)
      JUMPDEST 			create(_value, _data)
      SWAP1 			created = create(_value, _data...
      POP 			created = create(_value, _data...
      PUSH [tag] 145			if (_to == 0) {\n				created =...
      JUMP 			if (_to == 0) {\n				created =...
    tag 143			if (_to == 0) {\n				created =...
      JUMPDEST 			if (_to == 0) {\n				created =...
      DUP6 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to.call
      AND 			_to.call
      DUP6 			_value
      DUP6 			_data
      DUP6 			_data
      PUSH 40			_to.call.value(_value)(_data)
      MLOAD 			_to.call.value(_value)(_data)
      DUP1 			_to.call.value(_value)(_data)
      DUP4 			_to.call.value(_value)(_data)
      DUP4 			_to.call.value(_value)(_data)
      DUP1 			_to.call.value(_value)(_data)
      DUP3 			_to.call.value(_value)(_data)
      DUP5 			_to.call.value(_value)(_data)
      CALLDATACOPY 			_to.call.value(_value)(_data)
      DUP3 			_to.call.value(_value)(_data)
      ADD 			_to.call.value(_value)(_data)
      SWAP2 			_to.call.value(_value)(_data)
      POP 			_to.call.value(_value)(_data)
      POP 			_to.call.value(_value)(_data)
      SWAP3 			_to.call.value(_value)(_data)
      POP 			_to.call.value(_value)(_data)
      POP 			_to.call.value(_value)(_data)
      POP 			_to.call.value(_value)(_data)
      PUSH 0			_to.call.value(_value)(_data)
      PUSH 40			_to.call.value(_value)(_data)
      MLOAD 			_to.call.value(_value)(_data)
      DUP1 			_to.call.value(_value)(_data)
      DUP4 			_to.call.value(_value)(_data)
      SUB 			_to.call.value(_value)(_data)
      DUP2 			_to.call.value(_value)(_data)
      DUP6 			_to.call.value(_value)(_data)
      DUP8 			_to.call.value(_value)(_data)
      PUSH 8796			_to.call.value(_value)(_data)
      GAS 			_to.call.value(_value)(_data)
      SUB 			_to.call.value(_value)(_data)
      CALL 			_to.call.value(_value)(_data)
      SWAP3 			_to.call.value(_value)(_data)
      POP 			_to.call.value(_value)(_data)
      POP 			_to.call.value(_value)(_data)
      POP 			_to.call.value(_value)(_data)
      ISZERO 			require(_to.call.value(_value)...
      ISZERO 			require(_to.call.value(_value)...
      PUSH [tag] 146			require(_to.call.value(_value)...
      JUMPI 			require(_to.call.value(_value)...
      PUSH 0			require(_to.call.value(_value)...
      DUP1 			require(_to.call.value(_value)...
      REVERT 			require(_to.call.value(_value)...
    tag 146			require(_to.call.value(_value)...
      JUMPDEST 			require(_to.call.value(_value)...
    tag 145			if (_to == 0) {\n				created =...
      JUMPDEST 			if (_to == 0) {\n				created =...
      PUSH 9738CD1A8777C86B011F7B01D87D484217DC6AB5154A9D41EDA5D14AF8CAF292			SingleTransact(msg.sender, _va...
      CALLER 			msg.sender
      DUP7 			_value
      DUP9 			_to
      DUP8 			_data
      DUP8 			_data
      DUP7 			created
      PUSH 40			SingleTransact(msg.sender, _va...
      MLOAD 			SingleTransact(msg.sender, _va...
      DUP1 			SingleTransact(msg.sender, _va...
      DUP8 			SingleTransact(msg.sender, _va...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			SingleTransact(msg.sender, _va...
      AND 			SingleTransact(msg.sender, _va...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			SingleTransact(msg.sender, _va...
      AND 			SingleTransact(msg.sender, _va...
      DUP2 			SingleTransact(msg.sender, _va...
      MSTORE 			SingleTransact(msg.sender, _va...
      PUSH 20			SingleTransact(msg.sender, _va...
      ADD 			SingleTransact(msg.sender, _va...
      DUP7 			SingleTransact(msg.sender, _va...
      DUP2 			SingleTransact(msg.sender, _va...
      MSTORE 			SingleTransact(msg.sender, _va...
      PUSH 20			SingleTransact(msg.sender, _va...
      ADD 			SingleTransact(msg.sender, _va...
      DUP6 			SingleTransact(msg.sender, _va...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			SingleTransact(msg.sender, _va...
      AND 			SingleTransact(msg.sender, _va...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			SingleTransact(msg.sender, _va...
      AND 			SingleTransact(msg.sender, _va...
      DUP2 			SingleTransact(msg.sender, _va...
      MSTORE 			SingleTransact(msg.sender, _va...
      PUSH 20			SingleTransact(msg.sender, _va...
      ADD 			SingleTransact(msg.sender, _va...
      DUP1 			SingleTransact(msg.sender, _va...
      PUSH 20			SingleTransact(msg.sender, _va...
      ADD 			SingleTransact(msg.sender, _va...
      DUP4 			SingleTransact(msg.sender, _va...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			SingleTransact(msg.sender, _va...
      AND 			SingleTransact(msg.sender, _va...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			SingleTransact(msg.sender, _va...
      AND 			SingleTransact(msg.sender, _va...
      DUP2 			SingleTransact(msg.sender, _va...
      MSTORE 			SingleTransact(msg.sender, _va...
      PUSH 20			SingleTransact(msg.sender, _va...
      ADD 			SingleTransact(msg.sender, _va...
      DUP3 			SingleTransact(msg.sender, _va...
      DUP2 			SingleTransact(msg.sender, _va...
      SUB 			SingleTransact(msg.sender, _va...
      DUP3 			SingleTransact(msg.sender, _va...
      MSTORE 			SingleTransact(msg.sender, _va...
      DUP6 			SingleTransact(msg.sender, _va...
      DUP6 			SingleTransact(msg.sender, _va...
      DUP3 			SingleTransact(msg.sender, _va...
      DUP2 			SingleTransact(msg.sender, _va...
      DUP2 			SingleTransact(msg.sender, _va...
      MSTORE 			SingleTransact(msg.sender, _va...
      PUSH 20			SingleTransact(msg.sender, _va...
      ADD 			SingleTransact(msg.sender, _va...
      SWAP3 			SingleTransact(msg.sender, _va...
      POP 			SingleTransact(msg.sender, _va...
      DUP1 			SingleTransact(msg.sender, _va...
      DUP3 			SingleTransact(msg.sender, _va...
      DUP5 			SingleTransact(msg.sender, _va...
      CALLDATACOPY 			SingleTransact(msg.sender, _va...
      DUP3 			SingleTransact(msg.sender, _va...
      ADD 			SingleTransact(msg.sender, _va...
      SWAP2 			SingleTransact(msg.sender, _va...
      POP 			SingleTransact(msg.sender, _va...
      POP 			SingleTransact(msg.sender, _va...
      SWAP8 			SingleTransact(msg.sender, _va...
      POP 			SingleTransact(msg.sender, _va...
      POP 			SingleTransact(msg.sender, _va...
      POP 			SingleTransact(msg.sender, _va...
      POP 			SingleTransact(msg.sender, _va...
      POP 			SingleTransact(msg.sender, _va...
      POP 			SingleTransact(msg.sender, _va...
      POP 			SingleTransact(msg.sender, _va...
      POP 			SingleTransact(msg.sender, _va...
      PUSH 40			SingleTransact(msg.sender, _va...
      MLOAD 			SingleTransact(msg.sender, _va...
      DUP1 			SingleTransact(msg.sender, _va...
      SWAP2 			SingleTransact(msg.sender, _va...
      SUB 			SingleTransact(msg.sender, _va...
      SWAP1 			SingleTransact(msg.sender, _va...
      LOG1 			SingleTransact(msg.sender, _va...
      PUSH [tag] 147			if ((_data.length == 0 && unde...
      JUMP 			if ((_data.length == 0 && unde...
    tag 142			if ((_data.length == 0 && unde...
      JUMPDEST 			if ((_data.length == 0 && unde...
      PUSH 0			msg.data
      CALLDATASIZE 			msg.data
      NUMBER 			block.number
      PUSH 40			sha3(msg.data, block.number)
      MLOAD 			sha3(msg.data, block.number)
      DUP1 			sha3(msg.data, block.number)
      DUP5 			sha3(msg.data, block.number)
      DUP5 			sha3(msg.data, block.number)
      DUP1 			sha3(msg.data, block.number)
      DUP3 			sha3(msg.data, block.number)
      DUP5 			sha3(msg.data, block.number)
      CALLDATACOPY 			sha3(msg.data, block.number)
      DUP3 			sha3(msg.data, block.number)
      ADD 			sha3(msg.data, block.number)
      SWAP2 			sha3(msg.data, block.number)
      POP 			sha3(msg.data, block.number)
      POP 			sha3(msg.data, block.number)
      DUP3 			sha3(msg.data, block.number)
      DUP2 			sha3(msg.data, block.number)
      MSTORE 			sha3(msg.data, block.number)
      PUSH 20			sha3(msg.data, block.number)
      ADD 			sha3(msg.data, block.number)
      SWAP4 			sha3(msg.data, block.number)
      POP 			sha3(msg.data, block.number)
      POP 			sha3(msg.data, block.number)
      POP 			sha3(msg.data, block.number)
      POP 			sha3(msg.data, block.number)
      PUSH 40			sha3(msg.data, block.number)
      MLOAD 			sha3(msg.data, block.number)
      DUP1 			sha3(msg.data, block.number)
      SWAP2 			sha3(msg.data, block.number)
      SUB 			sha3(msg.data, block.number)
      SWAP1 			sha3(msg.data, block.number)
      KECCAK256 			sha3(msg.data, block.number)
      SWAP2 			o_hash = sha3(msg.data, block....
      POP 			o_hash = sha3(msg.data, block....
      PUSH 0			0
      PUSH 108			m_txs
      PUSH 0			m_txs[o_hash]
      DUP5 			o_hash
      PUSH 0			m_txs[o_hash]
      NOT 			m_txs[o_hash]
      AND 			m_txs[o_hash]
      PUSH 0			m_txs[o_hash]
      NOT 			m_txs[o_hash]
      AND 			m_txs[o_hash]
      DUP2 			m_txs[o_hash]
      MSTORE 			m_txs[o_hash]
      PUSH 20			m_txs[o_hash]
      ADD 			m_txs[o_hash]
      SWAP1 			m_txs[o_hash]
      DUP2 			m_txs[o_hash]
      MSTORE 			m_txs[o_hash]
      PUSH 20			m_txs[o_hash]
      ADD 			m_txs[o_hash]
      PUSH 0			m_txs[o_hash]
      KECCAK256 			m_txs[o_hash]
      PUSH 0			m_txs[o_hash].to
      ADD 			m_txs[o_hash].to
      PUSH 0			m_txs[o_hash].to
      SWAP1 			m_txs[o_hash].to
      SLOAD 			m_txs[o_hash].to
      SWAP1 			m_txs[o_hash].to
      PUSH 100			m_txs[o_hash].to
      EXP 			m_txs[o_hash].to
      SWAP1 			m_txs[o_hash].to
      DIV 			m_txs[o_hash].to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			m_txs[o_hash].to
      AND 			m_txs[o_hash].to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			m_txs[o_hash].to == 0
      AND 			m_txs[o_hash].to == 0
      EQ 			m_txs[o_hash].to == 0
      DUP1 			m_txs[o_hash].to == 0 && m_txs...
      ISZERO 			m_txs[o_hash].to == 0 && m_txs...
      PUSH [tag] 148			m_txs[o_hash].to == 0 && m_txs...
      JUMPI 			m_txs[o_hash].to == 0 && m_txs...
      POP 			m_txs[o_hash].to == 0 && m_txs...
      PUSH 0			0
      PUSH 108			m_txs
      PUSH 0			m_txs[o_hash]
      DUP5 			o_hash
      PUSH 0			m_txs[o_hash]
      NOT 			m_txs[o_hash]
      AND 			m_txs[o_hash]
      PUSH 0			m_txs[o_hash]
      NOT 			m_txs[o_hash]
      AND 			m_txs[o_hash]
      DUP2 			m_txs[o_hash]
      MSTORE 			m_txs[o_hash]
      PUSH 20			m_txs[o_hash]
      ADD 			m_txs[o_hash]
      SWAP1 			m_txs[o_hash]
      DUP2 			m_txs[o_hash]
      MSTORE 			m_txs[o_hash]
      PUSH 20			m_txs[o_hash]
      ADD 			m_txs[o_hash]
      PUSH 0			m_txs[o_hash]
      KECCAK256 			m_txs[o_hash]
      PUSH 1			m_txs[o_hash].value
      ADD 			m_txs[o_hash].value
      SLOAD 			m_txs[o_hash].value
      EQ 			m_txs[o_hash].value == 0
    tag 148			m_txs[o_hash].to == 0 && m_txs...
      JUMPDEST 			m_txs[o_hash].to == 0 && m_txs...
      DUP1 			m_txs[o_hash].to == 0 && m_txs...
      ISZERO 			m_txs[o_hash].to == 0 && m_txs...
      PUSH [tag] 149			m_txs[o_hash].to == 0 && m_txs...
      JUMPI 			m_txs[o_hash].to == 0 && m_txs...
      POP 			m_txs[o_hash].to == 0 && m_txs...
      PUSH 0			0
      PUSH 108			m_txs
      PUSH 0			m_txs[o_hash]
      DUP5 			o_hash
      PUSH 0			m_txs[o_hash]
      NOT 			m_txs[o_hash]
      AND 			m_txs[o_hash]
      PUSH 0			m_txs[o_hash]
      NOT 			m_txs[o_hash]
      AND 			m_txs[o_hash]
      DUP2 			m_txs[o_hash]
      MSTORE 			m_txs[o_hash]
      PUSH 20			m_txs[o_hash]
      ADD 			m_txs[o_hash]
      SWAP1 			m_txs[o_hash]
      DUP2 			m_txs[o_hash]
      MSTORE 			m_txs[o_hash]
      PUSH 20			m_txs[o_hash]
      ADD 			m_txs[o_hash]
      PUSH 0			m_txs[o_hash]
      KECCAK256 			m_txs[o_hash]
      PUSH 2			m_txs[o_hash].data
      ADD 			m_txs[o_hash].data
      DUP1 			m_txs[o_hash].data.length
      SLOAD 			m_txs[o_hash].data.length
      PUSH 1			m_txs[o_hash].data.length
      DUP2 			m_txs[o_hash].data.length
      PUSH 1			m_txs[o_hash].data.length
      AND 			m_txs[o_hash].data.length
      ISZERO 			m_txs[o_hash].data.length
      PUSH 100			m_txs[o_hash].data.length
      MUL 			m_txs[o_hash].data.length
      SUB 			m_txs[o_hash].data.length
      AND 			m_txs[o_hash].data.length
      PUSH 2			m_txs[o_hash].data.length
      SWAP1 			m_txs[o_hash].data.length
      DIV 			m_txs[o_hash].data.length
      SWAP1 			m_txs[o_hash].data.length
      POP 			m_txs[o_hash].data.length
      EQ 			m_txs[o_hash].data.length == 0
    tag 149			m_txs[o_hash].to == 0 && m_txs...
      JUMPDEST 			m_txs[o_hash].to == 0 && m_txs...
      ISZERO 			if (m_txs[o_hash].to == 0 && m...
      PUSH [tag] 150			if (m_txs[o_hash].to == 0 && m...
      JUMPI 			if (m_txs[o_hash].to == 0 && m...
      DUP6 			_to
      PUSH 108			m_txs
      PUSH 0			m_txs[o_hash]
      DUP5 			o_hash
      PUSH 0			m_txs[o_hash]
      NOT 			m_txs[o_hash]
      AND 			m_txs[o_hash]
      PUSH 0			m_txs[o_hash]
      NOT 			m_txs[o_hash]
      AND 			m_txs[o_hash]
      DUP2 			m_txs[o_hash]
      MSTORE 			m_txs[o_hash]
      PUSH 20			m_txs[o_hash]
      ADD 			m_txs[o_hash]
      SWAP1 			m_txs[o_hash]
      DUP2 			m_txs[o_hash]
      MSTORE 			m_txs[o_hash]
      PUSH 20			m_txs[o_hash]
      ADD 			m_txs[o_hash]
      PUSH 0			m_txs[o_hash]
      KECCAK256 			m_txs[o_hash]
      PUSH 0			m_txs[o_hash].to
      ADD 			m_txs[o_hash].to
      PUSH 0			m_txs[o_hash].to
      PUSH 100			m_txs[o_hash].to = _to
      EXP 			m_txs[o_hash].to = _to
      DUP2 			m_txs[o_hash].to = _to
      SLOAD 			m_txs[o_hash].to = _to
      DUP2 			m_txs[o_hash].to = _to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			m_txs[o_hash].to = _to
      MUL 			m_txs[o_hash].to = _to
      NOT 			m_txs[o_hash].to = _to
      AND 			m_txs[o_hash].to = _to
      SWAP1 			m_txs[o_hash].to = _to
      DUP4 			m_txs[o_hash].to = _to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			m_txs[o_hash].to = _to
      AND 			m_txs[o_hash].to = _to
      MUL 			m_txs[o_hash].to = _to
      OR 			m_txs[o_hash].to = _to
      SWAP1 			m_txs[o_hash].to = _to
      SSTORE 			m_txs[o_hash].to = _to
      POP 			m_txs[o_hash].to = _to
      DUP5 			_value
      PUSH 108			m_txs
      PUSH 0			m_txs[o_hash]
      DUP5 			o_hash
      PUSH 0			m_txs[o_hash]
      NOT 			m_txs[o_hash]
      AND 			m_txs[o_hash]
      PUSH 0			m_txs[o_hash]
      NOT 			m_txs[o_hash]
      AND 			m_txs[o_hash]
      DUP2 			m_txs[o_hash]
      MSTORE 			m_txs[o_hash]
      PUSH 20			m_txs[o_hash]
      ADD 			m_txs[o_hash]
      SWAP1 			m_txs[o_hash]
      DUP2 			m_txs[o_hash]
      MSTORE 			m_txs[o_hash]
      PUSH 20			m_txs[o_hash]
      ADD 			m_txs[o_hash]
      PUSH 0			m_txs[o_hash]
      KECCAK256 			m_txs[o_hash]
      PUSH 1			m_txs[o_hash].value
      ADD 			m_txs[o_hash].value
      DUP2 			m_txs[o_hash].value = _value
      SWAP1 			m_txs[o_hash].value = _value
      SSTORE 			m_txs[o_hash].value = _value
      POP 			m_txs[o_hash].value = _value
      DUP4 			_data
      DUP4 			_data
      PUSH 108			m_txs
      PUSH 0			m_txs[o_hash]
      DUP6 			o_hash
      PUSH 0			m_txs[o_hash]
      NOT 			m_txs[o_hash]
      AND 			m_txs[o_hash]
      PUSH 0			m_txs[o_hash]
      NOT 			m_txs[o_hash]
      AND 			m_txs[o_hash]
      DUP2 			m_txs[o_hash]
      MSTORE 			m_txs[o_hash]
      PUSH 20			m_txs[o_hash]
      ADD 			m_txs[o_hash]
      SWAP1 			m_txs[o_hash]
      DUP2 			m_txs[o_hash]
      MSTORE 			m_txs[o_hash]
      PUSH 20			m_txs[o_hash]
      ADD 			m_txs[o_hash]
      PUSH 0			m_txs[o_hash]
      KECCAK256 			m_txs[o_hash]
      PUSH 2			m_txs[o_hash].data
      ADD 			m_txs[o_hash].data
      SWAP2 			m_txs[o_hash].data = _data
      SWAP1 			m_txs[o_hash].data = _data
      PUSH [tag] 151			m_txs[o_hash].data = _data
      SWAP3 			m_txs[o_hash].data = _data
      SWAP2 			m_txs[o_hash].data = _data
      SWAP1 			m_txs[o_hash].data = _data
      PUSH [tag] 152			m_txs[o_hash].data = _data
      JUMP [in]			m_txs[o_hash].data = _data
    tag 151			m_txs[o_hash].data = _data
      JUMPDEST 			m_txs[o_hash].data = _data
      POP 			m_txs[o_hash].data = _data
    tag 150			if (m_txs[o_hash].to == 0 && m...
      JUMPDEST 			if (m_txs[o_hash].to == 0 && m...
      PUSH [tag] 153			confirm(o_hash)
      DUP3 			o_hash
      PUSH [tag] 49			confirm
      JUMP [in]			confirm(o_hash)
    tag 153			confirm(o_hash)
      JUMPDEST 			confirm(o_hash)
      ISZERO 			!confirm(o_hash)
      ISZERO 			if (!confirm(o_hash)) {\n				C...
      PUSH [tag] 154			if (!confirm(o_hash)) {\n				C...
      JUMPI 			if (!confirm(o_hash)) {\n				C...
      PUSH 1733CBB53659D713B79580F79F3F9FF215F78A7C7AA45890F3B89FC5CDDFBF32			ConfirmationNeeded(o_hash, msg...
      DUP3 			o_hash
      CALLER 			msg.sender
      DUP8 			_value
      DUP10 			_to
      DUP9 			_data
      DUP9 			_data
      PUSH 40			ConfirmationNeeded(o_hash, msg...
      MLOAD 			ConfirmationNeeded(o_hash, msg...
      DUP1 			ConfirmationNeeded(o_hash, msg...
      DUP8 			ConfirmationNeeded(o_hash, msg...
      PUSH 0			ConfirmationNeeded(o_hash, msg...
      NOT 			ConfirmationNeeded(o_hash, msg...
      AND 			ConfirmationNeeded(o_hash, msg...
      PUSH 0			ConfirmationNeeded(o_hash, msg...
      NOT 			ConfirmationNeeded(o_hash, msg...
      AND 			ConfirmationNeeded(o_hash, msg...
      DUP2 			ConfirmationNeeded(o_hash, msg...
      MSTORE 			ConfirmationNeeded(o_hash, msg...
      PUSH 20			ConfirmationNeeded(o_hash, msg...
      ADD 			ConfirmationNeeded(o_hash, msg...
      DUP7 			ConfirmationNeeded(o_hash, msg...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			ConfirmationNeeded(o_hash, msg...
      AND 			ConfirmationNeeded(o_hash, msg...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			ConfirmationNeeded(o_hash, msg...
      AND 			ConfirmationNeeded(o_hash, msg...
      DUP2 			ConfirmationNeeded(o_hash, msg...
      MSTORE 			ConfirmationNeeded(o_hash, msg...
      PUSH 20			ConfirmationNeeded(o_hash, msg...
      ADD 			ConfirmationNeeded(o_hash, msg...
      DUP6 			ConfirmationNeeded(o_hash, msg...
      DUP2 			ConfirmationNeeded(o_hash, msg...
      MSTORE 			ConfirmationNeeded(o_hash, msg...
      PUSH 20			ConfirmationNeeded(o_hash, msg...
      ADD 			ConfirmationNeeded(o_hash, msg...
      DUP5 			ConfirmationNeeded(o_hash, msg...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			ConfirmationNeeded(o_hash, msg...
      AND 			ConfirmationNeeded(o_hash, msg...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			ConfirmationNeeded(o_hash, msg...
      AND 			ConfirmationNeeded(o_hash, msg...
      DUP2 			ConfirmationNeeded(o_hash, msg...
      MSTORE 			ConfirmationNeeded(o_hash, msg...
      PUSH 20			ConfirmationNeeded(o_hash, msg...
      ADD 			ConfirmationNeeded(o_hash, msg...
      DUP1 			ConfirmationNeeded(o_hash, msg...
      PUSH 20			ConfirmationNeeded(o_hash, msg...
      ADD 			ConfirmationNeeded(o_hash, msg...
      DUP3 			ConfirmationNeeded(o_hash, msg...
      DUP2 			ConfirmationNeeded(o_hash, msg...
      SUB 			ConfirmationNeeded(o_hash, msg...
      DUP3 			ConfirmationNeeded(o_hash, msg...
      MSTORE 			ConfirmationNeeded(o_hash, msg...
      DUP5 			ConfirmationNeeded(o_hash, msg...
      DUP5 			ConfirmationNeeded(o_hash, msg...
      DUP3 			ConfirmationNeeded(o_hash, msg...
      DUP2 			ConfirmationNeeded(o_hash, msg...
      DUP2 			ConfirmationNeeded(o_hash, msg...
      MSTORE 			ConfirmationNeeded(o_hash, msg...
      PUSH 20			ConfirmationNeeded(o_hash, msg...
      ADD 			ConfirmationNeeded(o_hash, msg...
      SWAP3 			ConfirmationNeeded(o_hash, msg...
      POP 			ConfirmationNeeded(o_hash, msg...
      DUP1 			ConfirmationNeeded(o_hash, msg...
      DUP3 			ConfirmationNeeded(o_hash, msg...
      DUP5 			ConfirmationNeeded(o_hash, msg...
      CALLDATACOPY 			ConfirmationNeeded(o_hash, msg...
      DUP3 			ConfirmationNeeded(o_hash, msg...
      ADD 			ConfirmationNeeded(o_hash, msg...
      SWAP2 			ConfirmationNeeded(o_hash, msg...
      POP 			ConfirmationNeeded(o_hash, msg...
      POP 			ConfirmationNeeded(o_hash, msg...
      SWAP8 			ConfirmationNeeded(o_hash, msg...
      POP 			ConfirmationNeeded(o_hash, msg...
      POP 			ConfirmationNeeded(o_hash, msg...
      POP 			ConfirmationNeeded(o_hash, msg...
      POP 			ConfirmationNeeded(o_hash, msg...
      POP 			ConfirmationNeeded(o_hash, msg...
      POP 			ConfirmationNeeded(o_hash, msg...
      POP 			ConfirmationNeeded(o_hash, msg...
      POP 			ConfirmationNeeded(o_hash, msg...
      PUSH 40			ConfirmationNeeded(o_hash, msg...
      MLOAD 			ConfirmationNeeded(o_hash, msg...
      DUP1 			ConfirmationNeeded(o_hash, msg...
      SWAP2 			ConfirmationNeeded(o_hash, msg...
      SUB 			ConfirmationNeeded(o_hash, msg...
      SWAP1 			ConfirmationNeeded(o_hash, msg...
      LOG1 			ConfirmationNeeded(o_hash, msg...
    tag 154			if (!confirm(o_hash)) {\n				C...
      JUMPDEST 			if (!confirm(o_hash)) {\n				C...
    tag 147			if ((_data.length == 0 && unde...
      JUMPDEST 			if ((_data.length == 0 && unde...
    tag 136			if (isOwner(msg.sender))\n			_
      JUMPDEST 			if (isOwner(msg.sender))\n			_
      POP 			function execute(address _to, ...
      SWAP5 			function execute(address _to, ...
      SWAP4 			function execute(address _to, ...
      POP 			function execute(address _to, ...
      POP 			function execute(address _to, ...
      POP 			function execute(address _to, ...
      POP 			function execute(address _to, ...
      JUMP [out]			function execute(address _to, ...
    tag 58			function revoke(bytes32 _opera...
      JUMPDEST 			function revoke(bytes32 _opera...
      PUSH 0			uint ownerIndex
      DUP1 			uint ownerIndexBit
      PUSH 0			var pending
      PUSH 102			m_ownerIndex
      PUSH 0			m_ownerIndex[uint(msg.sender)]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			uint(msg.sender)
      AND 			uint(msg.sender)
      DUP2 			m_ownerIndex[uint(msg.sender)]
      MSTORE 			m_ownerIndex[uint(msg.sender)]
      PUSH 20			m_ownerIndex[uint(msg.sender)]
      ADD 			m_ownerIndex[uint(msg.sender)]
      SWAP1 			m_ownerIndex[uint(msg.sender)]
      DUP2 			m_ownerIndex[uint(msg.sender)]
      MSTORE 			m_ownerIndex[uint(msg.sender)]
      PUSH 20			m_ownerIndex[uint(msg.sender)]
      ADD 			m_ownerIndex[uint(msg.sender)]
      PUSH 0			m_ownerIndex[uint(msg.sender)]
      KECCAK256 			m_ownerIndex[uint(msg.sender)]
      SLOAD 			m_ownerIndex[uint(msg.sender)]
      SWAP3 			uint ownerIndex = m_ownerIndex...
      POP 			uint ownerIndex = m_ownerIndex...
      PUSH 0			0
      DUP4 			ownerIndex
      EQ 			ownerIndex == 0
      ISZERO 			if (ownerIndex == 0) return;
      PUSH [tag] 156			if (ownerIndex == 0) return;
      JUMPI 			if (ownerIndex == 0) return;
      PUSH [tag] 155			return;
      JUMP 			return;
    tag 156			if (ownerIndex == 0) return;
      JUMPDEST 			if (ownerIndex == 0) return;
      DUP3 			ownerIndex
      PUSH 2			2
      EXP 			2**ownerIndex
      SWAP2 			uint ownerIndexBit = 2**ownerI...
      POP 			uint ownerIndexBit = 2**ownerI...
      PUSH 103			m_pending
      PUSH 0			m_pending[_operation]
      DUP6 			_operation
      PUSH 0			m_pending[_operation]
      NOT 			m_pending[_operation]
      AND 			m_pending[_operation]
      PUSH 0			m_pending[_operation]
      NOT 			m_pending[_operation]
      AND 			m_pending[_operation]
      DUP2 			m_pending[_operation]
      MSTORE 			m_pending[_operation]
      PUSH 20			m_pending[_operation]
      ADD 			m_pending[_operation]
      SWAP1 			m_pending[_operation]
      DUP2 			m_pending[_operation]
      MSTORE 			m_pending[_operation]
      PUSH 20			m_pending[_operation]
      ADD 			m_pending[_operation]
      PUSH 0			m_pending[_operation]
      KECCAK256 			m_pending[_operation]
      SWAP1 			var pending = m_pending[_opera...
      POP 			var pending = m_pending[_opera...
      PUSH 0			0
      DUP3 			ownerIndexBit
      DUP3 			pending
      PUSH 1			pending.ownersDone
      ADD 			pending.ownersDone
      SLOAD 			pending.ownersDone
      AND 			pending.ownersDone & ownerInde...
      GT 			pending.ownersDone & ownerInde...
      ISZERO 			if (pending.ownersDone & owner...
      PUSH [tag] 157			if (pending.ownersDone & owner...
      JUMPI 			if (pending.ownersDone & owner...
      DUP1 			pending
      PUSH 0			pending.yetNeeded
      ADD 			pending.yetNeeded
      PUSH 0			pending.yetNeeded
      DUP2 			pending.yetNeeded++
      SLOAD 			pending.yetNeeded++
      DUP1 			pending.yetNeeded++
      SWAP3 			pending.yetNeeded++
      SWAP2 			pending.yetNeeded++
      SWAP1 			pending.yetNeeded++
      PUSH 1			pending.yetNeeded++
      ADD 			pending.yetNeeded++
      SWAP2 			pending.yetNeeded++
      SWAP1 			pending.yetNeeded++
      POP 			pending.yetNeeded++
      SSTORE 			pending.yetNeeded++
      POP 			pending.yetNeeded++
      DUP2 			ownerIndexBit
      DUP2 			pending
      PUSH 1			pending.ownersDone
      ADD 			pending.ownersDone
      PUSH 0			pending.ownersDone
      DUP3 			pending.ownersDone -= ownerInd...
      DUP3 			pending.ownersDone -= ownerInd...
      SLOAD 			pending.ownersDone -= ownerInd...
      SUB 			pending.ownersDone -= ownerInd...
      SWAP3 			pending.ownersDone -= ownerInd...
      POP 			pending.ownersDone -= ownerInd...
      POP 			pending.ownersDone -= ownerInd...
      DUP2 			pending.ownersDone -= ownerInd...
      SWAP1 			pending.ownersDone -= ownerInd...
      SSTORE 			pending.ownersDone -= ownerInd...
      POP 			pending.ownersDone -= ownerInd...
      PUSH C7FB647E59B18047309AA15AAD418E5D7CA96D173AD704F1031A2C3D7591734B			Revoke(msg.sender, _operation)
      CALLER 			msg.sender
      DUP6 			_operation
      PUSH 40			Revoke(msg.sender, _operation)
      MLOAD 			Revoke(msg.sender, _operation)
      DUP1 			Revoke(msg.sender, _operation)
      DUP4 			Revoke(msg.sender, _operation)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Revoke(msg.sender, _operation)
      AND 			Revoke(msg.sender, _operation)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Revoke(msg.sender, _operation)
      AND 			Revoke(msg.sender, _operation)
      DUP2 			Revoke(msg.sender, _operation)
      MSTORE 			Revoke(msg.sender, _operation)
      PUSH 20			Revoke(msg.sender, _operation)
      ADD 			Revoke(msg.sender, _operation)
      DUP3 			Revoke(msg.sender, _operation)
      PUSH 0			Revoke(msg.sender, _operation)
      NOT 			Revoke(msg.sender, _operation)
      AND 			Revoke(msg.sender, _operation)
      PUSH 0			Revoke(msg.sender, _operation)
      NOT 			Revoke(msg.sender, _operation)
      AND 			Revoke(msg.sender, _operation)
      DUP2 			Revoke(msg.sender, _operation)
      MSTORE 			Revoke(msg.sender, _operation)
      PUSH 20			Revoke(msg.sender, _operation)
      ADD 			Revoke(msg.sender, _operation)
      SWAP3 			Revoke(msg.sender, _operation)
      POP 			Revoke(msg.sender, _operation)
      POP 			Revoke(msg.sender, _operation)
      POP 			Revoke(msg.sender, _operation)
      PUSH 40			Revoke(msg.sender, _operation)
      MLOAD 			Revoke(msg.sender, _operation)
      DUP1 			Revoke(msg.sender, _operation)
      SWAP2 			Revoke(msg.sender, _operation)
      SUB 			Revoke(msg.sender, _operation)
      SWAP1 			Revoke(msg.sender, _operation)
      LOG1 			Revoke(msg.sender, _operation)
    tag 157			if (pending.ownersDone & owner...
      JUMPDEST 			if (pending.ownersDone & owner...
    tag 155			function revoke(bytes32 _opera...
      JUMPDEST 			function revoke(bytes32 _opera...
      POP 			function revoke(bytes32 _opera...
      POP 			function revoke(bytes32 _opera...
      POP 			function revoke(bytes32 _opera...
      POP 			function revoke(bytes32 _opera...
      JUMP [out]			function revoke(bytes32 _opera...
    tag 61			function changeRequirement(uin...
      JUMPDEST 			function changeRequirement(uin...
      PUSH 0			msg.data
      CALLDATASIZE 			msg.data
      PUSH 40			sha3(msg.data)
      MLOAD 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      DUP4 			sha3(msg.data)
      DUP4 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      DUP3 			sha3(msg.data)
      DUP5 			sha3(msg.data)
      CALLDATACOPY 			sha3(msg.data)
      DUP3 			sha3(msg.data)
      ADD 			sha3(msg.data)
      SWAP2 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      SWAP3 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      PUSH 40			sha3(msg.data)
      MLOAD 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      SWAP2 			sha3(msg.data)
      SUB 			sha3(msg.data)
      SWAP1 			sha3(msg.data)
      KECCAK256 			sha3(msg.data)
      PUSH [tag] 159			confirmAndCheck(_operation)
      DUP2 			_operation
      PUSH [tag] 79			confirmAndCheck
      JUMP [in]			confirmAndCheck(_operation)
    tag 159			confirmAndCheck(_operation)
      JUMPDEST 			confirmAndCheck(_operation)
      ISZERO 			if (confirmAndCheck(_operation...
      PUSH [tag] 160			if (confirmAndCheck(_operation...
      JUMPI 			if (confirmAndCheck(_operation...
      PUSH 0			0
      DUP3 			_newRequired
      EQ 			_newRequired == 0
      ISZERO 			if (_newRequired == 0) return;
      PUSH [tag] 162			if (_newRequired == 0) return;
      JUMPI 			if (_newRequired == 0) return;
      PUSH [tag] 161			return;
      JUMP 			return;
    tag 162			if (_newRequired == 0) return;
      JUMPDEST 			if (_newRequired == 0) return;
      PUSH 1			m_numOwners
      SLOAD 			m_numOwners
      DUP3 			_newRequired
      GT 			_newRequired > m_numOwners
      ISZERO 			if (_newRequired > m_numOwners...
      PUSH [tag] 163			if (_newRequired > m_numOwners...
      JUMPI 			if (_newRequired > m_numOwners...
      PUSH [tag] 161			return;
      JUMP 			return;
    tag 163			if (_newRequired > m_numOwners...
      JUMPDEST 			if (_newRequired > m_numOwners...
      DUP2 			_newRequired
      PUSH 0			m_required
      DUP2 			m_required = _newRequired
      SWAP1 			m_required = _newRequired
      SSTORE 			m_required = _newRequired
      POP 			m_required = _newRequired
      PUSH [tag] 164			clearPending()
      PUSH [tag] 87			clearPending
      JUMP [in]			clearPending()
    tag 164			clearPending()
      JUMPDEST 			clearPending()
      PUSH ACBDB084C721332AC59F9B8E392196C9EB0E4932862DA8EB9BEAF0DAD4F550DA			RequirementChanged(_newRequire...
      DUP3 			_newRequired
      PUSH 40			RequirementChanged(_newRequire...
      MLOAD 			RequirementChanged(_newRequire...
      DUP1 			RequirementChanged(_newRequire...
      DUP3 			RequirementChanged(_newRequire...
      DUP2 			RequirementChanged(_newRequire...
      MSTORE 			RequirementChanged(_newRequire...
      PUSH 20			RequirementChanged(_newRequire...
      ADD 			RequirementChanged(_newRequire...
      SWAP2 			RequirementChanged(_newRequire...
      POP 			RequirementChanged(_newRequire...
      POP 			RequirementChanged(_newRequire...
      PUSH 40			RequirementChanged(_newRequire...
      MLOAD 			RequirementChanged(_newRequire...
      DUP1 			RequirementChanged(_newRequire...
      SWAP2 			RequirementChanged(_newRequire...
      SUB 			RequirementChanged(_newRequire...
      SWAP1 			RequirementChanged(_newRequire...
      LOG1 			RequirementChanged(_newRequire...
    tag 161			_
      JUMPDEST 			_
    tag 160			if (confirmAndCheck(_operation...
      JUMPDEST 			if (confirmAndCheck(_operation...
      POP 			function changeRequirement(uin...
      POP 			function changeRequirement(uin...
      JUMP [out]			function changeRequirement(uin...
    tag 64			function hasConfirmed(bytes32 ...
      JUMPDEST 			function hasConfirmed(bytes32 ...
      PUSH 0			bool
      DUP1 			var pending
      PUSH 0			uint ownerIndex
      DUP1 			uint ownerIndexBit
      PUSH 103			m_pending
      PUSH 0			m_pending[_operation]
      DUP8 			_operation
      PUSH 0			m_pending[_operation]
      NOT 			m_pending[_operation]
      AND 			m_pending[_operation]
      PUSH 0			m_pending[_operation]
      NOT 			m_pending[_operation]
      AND 			m_pending[_operation]
      DUP2 			m_pending[_operation]
      MSTORE 			m_pending[_operation]
      PUSH 20			m_pending[_operation]
      ADD 			m_pending[_operation]
      SWAP1 			m_pending[_operation]
      DUP2 			m_pending[_operation]
      MSTORE 			m_pending[_operation]
      PUSH 20			m_pending[_operation]
      ADD 			m_pending[_operation]
      PUSH 0			m_pending[_operation]
      KECCAK256 			m_pending[_operation]
      SWAP3 			var pending = m_pending[_opera...
      POP 			var pending = m_pending[_opera...
      PUSH 102			m_ownerIndex
      PUSH 0			m_ownerIndex[uint(_owner)]
      DUP7 			_owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			uint(_owner)
      AND 			uint(_owner)
      DUP2 			m_ownerIndex[uint(_owner)]
      MSTORE 			m_ownerIndex[uint(_owner)]
      PUSH 20			m_ownerIndex[uint(_owner)]
      ADD 			m_ownerIndex[uint(_owner)]
      SWAP1 			m_ownerIndex[uint(_owner)]
      DUP2 			m_ownerIndex[uint(_owner)]
      MSTORE 			m_ownerIndex[uint(_owner)]
      PUSH 20			m_ownerIndex[uint(_owner)]
      ADD 			m_ownerIndex[uint(_owner)]
      PUSH 0			m_ownerIndex[uint(_owner)]
      KECCAK256 			m_ownerIndex[uint(_owner)]
      SLOAD 			m_ownerIndex[uint(_owner)]
      SWAP2 			uint ownerIndex = m_ownerIndex...
      POP 			uint ownerIndex = m_ownerIndex...
      PUSH 0			0
      DUP3 			ownerIndex
      EQ 			ownerIndex == 0
      ISZERO 			if (ownerIndex == 0) return fa...
      PUSH [tag] 166			if (ownerIndex == 0) return fa...
      JUMPI 			if (ownerIndex == 0) return fa...
      PUSH 0			false
      SWAP4 			return false
      POP 			return false
      PUSH [tag] 165			return false
      JUMP 			return false
    tag 166			if (ownerIndex == 0) return fa...
      JUMPDEST 			if (ownerIndex == 0) return fa...
      DUP2 			ownerIndex
      PUSH 2			2
      EXP 			2**ownerIndex
      SWAP1 			uint ownerIndexBit = 2**ownerI...
      POP 			uint ownerIndexBit = 2**ownerI...
      PUSH 0			0
      DUP2 			ownerIndexBit
      DUP5 			pending
      PUSH 1			pending.ownersDone
      ADD 			pending.ownersDone
      SLOAD 			pending.ownersDone
      AND 			pending.ownersDone & ownerInde...
      EQ 			pending.ownersDone & ownerInde...
      ISZERO 			!(pending.ownersDone & ownerIn...
      SWAP4 			return !(pending.ownersDone & ...
      POP 			return !(pending.ownersDone & ...
    tag 165			function hasConfirmed(bytes32 ...
      JUMPDEST 			function hasConfirmed(bytes32 ...
      POP 			function hasConfirmed(bytes32 ...
      POP 			function hasConfirmed(bytes32 ...
      POP 			function hasConfirmed(bytes32 ...
      SWAP3 			function hasConfirmed(bytes32 ...
      SWAP2 			function hasConfirmed(bytes32 ...
      POP 			function hasConfirmed(bytes32 ...
      POP 			function hasConfirmed(bytes32 ...
      JUMP [out]			function hasConfirmed(bytes32 ...
    tag 67			function getOwner(uint ownerIn...
      JUMPDEST 			function getOwner(uint ownerIn...
      PUSH 0			address
      PUSH 2			m_owners
      PUSH 1			1
      DUP4 			ownerIndex
      ADD 			ownerIndex + 1
      PUSH 100			m_owners[ownerIndex + 1]
      DUP2 			m_owners[ownerIndex + 1]
      LT 			m_owners[ownerIndex + 1]
      ISZERO 			m_owners[ownerIndex + 1]
      ISZERO 			m_owners[ownerIndex + 1]
      PUSH [tag] 168			m_owners[ownerIndex + 1]
      JUMPI 			m_owners[ownerIndex + 1]
      INVALID 			m_owners[ownerIndex + 1]
    tag 168			m_owners[ownerIndex + 1]
      JUMPDEST 			m_owners[ownerIndex + 1]
      ADD 			m_owners[ownerIndex + 1]
      SLOAD 			m_owners[ownerIndex + 1]
      SWAP1 			return address(m_owners[ownerI...
      POP 			return address(m_owners[ownerI...
      SWAP2 			function getOwner(uint ownerIn...
      SWAP1 			function getOwner(uint ownerIn...
      POP 			function getOwner(uint ownerIn...
      JUMP [out]			function getOwner(uint ownerIn...
    tag 70			function kill(address _to) onl...
      JUMPDEST 			function kill(address _to) onl...
      PUSH 0			msg.data
      CALLDATASIZE 			msg.data
      PUSH 40			sha3(msg.data)
      MLOAD 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      DUP4 			sha3(msg.data)
      DUP4 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      DUP3 			sha3(msg.data)
      DUP5 			sha3(msg.data)
      CALLDATACOPY 			sha3(msg.data)
      DUP3 			sha3(msg.data)
      ADD 			sha3(msg.data)
      SWAP2 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      SWAP3 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      PUSH 40			sha3(msg.data)
      MLOAD 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      SWAP2 			sha3(msg.data)
      SUB 			sha3(msg.data)
      SWAP1 			sha3(msg.data)
      KECCAK256 			sha3(msg.data)
      PUSH [tag] 171			confirmAndCheck(_operation)
      DUP2 			_operation
      PUSH [tag] 79			confirmAndCheck
      JUMP [in]			confirmAndCheck(_operation)
    tag 171			confirmAndCheck(_operation)
      JUMPDEST 			confirmAndCheck(_operation)
      ISZERO 			if (confirmAndCheck(_operation...
      PUSH [tag] 172			if (confirmAndCheck(_operation...
      JUMPI 			if (confirmAndCheck(_operation...
      DUP2 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			suicide(_to)
      AND 			suicide(_to)
      SELFDESTRUCT 			suicide(_to)
    tag 172			if (confirmAndCheck(_operation...
      JUMPDEST 			if (confirmAndCheck(_operation...
      POP 			function kill(address _to) onl...
      POP 			function kill(address _to) onl...
      JUMP [out]			function kill(address _to) onl...
    tag 73			function changeOwner(address _...
      JUMPDEST 			function changeOwner(address _...
      PUSH 0			uint ownerIndex
      DUP1 			msg.data
      CALLDATASIZE 			msg.data
      PUSH 40			sha3(msg.data)
      MLOAD 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      DUP4 			sha3(msg.data)
      DUP4 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      DUP3 			sha3(msg.data)
      DUP5 			sha3(msg.data)
      CALLDATACOPY 			sha3(msg.data)
      DUP3 			sha3(msg.data)
      ADD 			sha3(msg.data)
      SWAP2 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      SWAP3 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      POP 			sha3(msg.data)
      PUSH 40			sha3(msg.data)
      MLOAD 			sha3(msg.data)
      DUP1 			sha3(msg.data)
      SWAP2 			sha3(msg.data)
      SUB 			sha3(msg.data)
      SWAP1 			sha3(msg.data)
      KECCAK256 			sha3(msg.data)
      PUSH [tag] 175			confirmAndCheck(_operation)
      DUP2 			_operation
      PUSH [tag] 79			confirmAndCheck
      JUMP [in]			confirmAndCheck(_operation)
    tag 175			confirmAndCheck(_operation)
      JUMPDEST 			confirmAndCheck(_operation)
      ISZERO 			if (confirmAndCheck(_operation...
      PUSH [tag] 176			if (confirmAndCheck(_operation...
      JUMPI 			if (confirmAndCheck(_operation...
      PUSH [tag] 178			isOwner(_to)
      DUP4 			_to
      PUSH [tag] 28			isOwner
      JUMP [in]			isOwner(_to)
    tag 178			isOwner(_to)
      JUMPDEST 			isOwner(_to)
      ISZERO 			if (isOwner(_to)) return;
      PUSH [tag] 179			if (isOwner(_to)) return;
      JUMPI 			if (isOwner(_to)) return;
      PUSH [tag] 177			return;
      JUMP 			return;
    tag 179			if (isOwner(_to)) return;
      JUMPDEST 			if (isOwner(_to)) return;
      PUSH 102			m_ownerIndex
      PUSH 0			m_ownerIndex[uint(_from)]
      DUP6 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			uint(_from)
      AND 			uint(_from)
      DUP2 			m_ownerIndex[uint(_from)]
      MSTORE 			m_ownerIndex[uint(_from)]
      PUSH 20			m_ownerIndex[uint(_from)]
      ADD 			m_ownerIndex[uint(_from)]
      SWAP1 			m_ownerIndex[uint(_from)]
      DUP2 			m_ownerIndex[uint(_from)]
      MSTORE 			m_ownerIndex[uint(_from)]
      PUSH 20			m_ownerIndex[uint(_from)]
      ADD 			m_ownerIndex[uint(_from)]
      PUSH 0			m_ownerIndex[uint(_from)]
      KECCAK256 			m_ownerIndex[uint(_from)]
      SLOAD 			m_ownerIndex[uint(_from)]
      SWAP2 			uint ownerIndex = m_ownerIndex...
      POP 			uint ownerIndex = m_ownerIndex...
      PUSH 0			0
      DUP3 			ownerIndex
      EQ 			ownerIndex == 0
      ISZERO 			if (ownerIndex == 0) return;
      PUSH [tag] 180			if (ownerIndex == 0) return;
      JUMPI 			if (ownerIndex == 0) return;
      PUSH [tag] 177			return;
      JUMP 			return;
    tag 180			if (ownerIndex == 0) return;
      JUMPDEST 			if (ownerIndex == 0) return;
      PUSH [tag] 181			clearPending()
      PUSH [tag] 87			clearPending
      JUMP [in]			clearPending()
    tag 181			clearPending()
      JUMPDEST 			clearPending()
      DUP3 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			uint(_to)
      AND 			uint(_to)
      PUSH 2			m_owners
      DUP4 			ownerIndex
      PUSH 100			m_owners[ownerIndex]
      DUP2 			m_owners[ownerIndex]
      LT 			m_owners[ownerIndex]
      ISZERO 			m_owners[ownerIndex]
      ISZERO 			m_owners[ownerIndex]
      PUSH [tag] 182			m_owners[ownerIndex]
      JUMPI 			m_owners[ownerIndex]
      INVALID 			m_owners[ownerIndex]
    tag 182			m_owners[ownerIndex]
      JUMPDEST 			m_owners[ownerIndex]
      ADD 			m_owners[ownerIndex]
      DUP2 			m_owners[ownerIndex] = uint(_t...
      SWAP1 			m_owners[ownerIndex] = uint(_t...
      SSTORE 			m_owners[ownerIndex] = uint(_t...
      POP 			m_owners[ownerIndex] = uint(_t...
      PUSH 0			0
      PUSH 102			m_ownerIndex
      PUSH 0			m_ownerIndex[uint(_from)]
      DUP7 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			uint(_from)
      AND 			uint(_from)
      DUP2 			m_ownerIndex[uint(_from)]
      MSTORE 			m_ownerIndex[uint(_from)]
      PUSH 20			m_ownerIndex[uint(_from)]
      ADD 			m_ownerIndex[uint(_from)]
      SWAP1 			m_ownerIndex[uint(_from)]
      DUP2 			m_ownerIndex[uint(_from)]
      MSTORE 			m_ownerIndex[uint(_from)]
      PUSH 20			m_ownerIndex[uint(_from)]
      ADD 			m_ownerIndex[uint(_from)]
      PUSH 0			m_ownerIndex[uint(_from)]
      KECCAK256 			m_ownerIndex[uint(_from)]
      DUP2 			m_ownerIndex[uint(_from)] = 0
      SWAP1 			m_ownerIndex[uint(_from)] = 0
      SSTORE 			m_ownerIndex[uint(_from)] = 0
      POP 			m_ownerIndex[uint(_from)] = 0
      DUP2 			ownerIndex
      PUSH 102			m_ownerIndex
      PUSH 0			m_ownerIndex[uint(_to)]
      DUP6 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			uint(_to)
      AND 			uint(_to)
      DUP2 			m_ownerIndex[uint(_to)]
      MSTORE 			m_ownerIndex[uint(_to)]
      PUSH 20			m_ownerIndex[uint(_to)]
      ADD 			m_ownerIndex[uint(_to)]
      SWAP1 			m_ownerIndex[uint(_to)]
      DUP2 			m_ownerIndex[uint(_to)]
      MSTORE 			m_ownerIndex[uint(_to)]
      PUSH 20			m_ownerIndex[uint(_to)]
      ADD 			m_ownerIndex[uint(_to)]
      PUSH 0			m_ownerIndex[uint(_to)]
      KECCAK256 			m_ownerIndex[uint(_to)]
      DUP2 			m_ownerIndex[uint(_to)] = owne...
      SWAP1 			m_ownerIndex[uint(_to)] = owne...
      SSTORE 			m_ownerIndex[uint(_to)] = owne...
      POP 			m_ownerIndex[uint(_to)] = owne...
      PUSH B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C			OwnerChanged(_from, _to)
      DUP5 			_from
      DUP5 			_to
      PUSH 40			OwnerChanged(_from, _to)
      MLOAD 			OwnerChanged(_from, _to)
      DUP1 			OwnerChanged(_from, _to)
      DUP4 			OwnerChanged(_from, _to)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			OwnerChanged(_from, _to)
      AND 			OwnerChanged(_from, _to)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			OwnerChanged(_from, _to)
      AND 			OwnerChanged(_from, _to)
      DUP2 			OwnerChanged(_from, _to)
      MSTORE 			OwnerChanged(_from, _to)
      PUSH 20			OwnerChanged(_from, _to)
      ADD 			OwnerChanged(_from, _to)
      DUP3 			OwnerChanged(_from, _to)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			OwnerChanged(_from, _to)
      AND 			OwnerChanged(_from, _to)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			OwnerChanged(_from, _to)
      AND 			OwnerChanged(_from, _to)
      DUP2 			OwnerChanged(_from, _to)
      MSTORE 			OwnerChanged(_from, _to)
      PUSH 20			OwnerChanged(_from, _to)
      ADD 			OwnerChanged(_from, _to)
      SWAP3 			OwnerChanged(_from, _to)
      POP 			OwnerChanged(_from, _to)
      POP 			OwnerChanged(_from, _to)
      POP 			OwnerChanged(_from, _to)
      PUSH 40			OwnerChanged(_from, _to)
      MLOAD 			OwnerChanged(_from, _to)
      DUP1 			OwnerChanged(_from, _to)
      SWAP2 			OwnerChanged(_from, _to)
      SUB 			OwnerChanged(_from, _to)
      SWAP1 			OwnerChanged(_from, _to)
      LOG1 			OwnerChanged(_from, _to)
    tag 177			_
      JUMPDEST 			_
    tag 176			if (confirmAndCheck(_operation...
      JUMPDEST 			if (confirmAndCheck(_operation...
      POP 			function changeOwner(address _...
      POP 			function changeOwner(address _...
      POP 			function changeOwner(address _...
      POP 			function changeOwner(address _...
      JUMP [out]			function changeOwner(address _...
    tag 76			uint public m_dailyLimit
      JUMPDEST 			uint public m_dailyLimit
      PUSH 105			uint public m_dailyLimit
      SLOAD 			uint public m_dailyLimit
      DUP2 			uint public m_dailyLimit
      JUMP [out]			uint public m_dailyLimit
    tag 79			function confirmAndCheck(bytes...
      JUMPDEST 			function confirmAndCheck(bytes...
      PUSH 0			bool
      DUP1 			uint ownerIndex
      PUSH 0			var pending
      DUP1 			uint ownerIndexBit
      PUSH 102			m_ownerIndex
      PUSH 0			m_ownerIndex[uint(msg.sender)]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			uint(msg.sender)
      AND 			uint(msg.sender)
      DUP2 			m_ownerIndex[uint(msg.sender)]
      MSTORE 			m_ownerIndex[uint(msg.sender)]
      PUSH 20			m_ownerIndex[uint(msg.sender)]
      ADD 			m_ownerIndex[uint(msg.sender)]
      SWAP1 			m_ownerIndex[uint(msg.sender)]
      DUP2 			m_ownerIndex[uint(msg.sender)]
      MSTORE 			m_ownerIndex[uint(msg.sender)]
      PUSH 20			m_ownerIndex[uint(msg.sender)]
      ADD 			m_ownerIndex[uint(msg.sender)]
      PUSH 0			m_ownerIndex[uint(msg.sender)]
      KECCAK256 			m_ownerIndex[uint(msg.sender)]
      SLOAD 			m_ownerIndex[uint(msg.sender)]
      SWAP3 			uint ownerIndex = m_ownerIndex...
      POP 			uint ownerIndex = m_ownerIndex...
      PUSH 0			0
      DUP4 			ownerIndex
      EQ 			ownerIndex == 0
      ISZERO 			if (ownerIndex == 0) return;
      PUSH [tag] 185			if (ownerIndex == 0) return;
      JUMPI 			if (ownerIndex == 0) return;
      PUSH [tag] 184			return;
      JUMP 			return;
    tag 185			if (ownerIndex == 0) return;
      JUMPDEST 			if (ownerIndex == 0) return;
      PUSH 103			m_pending
      PUSH 0			m_pending[_operation]
      DUP7 			_operation
      PUSH 0			m_pending[_operation]
      NOT 			m_pending[_operation]
      AND 			m_pending[_operation]
      PUSH 0			m_pending[_operation]
      NOT 			m_pending[_operation]
      AND 			m_pending[_operation]
      DUP2 			m_pending[_operation]
      MSTORE 			m_pending[_operation]
      PUSH 20			m_pending[_operation]
      ADD 			m_pending[_operation]
      SWAP1 			m_pending[_operation]
      DUP2 			m_pending[_operation]
      MSTORE 			m_pending[_operation]
      PUSH 20			m_pending[_operation]
      ADD 			m_pending[_operation]
      PUSH 0			m_pending[_operation]
      KECCAK256 			m_pending[_operation]
      SWAP2 			var pending = m_pending[_opera...
      POP 			var pending = m_pending[_opera...
      PUSH 0			0
      DUP3 			pending
      PUSH 0			pending.yetNeeded
      ADD 			pending.yetNeeded
      SLOAD 			pending.yetNeeded
      EQ 			pending.yetNeeded == 0
      ISZERO 			if (pending.yetNeeded == 0) {\...
      PUSH [tag] 186			if (pending.yetNeeded == 0) {\...
      JUMPI 			if (pending.yetNeeded == 0) {\...
      PUSH 0			m_required
      SLOAD 			m_required
      DUP3 			pending
      PUSH 0			pending.yetNeeded
      ADD 			pending.yetNeeded
      DUP2 			pending.yetNeeded = m_required
      SWAP1 			pending.yetNeeded = m_required
      SSTORE 			pending.yetNeeded = m_required
      POP 			pending.yetNeeded = m_required
      PUSH 0			0
      DUP3 			pending
      PUSH 1			pending.ownersDone
      ADD 			pending.ownersDone
      DUP2 			pending.ownersDone = 0
      SWAP1 			pending.ownersDone = 0
      SSTORE 			pending.ownersDone = 0
      POP 			pending.ownersDone = 0
      PUSH 104			m_pendingIndex
      DUP1 			m_pendingIndex.length++
      SLOAD 			m_pendingIndex.length++
      DUP1 			m_pendingIndex.length++
      SWAP2 			m_pendingIndex.length++
      SWAP1 			m_pendingIndex.length++
      PUSH 1			m_pendingIndex.length++
      ADD 			m_pendingIndex.length++
      PUSH [tag] 187			m_pendingIndex.length++
      SWAP2 			m_pendingIndex.length++
      SWAP1 			m_pendingIndex.length++
      PUSH [tag] 188			m_pendingIndex.length++
      JUMP [in]			m_pendingIndex.length++
    tag 187			m_pendingIndex.length++
      JUMPDEST 			m_pendingIndex.length++
      DUP3 			pending
      PUSH 2			pending.index
      ADD 			pending.index
      DUP2 			pending.index = m_pendingIndex...
      SWAP1 			pending.index = m_pendingIndex...
      SSTORE 			pending.index = m_pendingIndex...
      POP 			pending.index = m_pendingIndex...
      DUP5 			_operation
      PUSH 104			m_pendingIndex
      DUP4 			pending
      PUSH 2			pending.index
      ADD 			pending.index
      SLOAD 			pending.index
      DUP2 			m_pendingIndex[pending.index]
      SLOAD 			m_pendingIndex[pending.index]
      DUP2 			m_pendingIndex[pending.index]
      LT 			m_pendingIndex[pending.index]
      ISZERO 			m_pendingIndex[pending.index]
      ISZERO 			m_pendingIndex[pending.index]
      PUSH [tag] 189			m_pendingIndex[pending.index]
      JUMPI 			m_pendingIndex[pending.index]
      INVALID 			m_pendingIndex[pending.index]
    tag 189			m_pendingIndex[pending.index]
      JUMPDEST 			m_pendingIndex[pending.index]
      SWAP1 			m_pendingIndex[pending.index]
      PUSH 0			m_pendingIndex[pending.index]
      MSTORE 			m_pendingIndex[pending.index]
      PUSH 20			m_pendingIndex[pending.index]
      PUSH 0			m_pendingIndex[pending.index]
      KECCAK256 			m_pendingIndex[pending.index]
      SWAP1 			m_pendingIndex[pending.index]
      ADD 			m_pendingIndex[pending.index]
      DUP2 			m_pendingIndex[pending.index] ...
      PUSH 0			m_pendingIndex[pending.index] ...
      NOT 			m_pendingIndex[pending.index] ...
      AND 			m_pendingIndex[pending.index] ...
      SWAP1 			m_pendingIndex[pending.index] ...
      SSTORE 			m_pendingIndex[pending.index] ...
      POP 			m_pendingIndex[pending.index] ...
    tag 186			if (pending.yetNeeded == 0) {\...
      JUMPDEST 			if (pending.yetNeeded == 0) {\...
      DUP3 			ownerIndex
      PUSH 2			2
      EXP 			2**ownerIndex
      SWAP1 			uint ownerIndexBit = 2**ownerI...
      POP 			uint ownerIndexBit = 2**ownerI...
      PUSH 0			0
      DUP2 			ownerIndexBit
      DUP4 			pending
      PUSH 1			pending.ownersDone
      ADD 			pending.ownersDone
      SLOAD 			pending.ownersDone
      AND 			pending.ownersDone & ownerInde...
      EQ 			pending.ownersDone & ownerInde...
      ISZERO 			if (pending.ownersDone & owner...
      PUSH [tag] 191			if (pending.ownersDone & owner...
      JUMPI 			if (pending.ownersDone & owner...
      PUSH E1C52DC63B719ADE82E8BEA94CC41A0D5D28E4AAF536ADB5E9CCCC9FF8C1AEDA			Confirmation(msg.sender, _oper...
      CALLER 			msg.sender
      DUP7 			_operation
      PUSH 40			Confirmation(msg.sender, _oper...
      MLOAD 			Confirmation(msg.sender, _oper...
      DUP1 			Confirmation(msg.sender, _oper...
      DUP4 			Confirmation(msg.sender, _oper...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Confirmation(msg.sender, _oper...
      AND 			Confirmation(msg.sender, _oper...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Confirmation(msg.sender, _oper...
      AND 			Confirmation(msg.sender, _oper...
      DUP2 			Confirmation(msg.sender, _oper...
      MSTORE 			Confirmation(msg.sender, _oper...
      PUSH 20			Confirmation(msg.sender, _oper...
      ADD 			Confirmation(msg.sender, _oper...
      DUP3 			Confirmation(msg.sender, _oper...
      PUSH 0			Confirmation(msg.sender, _oper...
      NOT 			Confirmation(msg.sender, _oper...
      AND 			Confirmation(msg.sender, _oper...
      PUSH 0			Confirmation(msg.sender, _oper...
      NOT 			Confirmation(msg.sender, _oper...
      AND 			Confirmation(msg.sender, _oper...
      DUP2 			Confirmation(msg.sender, _oper...
      MSTORE 			Confirmation(msg.sender, _oper...
      PUSH 20			Confirmation(msg.sender, _oper...
      ADD 			Confirmation(msg.sender, _oper...
      SWAP3 			Confirmation(msg.sender, _oper...
      POP 			Confirmation(msg.sender, _oper...
      POP 			Confirmation(msg.sender, _oper...
      POP 			Confirmation(msg.sender, _oper...
      PUSH 40			Confirmation(msg.sender, _oper...
      MLOAD 			Confirmation(msg.sender, _oper...
      DUP1 			Confirmation(msg.sender, _oper...
      SWAP2 			Confirmation(msg.sender, _oper...
      SUB 			Confirmation(msg.sender, _oper...
      SWAP1 			Confirmation(msg.sender, _oper...
      LOG1 			Confirmation(msg.sender, _oper...
      PUSH 1			1
      DUP3 			pending
      PUSH 0			pending.yetNeeded
      ADD 			pending.yetNeeded
      SLOAD 			pending.yetNeeded
      EQ 			pending.yetNeeded == 1
      ISZERO 			if (pending.yetNeeded == 1) {\...
      PUSH [tag] 192			if (pending.yetNeeded == 1) {\...
      JUMPI 			if (pending.yetNeeded == 1) {\...
      PUSH 104			m_pendingIndex
      PUSH 103			m_pending
      PUSH 0			m_pending[_operation]
      DUP8 			_operation
      PUSH 0			m_pending[_operation]
      NOT 			m_pending[_operation]
      AND 			m_pending[_operation]
      PUSH 0			m_pending[_operation]
      NOT 			m_pending[_operation]
      AND 			m_pending[_operation]
      DUP2 			m_pending[_operation]
      MSTORE 			m_pending[_operation]
      PUSH 20			m_pending[_operation]
      ADD 			m_pending[_operation]
      SWAP1 			m_pending[_operation]
      DUP2 			m_pending[_operation]
      MSTORE 			m_pending[_operation]
      PUSH 20			m_pending[_operation]
      ADD 			m_pending[_operation]
      PUSH 0			m_pending[_operation]
      KECCAK256 			m_pending[_operation]
      PUSH 2			m_pending[_operation].index
      ADD 			m_pending[_operation].index
      SLOAD 			m_pending[_operation].index
      DUP2 			m_pendingIndex[m_pending[_oper...
      SLOAD 			m_pendingIndex[m_pending[_oper...
      DUP2 			m_pendingIndex[m_pending[_oper...
      LT 			m_pendingIndex[m_pending[_oper...
      ISZERO 			m_pendingIndex[m_pending[_oper...
      ISZERO 			m_pendingIndex[m_pending[_oper...
      PUSH [tag] 193			m_pendingIndex[m_pending[_oper...
      JUMPI 			m_pendingIndex[m_pending[_oper...
      INVALID 			m_pendingIndex[m_pending[_oper...
    tag 193			m_pendingIndex[m_pending[_oper...
      JUMPDEST 			m_pendingIndex[m_pending[_oper...
      SWAP1 			m_pendingIndex[m_pending[_oper...
      PUSH 0			m_pendingIndex[m_pending[_oper...
      MSTORE 			m_pendingIndex[m_pending[_oper...
      PUSH 20			m_pendingIndex[m_pending[_oper...
      PUSH 0			m_pendingIndex[m_pending[_oper...
      KECCAK256 			m_pendingIndex[m_pending[_oper...
      SWAP1 			m_pendingIndex[m_pending[_oper...
      ADD 			m_pendingIndex[m_pending[_oper...
      PUSH 0			delete m_pendingIndex[m_pendin...
      SWAP1 			delete m_pendingIndex[m_pendin...
      SSTORE 			delete m_pendingIndex[m_pendin...
      PUSH 103			m_pending
      PUSH 0			m_pending[_operation]
      DUP7 			_operation
      PUSH 0			m_pending[_operation]
      NOT 			m_pending[_operation]
      AND 			m_pending[_operation]
      PUSH 0			m_pending[_operation]
      NOT 			m_pending[_operation]
      AND 			m_pending[_operation]
      DUP2 			m_pending[_operation]
      MSTORE 			m_pending[_operation]
      PUSH 20			m_pending[_operation]
      ADD 			m_pending[_operation]
      SWAP1 			m_pending[_operation]
      DUP2 			m_pending[_operation]
      MSTORE 			m_pending[_operation]
      PUSH 20			m_pending[_operation]
      ADD 			m_pending[_operation]
      PUSH 0			m_pending[_operation]
      KECCAK256 			m_pending[_operation]
      PUSH 0			m_pending[_operation]
      DUP1 			delete m_pending[_operation]
      DUP3 			delete m_pending[_operation]
      ADD 			delete m_pending[_operation]
      PUSH 0			delete m_pending[_operation]
      SWAP1 			delete m_pending[_operation]
      SSTORE 			delete m_pending[_operation]
      PUSH 1			delete m_pending[_operation]
      DUP3 			delete m_pending[_operation]
      ADD 			delete m_pending[_operation]
      PUSH 0			delete m_pending[_operation]
      SWAP1 			delete m_pending[_operation]
      SSTORE 			delete m_pending[_operation]
      PUSH 2			delete m_pending[_operation]
      DUP3 			delete m_pending[_operation]
      ADD 			delete m_pending[_operation]
      PUSH 0			delete m_pending[_operation]
      SWAP1 			delete m_pending[_operation]
      SSTORE 			delete m_pending[_operation]
      POP 			delete m_pending[_operation]
      POP 			delete m_pending[_operation]
      PUSH 1			true
      SWAP4 			return true
      POP 			return true
      PUSH [tag] 184			return true
      JUMP 			return true
    tag 192			if (pending.yetNeeded == 1) {\...
      JUMPDEST 			if (pending.yetNeeded == 1) {\...
      DUP2 			pending
      PUSH 0			pending.yetNeeded
      ADD 			pending.yetNeeded
      PUSH 0			pending.yetNeeded
      DUP2 			pending.yetNeeded--
      SLOAD 			pending.yetNeeded--
      DUP1 			pending.yetNeeded--
      SWAP3 			pending.yetNeeded--
      SWAP2 			pending.yetNeeded--
      SWAP1 			pending.yetNeeded--
      PUSH 1			pending.yetNeeded--
      SWAP1 			pending.yetNeeded--
      SUB 			pending.yetNeeded--
      SWAP2 			pending.yetNeeded--
      SWAP1 			pending.yetNeeded--
      POP 			pending.yetNeeded--
      SSTORE 			pending.yetNeeded--
      POP 			pending.yetNeeded--
      DUP1 			ownerIndexBit
      DUP3 			pending
      PUSH 1			pending.ownersDone
      ADD 			pending.ownersDone
      PUSH 0			pending.ownersDone
      DUP3 			pending.ownersDone |= ownerInd...
      DUP3 			pending.ownersDone |= ownerInd...
      SLOAD 			pending.ownersDone |= ownerInd...
      OR 			pending.ownersDone |= ownerInd...
      SWAP3 			pending.ownersDone |= ownerInd...
      POP 			pending.ownersDone |= ownerInd...
      POP 			pending.ownersDone |= ownerInd...
      DUP2 			pending.ownersDone |= ownerInd...
      SWAP1 			pending.ownersDone |= ownerInd...
      SSTORE 			pending.ownersDone |= ownerInd...
      POP 			pending.ownersDone |= ownerInd...
    tag 191			if (pending.ownersDone & owner...
      JUMPDEST 			if (pending.ownersDone & owner...
    tag 184			function confirmAndCheck(bytes...
      JUMPDEST 			function confirmAndCheck(bytes...
      POP 			function confirmAndCheck(bytes...
      POP 			function confirmAndCheck(bytes...
      POP 			function confirmAndCheck(bytes...
      SWAP2 			function confirmAndCheck(bytes...
      SWAP1 			function confirmAndCheck(bytes...
      POP 			function confirmAndCheck(bytes...
      JUMP [out]			function confirmAndCheck(bytes...
    tag 87			function clearPending() intern...
      JUMPDEST 			function clearPending() intern...
      PUSH 0			uint length
      DUP1 			uint i
      PUSH 104			m_pendingIndex
      DUP1 			m_pendingIndex.length
      SLOAD 			m_pendingIndex.length
      SWAP1 			m_pendingIndex.length
      POP 			m_pendingIndex.length
      SWAP2 			uint length = m_pendingIndex.l...
      POP 			uint length = m_pendingIndex.l...
      PUSH 0			0
      SWAP1 			uint i = 0
      POP 			uint i = 0
    tag 197			for (uint i = 0; i < length; +...
      JUMPDEST 			for (uint i = 0; i < length; +...
      DUP2 			length
      DUP2 			i
      LT 			i < length
      ISZERO 			for (uint i = 0; i < length; +...
      PUSH [tag] 198			for (uint i = 0; i < length; +...
      JUMPI 			for (uint i = 0; i < length; +...
      PUSH 108			m_txs
      PUSH 0			m_txs[m_pendingIndex[i]]
      PUSH 104			m_pendingIndex
      DUP4 			i
      DUP2 			m_pendingIndex[i]
      SLOAD 			m_pendingIndex[i]
      DUP2 			m_pendingIndex[i]
      LT 			m_pendingIndex[i]
      ISZERO 			m_pendingIndex[i]
      ISZERO 			m_pendingIndex[i]
      PUSH [tag] 200			m_pendingIndex[i]
      JUMPI 			m_pendingIndex[i]
      INVALID 			m_pendingIndex[i]
    tag 200			m_pendingIndex[i]
      JUMPDEST 			m_pendingIndex[i]
      SWAP1 			m_pendingIndex[i]
      PUSH 0			m_pendingIndex[i]
      MSTORE 			m_pendingIndex[i]
      PUSH 20			m_pendingIndex[i]
      PUSH 0			m_pendingIndex[i]
      KECCAK256 			m_pendingIndex[i]
      SWAP1 			m_pendingIndex[i]
      ADD 			m_pendingIndex[i]
      SLOAD 			m_pendingIndex[i]
      PUSH 0			m_txs[m_pendingIndex[i]]
      NOT 			m_txs[m_pendingIndex[i]]
      AND 			m_txs[m_pendingIndex[i]]
      PUSH 0			m_txs[m_pendingIndex[i]]
      NOT 			m_txs[m_pendingIndex[i]]
      AND 			m_txs[m_pendingIndex[i]]
      DUP2 			m_txs[m_pendingIndex[i]]
      MSTORE 			m_txs[m_pendingIndex[i]]
      PUSH 20			m_txs[m_pendingIndex[i]]
      ADD 			m_txs[m_pendingIndex[i]]
      SWAP1 			m_txs[m_pendingIndex[i]]
      DUP2 			m_txs[m_pendingIndex[i]]
      MSTORE 			m_txs[m_pendingIndex[i]]
      PUSH 20			m_txs[m_pendingIndex[i]]
      ADD 			m_txs[m_pendingIndex[i]]
      PUSH 0			m_txs[m_pendingIndex[i]]
      KECCAK256 			m_txs[m_pendingIndex[i]]
      PUSH 0			m_txs[m_pendingIndex[i]]
      DUP1 			delete m_txs[m_pendingIndex[i]...
      DUP3 			delete m_txs[m_pendingIndex[i]...
      ADD 			delete m_txs[m_pendingIndex[i]...
      PUSH 0			delete m_txs[m_pendingIndex[i]...
      PUSH 100			delete m_txs[m_pendingIndex[i]...
      EXP 			delete m_txs[m_pendingIndex[i]...
      DUP2 			delete m_txs[m_pendingIndex[i]...
      SLOAD 			delete m_txs[m_pendingIndex[i]...
      SWAP1 			delete m_txs[m_pendingIndex[i]...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			delete m_txs[m_pendingIndex[i]...
      MUL 			delete m_txs[m_pendingIndex[i]...
      NOT 			delete m_txs[m_pendingIndex[i]...
      AND 			delete m_txs[m_pendingIndex[i]...
      SWAP1 			delete m_txs[m_pendingIndex[i]...
      SSTORE 			delete m_txs[m_pendingIndex[i]...
      PUSH 1			delete m_txs[m_pendingIndex[i]...
      DUP3 			delete m_txs[m_pendingIndex[i]...
      ADD 			delete m_txs[m_pendingIndex[i]...
      PUSH 0			delete m_txs[m_pendingIndex[i]...
      SWAP1 			delete m_txs[m_pendingIndex[i]...
      SSTORE 			delete m_txs[m_pendingIndex[i]...
      PUSH 2			delete m_txs[m_pendingIndex[i]...
      DUP3 			delete m_txs[m_pendingIndex[i]...
      ADD 			delete m_txs[m_pendingIndex[i]...
      PUSH 0			delete m_txs[m_pendingIndex[i]...
      PUSH [tag] 202			delete m_txs[m_pendingIndex[i]...
      SWAP2 			delete m_txs[m_pendingIndex[i]...
      SWAP1 			delete m_txs[m_pendingIndex[i]...
      PUSH [tag] 129			delete m_txs[m_pendingIndex[i]...
      JUMP [in]			delete m_txs[m_pendingIndex[i]...
    tag 202			delete m_txs[m_pendingIndex[i]...
      JUMPDEST 			delete m_txs[m_pendingIndex[i]...
      POP 			delete m_txs[m_pendingIndex[i]...
      POP 			delete m_txs[m_pendingIndex[i]...
      DUP1 			++i
      PUSH 1			++i
      ADD 			++i
      SWAP1 			++i
      POP 			++i
      PUSH [tag] 197			for (uint i = 0; i < length; +...
      JUMP 			for (uint i = 0; i < length; +...
    tag 198			for (uint i = 0; i < length; +...
      JUMPDEST 			for (uint i = 0; i < length; +...
      PUSH [tag] 203			super.clearPending()
      PUSH [tag] 204			super.clearPending
      JUMP [in]			super.clearPending()
    tag 203			super.clearPending()
      JUMPDEST 			super.clearPending()
      POP 			function clearPending() intern...
      POP 			function clearPending() intern...
      JUMP [out]			function clearPending() intern...
    tag 89			function reorganizeOwners() pr...
      JUMPDEST 			function reorganizeOwners() pr...
      PUSH 0			uint free
      PUSH 1			1
      SWAP1 			uint free = 1
      POP 			uint free = 1
    tag 206			while (free < m_numOwners)\n		...
      JUMPDEST 			while (free < m_numOwners)\n		...
      PUSH 1			m_numOwners
      SLOAD 			m_numOwners
      DUP2 			free
      LT 			free < m_numOwners
      ISZERO 			while (free < m_numOwners)\n		...
      PUSH [tag] 207			while (free < m_numOwners)\n		...
      JUMPI 			while (free < m_numOwners)\n		...
    tag 208			while (free < m_numOwners && m...
      JUMPDEST 			while (free < m_numOwners && m...
      PUSH 1			m_numOwners
      SLOAD 			m_numOwners
      DUP2 			free
      LT 			free < m_numOwners
      DUP1 			free < m_numOwners && m_owners...
      ISZERO 			free < m_numOwners && m_owners...
      PUSH [tag] 210			free < m_numOwners && m_owners...
      JUMPI 			free < m_numOwners && m_owners...
      POP 			free < m_numOwners && m_owners...
      PUSH 0			0
      PUSH 2			m_owners
      DUP3 			free
      PUSH 100			m_owners[free]
      DUP2 			m_owners[free]
      LT 			m_owners[free]
      ISZERO 			m_owners[free]
      ISZERO 			m_owners[free]
      PUSH [tag] 211			m_owners[free]
      JUMPI 			m_owners[free]
      INVALID 			m_owners[free]
    tag 211			m_owners[free]
      JUMPDEST 			m_owners[free]
      ADD 			m_owners[free]
      SLOAD 			m_owners[free]
      EQ 			m_owners[free] != 0
      ISZERO 			m_owners[free] != 0
    tag 210			free < m_numOwners && m_owners...
      JUMPDEST 			free < m_numOwners && m_owners...
      ISZERO 			while (free < m_numOwners && m...
      PUSH [tag] 209			while (free < m_numOwners && m...
      JUMPI 			while (free < m_numOwners && m...
      DUP1 			free++
      DUP1 			free++
      PUSH 1			free++
      ADD 			free++
      SWAP2 			free++
      POP 			free++
      POP 			free++
      PUSH [tag] 208			while (free < m_numOwners && m...
      JUMP 			while (free < m_numOwners && m...
    tag 209			while (free < m_numOwners && m...
      JUMPDEST 			while (free < m_numOwners && m...
    tag 213			while (m_numOwners > 1 && m_ow...
      JUMPDEST 			while (m_numOwners > 1 && m_ow...
      PUSH 1			1
      DUP1 			m_numOwners
      SLOAD 			m_numOwners
      GT 			m_numOwners > 1
      DUP1 			m_numOwners > 1 && m_owners[m_...
      ISZERO 			m_numOwners > 1 && m_owners[m_...
      PUSH [tag] 215			m_numOwners > 1 && m_owners[m_...
      JUMPI 			m_numOwners > 1 && m_owners[m_...
      POP 			m_numOwners > 1 && m_owners[m_...
      PUSH 0			0
      PUSH 2			m_owners
      PUSH 1			m_numOwners
      SLOAD 			m_numOwners
      PUSH 100			m_owners[m_numOwners]
      DUP2 			m_owners[m_numOwners]
      LT 			m_owners[m_numOwners]
      ISZERO 			m_owners[m_numOwners]
      ISZERO 			m_owners[m_numOwners]
      PUSH [tag] 216			m_owners[m_numOwners]
      JUMPI 			m_owners[m_numOwners]
      INVALID 			m_owners[m_numOwners]
    tag 216			m_owners[m_numOwners]
      JUMPDEST 			m_owners[m_numOwners]
      ADD 			m_owners[m_numOwners]
      SLOAD 			m_owners[m_numOwners]
      EQ 			m_owners[m_numOwners] == 0
    tag 215			m_numOwners > 1 && m_owners[m_...
      JUMPDEST 			m_numOwners > 1 && m_owners[m_...
      ISZERO 			while (m_numOwners > 1 && m_ow...
      PUSH [tag] 214			while (m_numOwners > 1 && m_ow...
      JUMPI 			while (m_numOwners > 1 && m_ow...
      PUSH 1			m_numOwners
      PUSH 0			m_numOwners
      DUP2 			m_numOwners--
      SLOAD 			m_numOwners--
      DUP1 			m_numOwners--
      SWAP3 			m_numOwners--
      SWAP2 			m_numOwners--
      SWAP1 			m_numOwners--
      PUSH 1			m_numOwners--
      SWAP1 			m_numOwners--
      SUB 			m_numOwners--
      SWAP2 			m_numOwners--
      SWAP1 			m_numOwners--
      POP 			m_numOwners--
      SSTORE 			m_numOwners--
      POP 			m_numOwners--
      PUSH [tag] 213			while (m_numOwners > 1 && m_ow...
      JUMP 			while (m_numOwners > 1 && m_ow...
    tag 214			while (m_numOwners > 1 && m_ow...
      JUMPDEST 			while (m_numOwners > 1 && m_ow...
      PUSH 1			m_numOwners
      SLOAD 			m_numOwners
      DUP2 			free
      LT 			free < m_numOwners
      DUP1 			free < m_numOwners && m_owners...
      ISZERO 			free < m_numOwners && m_owners...
      PUSH [tag] 218			free < m_numOwners && m_owners...
      JUMPI 			free < m_numOwners && m_owners...
      POP 			free < m_numOwners && m_owners...
      PUSH 0			0
      PUSH 2			m_owners
      PUSH 1			m_numOwners
      SLOAD 			m_numOwners
      PUSH 100			m_owners[m_numOwners]
      DUP2 			m_owners[m_numOwners]
      LT 			m_owners[m_numOwners]
      ISZERO 			m_owners[m_numOwners]
      ISZERO 			m_owners[m_numOwners]
      PUSH [tag] 219			m_owners[m_numOwners]
      JUMPI 			m_owners[m_numOwners]
      INVALID 			m_owners[m_numOwners]
    tag 219			m_owners[m_numOwners]
      JUMPDEST 			m_owners[m_numOwners]
      ADD 			m_owners[m_numOwners]
      SLOAD 			m_owners[m_numOwners]
      EQ 			m_owners[m_numOwners] != 0
      ISZERO 			m_owners[m_numOwners] != 0
    tag 218			free < m_numOwners && m_owners...
      JUMPDEST 			free < m_numOwners && m_owners...
      DUP1 			free < m_numOwners && m_owners...
      ISZERO 			free < m_numOwners && m_owners...
      PUSH [tag] 221			free < m_numOwners && m_owners...
      JUMPI 			free < m_numOwners && m_owners...
      POP 			free < m_numOwners && m_owners...
      PUSH 0			0
      PUSH 2			m_owners
      DUP3 			free
      PUSH 100			m_owners[free]
      DUP2 			m_owners[free]
      LT 			m_owners[free]
      ISZERO 			m_owners[free]
      ISZERO 			m_owners[free]
      PUSH [tag] 222			m_owners[free]
      JUMPI 			m_owners[free]
      INVALID 			m_owners[free]
    tag 222			m_owners[free]
      JUMPDEST 			m_owners[free]
      ADD 			m_owners[free]
      SLOAD 			m_owners[free]
      EQ 			m_owners[free] == 0
    tag 221			free < m_numOwners && m_owners...
      JUMPDEST 			free < m_numOwners && m_owners...
      ISZERO 			if (free < m_numOwners && m_ow...
      PUSH [tag] 224			if (free < m_numOwners && m_ow...
      JUMPI 			if (free < m_numOwners && m_ow...
      PUSH 2			m_owners
      PUSH 1			m_numOwners
      SLOAD 			m_numOwners
      PUSH 100			m_owners[m_numOwners]
      DUP2 			m_owners[m_numOwners]
      LT 			m_owners[m_numOwners]
      ISZERO 			m_owners[m_numOwners]
      ISZERO 			m_owners[m_numOwners]
      PUSH [tag] 225			m_owners[m_numOwners]
      JUMPI 			m_owners[m_numOwners]
      INVALID 			m_owners[m_numOwners]
    tag 225			m_owners[m_numOwners]
      JUMPDEST 			m_owners[m_numOwners]
      ADD 			m_owners[m_numOwners]
      SLOAD 			m_owners[m_numOwners]
      PUSH 2			m_owners
      DUP3 			free
      PUSH 100			m_owners[free]
      DUP2 			m_owners[free]
      LT 			m_owners[free]
      ISZERO 			m_owners[free]
      ISZERO 			m_owners[free]
      PUSH [tag] 227			m_owners[free]
      JUMPI 			m_owners[free]
      INVALID 			m_owners[free]
    tag 227			m_owners[free]
      JUMPDEST 			m_owners[free]
      ADD 			m_owners[free]
      DUP2 			m_owners[free] = m_owners[m_nu...
      SWAP1 			m_owners[free] = m_owners[m_nu...
      SSTORE 			m_owners[free] = m_owners[m_nu...
      POP 			m_owners[free] = m_owners[m_nu...
      DUP1 			free
      PUSH 102			m_ownerIndex
      PUSH 0			m_ownerIndex[m_owners[free]]
      PUSH 2			m_owners
      DUP5 			free
      PUSH 100			m_owners[free]
      DUP2 			m_owners[free]
      LT 			m_owners[free]
      ISZERO 			m_owners[free]
      ISZERO 			m_owners[free]
      PUSH [tag] 229			m_owners[free]
      JUMPI 			m_owners[free]
      INVALID 			m_owners[free]
    tag 229			m_owners[free]
      JUMPDEST 			m_owners[free]
      ADD 			m_owners[free]
      SLOAD 			m_owners[free]
      DUP2 			m_ownerIndex[m_owners[free]]
      MSTORE 			m_ownerIndex[m_owners[free]]
      PUSH 20			m_ownerIndex[m_owners[free]]
      ADD 			m_ownerIndex[m_owners[free]]
      SWAP1 			m_ownerIndex[m_owners[free]]
      DUP2 			m_ownerIndex[m_owners[free]]
      MSTORE 			m_ownerIndex[m_owners[free]]
      PUSH 20			m_ownerIndex[m_owners[free]]
      ADD 			m_ownerIndex[m_owners[free]]
      PUSH 0			m_ownerIndex[m_owners[free]]
      KECCAK256 			m_ownerIndex[m_owners[free]]
      DUP2 			m_ownerIndex[m_owners[free]] =...
      SWAP1 			m_ownerIndex[m_owners[free]] =...
      SSTORE 			m_ownerIndex[m_owners[free]] =...
      POP 			m_ownerIndex[m_owners[free]] =...
      PUSH 0			0
      PUSH 2			m_owners
      PUSH 1			m_numOwners
      SLOAD 			m_numOwners
      PUSH 100			m_owners[m_numOwners]
      DUP2 			m_owners[m_numOwners]
      LT 			m_owners[m_numOwners]
      ISZERO 			m_owners[m_numOwners]
      ISZERO 			m_owners[m_numOwners]
      PUSH [tag] 231			m_owners[m_numOwners]
      JUMPI 			m_owners[m_numOwners]
      INVALID 			m_owners[m_numOwners]
    tag 231			m_owners[m_numOwners]
      JUMPDEST 			m_owners[m_numOwners]
      ADD 			m_owners[m_numOwners]
      DUP2 			m_owners[m_numOwners] = 0
      SWAP1 			m_owners[m_numOwners] = 0
      SSTORE 			m_owners[m_numOwners] = 0
      POP 			m_owners[m_numOwners] = 0
    tag 224			if (free < m_numOwners && m_ow...
      JUMPDEST 			if (free < m_numOwners && m_ow...
      PUSH [tag] 206			while (free < m_numOwners)\n		...
      JUMP 			while (free < m_numOwners)\n		...
    tag 207			while (free < m_numOwners)\n		...
      JUMPDEST 			while (free < m_numOwners)\n		...
      POP 			function reorganizeOwners() pr...
      JUMP [out]			function reorganizeOwners() pr...
    tag 119			function create(uint _value, b...
      JUMPDEST 			function create(uint _value, b...
      PUSH 0			address o_addr
      PUSH [tag] 234			doCreate(_value, _code)
      DUP4 			_value
      DUP4 			_code
      PUSH [tag] 235			doCreate
      JUMP [in]			doCreate(_value, _code)
    tag 234			doCreate(_value, _code)
      JUMPDEST 			doCreate(_value, _code)
      SWAP1 			return doCreate(_value, _code)
      POP 			return doCreate(_value, _code)
      SWAP3 			function create(uint _value, b...
      SWAP2 			function create(uint _value, b...
      POP 			function create(uint _value, b...
      POP 			function create(uint _value, b...
      JUMP [out]			function create(uint _value, b...
    tag 140			function underLimit(uint _valu...
      JUMPDEST 			function underLimit(uint _valu...
      PUSH 0			bool
      PUSH [tag] 237			isOwner(msg.sender)
      CALLER 			msg.sender
      PUSH [tag] 28			isOwner
      JUMP [in]			isOwner(msg.sender)
    tag 237			isOwner(msg.sender)
      JUMPDEST 			isOwner(msg.sender)
      ISZERO 			if (isOwner(msg.sender))\n			_
      PUSH [tag] 238			if (isOwner(msg.sender))\n			_
      JUMPI 			if (isOwner(msg.sender))\n			_
      PUSH 107			m_lastDay
      SLOAD 			m_lastDay
      PUSH [tag] 240			today()
      PUSH [tag] 241			today
      JUMP [in]			today()
    tag 240			today()
      JUMPDEST 			today()
      GT 			today() > m_lastDay
      ISZERO 			if (today() > m_lastDay) {\n		...
      PUSH [tag] 242			if (today() > m_lastDay) {\n		...
      JUMPI 			if (today() > m_lastDay) {\n		...
      PUSH 0			0
      PUSH 106			m_spentToday
      DUP2 			m_spentToday = 0
      SWAP1 			m_spentToday = 0
      SSTORE 			m_spentToday = 0
      POP 			m_spentToday = 0
      PUSH [tag] 243			today()
      PUSH [tag] 241			today
      JUMP [in]			today()
    tag 243			today()
      JUMPDEST 			today()
      PUSH 107			m_lastDay
      DUP2 			m_lastDay = today()
      SWAP1 			m_lastDay = today()
      SSTORE 			m_lastDay = today()
      POP 			m_lastDay = today()
    tag 242			if (today() > m_lastDay) {\n		...
      JUMPDEST 			if (today() > m_lastDay) {\n		...
      PUSH 106			m_spentToday
      SLOAD 			m_spentToday
      DUP3 			_value
      PUSH 106			m_spentToday
      SLOAD 			m_spentToday
      ADD 			m_spentToday + _value
      LT 			m_spentToday + _value >= m_spe...
      ISZERO 			m_spentToday + _value >= m_spe...
      DUP1 			m_spentToday + _value >= m_spe...
      ISZERO 			m_spentToday + _value >= m_spe...
      PUSH [tag] 244			m_spentToday + _value >= m_spe...
      JUMPI 			m_spentToday + _value >= m_spe...
      POP 			m_spentToday + _value >= m_spe...
      PUSH 105			m_dailyLimit
      SLOAD 			m_dailyLimit
      DUP3 			_value
      PUSH 106			m_spentToday
      SLOAD 			m_spentToday
      ADD 			m_spentToday + _value
      GT 			m_spentToday + _value <= m_dai...
      ISZERO 			m_spentToday + _value <= m_dai...
    tag 244			m_spentToday + _value >= m_spe...
      JUMPDEST 			m_spentToday + _value >= m_spe...
      ISZERO 			if (m_spentToday + _value >= m...
      PUSH [tag] 245			if (m_spentToday + _value >= m...
      JUMPI 			if (m_spentToday + _value >= m...
      DUP2 			_value
      PUSH 106			m_spentToday
      PUSH 0			m_spentToday
      DUP3 			m_spentToday += _value
      DUP3 			m_spentToday += _value
      SLOAD 			m_spentToday += _value
      ADD 			m_spentToday += _value
      SWAP3 			m_spentToday += _value
      POP 			m_spentToday += _value
      POP 			m_spentToday += _value
      DUP2 			m_spentToday += _value
      SWAP1 			m_spentToday += _value
      SSTORE 			m_spentToday += _value
      POP 			m_spentToday += _value
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      PUSH [tag] 239			return true
      JUMP 			return true
    tag 245			if (m_spentToday + _value >= m...
      JUMPDEST 			if (m_spentToday + _value >= m...
      PUSH 0			false
      SWAP1 			return false
      POP 			return false
    tag 239			_
      JUMPDEST 			_
    tag 238			if (isOwner(msg.sender))\n			_
      JUMPDEST 			if (isOwner(msg.sender))\n			_
      SWAP2 			function underLimit(uint _valu...
      SWAP1 			function underLimit(uint _valu...
      POP 			function underLimit(uint _valu...
      JUMP [out]			function underLimit(uint _valu...
    tag 204			function clearPending() intern...
      JUMPDEST 			function clearPending() intern...
      PUSH 0			uint length
      DUP1 			uint i
      PUSH 104			m_pendingIndex
      DUP1 			m_pendingIndex.length
      SLOAD 			m_pendingIndex.length
      SWAP1 			m_pendingIndex.length
      POP 			m_pendingIndex.length
      SWAP2 			uint length = m_pendingIndex.l...
      POP 			uint length = m_pendingIndex.l...
      PUSH 0			0
      SWAP1 			uint i = 0
      POP 			uint i = 0
    tag 247			for (uint i = 0; i < length; +...
      JUMPDEST 			for (uint i = 0; i < length; +...
      DUP2 			length
      DUP2 			i
      LT 			i < length
      ISZERO 			for (uint i = 0; i < length; +...
      PUSH [tag] 248			for (uint i = 0; i < length; +...
      JUMPI 			for (uint i = 0; i < length; +...
      PUSH 0			0
      PUSH 1			m_pendingIndex[i] != 0
      MUL 			m_pendingIndex[i] != 0
      PUSH 104			m_pendingIndex
      DUP3 			i
      DUP2 			m_pendingIndex[i]
      SLOAD 			m_pendingIndex[i]
      DUP2 			m_pendingIndex[i]
      LT 			m_pendingIndex[i]
      ISZERO 			m_pendingIndex[i]
      ISZERO 			m_pendingIndex[i]
      PUSH [tag] 250			m_pendingIndex[i]
      JUMPI 			m_pendingIndex[i]
      INVALID 			m_pendingIndex[i]
    tag 250			m_pendingIndex[i]
      JUMPDEST 			m_pendingIndex[i]
      SWAP1 			m_pendingIndex[i]
      PUSH 0			m_pendingIndex[i]
      MSTORE 			m_pendingIndex[i]
      PUSH 20			m_pendingIndex[i]
      PUSH 0			m_pendingIndex[i]
      KECCAK256 			m_pendingIndex[i]
      SWAP1 			m_pendingIndex[i]
      ADD 			m_pendingIndex[i]
      SLOAD 			m_pendingIndex[i]
      PUSH 0			m_pendingIndex[i] != 0
      NOT 			m_pendingIndex[i] != 0
      AND 			m_pendingIndex[i] != 0
      EQ 			m_pendingIndex[i] != 0
      ISZERO 			m_pendingIndex[i] != 0
      ISZERO 			if (m_pendingIndex[i] != 0)\n	...
      PUSH [tag] 252			if (m_pendingIndex[i] != 0)\n	...
      JUMPI 			if (m_pendingIndex[i] != 0)\n	...
      PUSH 103			m_pending
      PUSH 0			m_pending[m_pendingIndex[i]]
      PUSH 104			m_pendingIndex
      DUP4 			i
      DUP2 			m_pendingIndex[i]
      SLOAD 			m_pendingIndex[i]
      DUP2 			m_pendingIndex[i]
      LT 			m_pendingIndex[i]
      ISZERO 			m_pendingIndex[i]
      ISZERO 			m_pendingIndex[i]
      PUSH [tag] 253			m_pendingIndex[i]
      JUMPI 			m_pendingIndex[i]
      INVALID 			m_pendingIndex[i]
    tag 253			m_pendingIndex[i]
      JUMPDEST 			m_pendingIndex[i]
      SWAP1 			m_pendingIndex[i]
      PUSH 0			m_pendingIndex[i]
      MSTORE 			m_pendingIndex[i]
      PUSH 20			m_pendingIndex[i]
      PUSH 0			m_pendingIndex[i]
      KECCAK256 			m_pendingIndex[i]
      SWAP1 			m_pendingIndex[i]
      ADD 			m_pendingIndex[i]
      SLOAD 			m_pendingIndex[i]
      PUSH 0			m_pending[m_pendingIndex[i]]
      NOT 			m_pending[m_pendingIndex[i]]
      AND 			m_pending[m_pendingIndex[i]]
      PUSH 0			m_pending[m_pendingIndex[i]]
      NOT 			m_pending[m_pendingIndex[i]]
      AND 			m_pending[m_pendingIndex[i]]
      DUP2 			m_pending[m_pendingIndex[i]]
      MSTORE 			m_pending[m_pendingIndex[i]]
      PUSH 20			m_pending[m_pendingIndex[i]]
      ADD 			m_pending[m_pendingIndex[i]]
      SWAP1 			m_pending[m_pendingIndex[i]]
      DUP2 			m_pending[m_pendingIndex[i]]
      MSTORE 			m_pending[m_pendingIndex[i]]
      PUSH 20			m_pending[m_pendingIndex[i]]
      ADD 			m_pending[m_pendingIndex[i]]
      PUSH 0			m_pending[m_pendingIndex[i]]
      KECCAK256 			m_pending[m_pendingIndex[i]]
      PUSH 0			m_pending[m_pendingIndex[i]]
      DUP1 			delete m_pending[m_pendingInde...
      DUP3 			delete m_pending[m_pendingInde...
      ADD 			delete m_pending[m_pendingInde...
      PUSH 0			delete m_pending[m_pendingInde...
      SWAP1 			delete m_pending[m_pendingInde...
      SSTORE 			delete m_pending[m_pendingInde...
      PUSH 1			delete m_pending[m_pendingInde...
      DUP3 			delete m_pending[m_pendingInde...
      ADD 			delete m_pending[m_pendingInde...
      PUSH 0			delete m_pending[m_pendingInde...
      SWAP1 			delete m_pending[m_pendingInde...
      SSTORE 			delete m_pending[m_pendingInde...
      PUSH 2			delete m_pending[m_pendingInde...
      DUP3 			delete m_pending[m_pendingInde...
      ADD 			delete m_pending[m_pendingInde...
      PUSH 0			delete m_pending[m_pendingInde...
      SWAP1 			delete m_pending[m_pendingInde...
      SSTORE 			delete m_pending[m_pendingInde...
      POP 			delete m_pending[m_pendingInde...
      POP 			delete m_pending[m_pendingInde...
    tag 252			if (m_pendingIndex[i] != 0)\n	...
      JUMPDEST 			if (m_pendingIndex[i] != 0)\n	...
      DUP1 			++i
      PUSH 1			++i
      ADD 			++i
      SWAP1 			++i
      POP 			++i
      PUSH [tag] 247			for (uint i = 0; i < length; +...
      JUMP 			for (uint i = 0; i < length; +...
    tag 248			for (uint i = 0; i < length; +...
      JUMPDEST 			for (uint i = 0; i < length; +...
      PUSH 104			m_pendingIndex
      PUSH 0			m_pendingIndex
      PUSH [tag] 255			delete m_pendingIndex
      SWAP2 			delete m_pendingIndex
      SWAP1 			delete m_pendingIndex
      PUSH [tag] 256			delete m_pendingIndex
      JUMP [in]			delete m_pendingIndex
    tag 255			delete m_pendingIndex
      JUMPDEST 			delete m_pendingIndex
      POP 			function clearPending() intern...
      POP 			function clearPending() intern...
      JUMP [out]			function clearPending() intern...
    tag 235			function doCreate(uint _value,...
      JUMPDEST 			function doCreate(uint _value,...
      PUSH 0			address o_addr
      DUP1 			bool failed
      DUP3 			_code
      MLOAD 			mload
      PUSH 20			0x20
      DUP5 			_code
      ADD 			add
      DUP6 			_value
      CREATE 			create
      SWAP2 			o_addr := create(_value, add(_...
      POP 			o_addr := create(_value, add(_...
      DUP2 			o_addr
      EXTCODESIZE 			extcodesize
      ISZERO 			iszero
      SWAP1 			failed := iszero(extcodesize(o...
      POP 			failed := iszero(extcodesize(o...
      DUP1 			failed
      ISZERO 			!failed
      ISZERO 			require(!failed)
      ISZERO 			require(!failed)
      PUSH [tag] 258			require(!failed)
      JUMPI 			require(!failed)
      PUSH 0			require(!failed)
      DUP1 			require(!failed)
      REVERT 			require(!failed)
    tag 258			require(!failed)
      JUMPDEST 			require(!failed)
      POP 			function doCreate(uint _value,...
      SWAP3 			function doCreate(uint _value,...
      SWAP2 			function doCreate(uint _value,...
      POP 			function doCreate(uint _value,...
      POP 			function doCreate(uint _value,...
      JUMP [out]			function doCreate(uint _value,...
    tag 241			function today() private const...
      JUMPDEST 			function today() private const...
      PUSH 0			uint
      PUSH 15180			1 days
      TIMESTAMP 			now
      DUP2 			now / 1 days
      ISZERO 			now / 1 days
      ISZERO 			now / 1 days
      PUSH [tag] 260			now / 1 days
      JUMPI 			now / 1 days
      INVALID 			now / 1 days
    tag 260			now / 1 days
      JUMPDEST 			now / 1 days
      DIV 			now / 1 days
      SWAP1 			return now / 1 days
      POP 			return now / 1 days
      SWAP1 			function today() private const...
      JUMP [out]			function today() private const...
    tag 129			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      POP 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      SLOAD 			contract Wallet is multisig, m...
      PUSH 1			contract Wallet is multisig, m...
      DUP2 			contract Wallet is multisig, m...
      PUSH 1			contract Wallet is multisig, m...
      AND 			contract Wallet is multisig, m...
      ISZERO 			contract Wallet is multisig, m...
      PUSH 100			contract Wallet is multisig, m...
      MUL 			contract Wallet is multisig, m...
      SUB 			contract Wallet is multisig, m...
      AND 			contract Wallet is multisig, m...
      PUSH 2			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      DIV 			contract Wallet is multisig, m...
      PUSH 0			contract Wallet is multisig, m...
      DUP3 			contract Wallet is multisig, m...
      SSTORE 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      PUSH 1F			contract Wallet is multisig, m...
      LT 			contract Wallet is multisig, m...
      PUSH [tag] 262			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      POP 			contract Wallet is multisig, m...
      PUSH [tag] 261			contract Wallet is multisig, m...
      JUMP 			contract Wallet is multisig, m...
    tag 262			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      PUSH 1F			contract Wallet is multisig, m...
      ADD 			contract Wallet is multisig, m...
      PUSH 20			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      DIV 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      PUSH 0			contract Wallet is multisig, m...
      MSTORE 			contract Wallet is multisig, m...
      PUSH 20			contract Wallet is multisig, m...
      PUSH 0			contract Wallet is multisig, m...
      KECCAK256 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      DUP2 			contract Wallet is multisig, m...
      ADD 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      PUSH [tag] 263			contract Wallet is multisig, m...
      SWAP2 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      PUSH [tag] 264			contract Wallet is multisig, m...
      JUMP [in]			contract Wallet is multisig, m...
    tag 263			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
    tag 261			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      POP 			contract Wallet is multisig, m...
      JUMP [out]			contract Wallet is multisig, m...
    tag 152			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      DUP3 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      SLOAD 			contract Wallet is multisig, m...
      PUSH 1			contract Wallet is multisig, m...
      DUP2 			contract Wallet is multisig, m...
      PUSH 1			contract Wallet is multisig, m...
      AND 			contract Wallet is multisig, m...
      ISZERO 			contract Wallet is multisig, m...
      PUSH 100			contract Wallet is multisig, m...
      MUL 			contract Wallet is multisig, m...
      SUB 			contract Wallet is multisig, m...
      AND 			contract Wallet is multisig, m...
      PUSH 2			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      DIV 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      PUSH 0			contract Wallet is multisig, m...
      MSTORE 			contract Wallet is multisig, m...
      PUSH 20			contract Wallet is multisig, m...
      PUSH 0			contract Wallet is multisig, m...
      KECCAK256 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      PUSH 1F			contract Wallet is multisig, m...
      ADD 			contract Wallet is multisig, m...
      PUSH 20			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      DIV 			contract Wallet is multisig, m...
      DUP2 			contract Wallet is multisig, m...
      ADD 			contract Wallet is multisig, m...
      SWAP3 			contract Wallet is multisig, m...
      DUP3 			contract Wallet is multisig, m...
      PUSH 1F			contract Wallet is multisig, m...
      LT 			contract Wallet is multisig, m...
      PUSH [tag] 266			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      CALLDATALOAD 			contract Wallet is multisig, m...
      PUSH FF			contract Wallet is multisig, m...
      NOT 			contract Wallet is multisig, m...
      AND 			contract Wallet is multisig, m...
      DUP4 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      ADD 			contract Wallet is multisig, m...
      OR 			contract Wallet is multisig, m...
      DUP6 			contract Wallet is multisig, m...
      SSTORE 			contract Wallet is multisig, m...
      PUSH [tag] 265			contract Wallet is multisig, m...
      JUMP 			contract Wallet is multisig, m...
    tag 266			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      DUP3 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      ADD 			contract Wallet is multisig, m...
      PUSH 1			contract Wallet is multisig, m...
      ADD 			contract Wallet is multisig, m...
      DUP6 			contract Wallet is multisig, m...
      SSTORE 			contract Wallet is multisig, m...
      DUP3 			contract Wallet is multisig, m...
      ISZERO 			contract Wallet is multisig, m...
      PUSH [tag] 265			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      SWAP2 			contract Wallet is multisig, m...
      DUP3 			contract Wallet is multisig, m...
      ADD 			contract Wallet is multisig, m...
    tag 267			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      DUP3 			contract Wallet is multisig, m...
      DUP2 			contract Wallet is multisig, m...
      GT 			contract Wallet is multisig, m...
      ISZERO 			contract Wallet is multisig, m...
      PUSH [tag] 268			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP3 			contract Wallet is multisig, m...
      CALLDATALOAD 			contract Wallet is multisig, m...
      DUP3 			contract Wallet is multisig, m...
      SSTORE 			contract Wallet is multisig, m...
      SWAP2 			contract Wallet is multisig, m...
      PUSH 20			contract Wallet is multisig, m...
      ADD 			contract Wallet is multisig, m...
      SWAP2 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      PUSH 1			contract Wallet is multisig, m...
      ADD 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      PUSH [tag] 267			contract Wallet is multisig, m...
      JUMP 			contract Wallet is multisig, m...
    tag 268			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
    tag 265			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      POP 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      POP 			contract Wallet is multisig, m...
      PUSH [tag] 269			contract Wallet is multisig, m...
      SWAP2 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      PUSH [tag] 264			contract Wallet is multisig, m...
      JUMP [in]			contract Wallet is multisig, m...
    tag 269			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      POP 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      JUMP [out]			contract Wallet is multisig, m...
    tag 188			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      DUP2 			contract Wallet is multisig, m...
      SLOAD 			contract Wallet is multisig, m...
      DUP2 			contract Wallet is multisig, m...
      DUP4 			contract Wallet is multisig, m...
      SSTORE 			contract Wallet is multisig, m...
      DUP2 			contract Wallet is multisig, m...
      DUP2 			contract Wallet is multisig, m...
      ISZERO 			contract Wallet is multisig, m...
      GT 			contract Wallet is multisig, m...
      PUSH [tag] 270			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      DUP2 			contract Wallet is multisig, m...
      DUP4 			contract Wallet is multisig, m...
      PUSH 0			contract Wallet is multisig, m...
      MSTORE 			contract Wallet is multisig, m...
      PUSH 20			contract Wallet is multisig, m...
      PUSH 0			contract Wallet is multisig, m...
      KECCAK256 			contract Wallet is multisig, m...
      SWAP2 			contract Wallet is multisig, m...
      DUP3 			contract Wallet is multisig, m...
      ADD 			contract Wallet is multisig, m...
      SWAP2 			contract Wallet is multisig, m...
      ADD 			contract Wallet is multisig, m...
      PUSH [tag] 271			contract Wallet is multisig, m...
      SWAP2 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      PUSH [tag] 272			contract Wallet is multisig, m...
      JUMP [in]			contract Wallet is multisig, m...
    tag 271			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
    tag 270			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      POP 			contract Wallet is multisig, m...
      POP 			contract Wallet is multisig, m...
      POP 			contract Wallet is multisig, m...
      JUMP [out]			contract Wallet is multisig, m...
    tag 256			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      POP 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      SLOAD 			contract Wallet is multisig, m...
      PUSH 0			contract Wallet is multisig, m...
      DUP3 			contract Wallet is multisig, m...
      SSTORE 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      PUSH 0			contract Wallet is multisig, m...
      MSTORE 			contract Wallet is multisig, m...
      PUSH 20			contract Wallet is multisig, m...
      PUSH 0			contract Wallet is multisig, m...
      KECCAK256 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      DUP2 			contract Wallet is multisig, m...
      ADD 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      PUSH [tag] 274			contract Wallet is multisig, m...
      SWAP2 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      PUSH [tag] 272			contract Wallet is multisig, m...
      JUMP [in]			contract Wallet is multisig, m...
    tag 274			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      POP 			contract Wallet is multisig, m...
      JUMP [out]			contract Wallet is multisig, m...
    tag 264			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      PUSH [tag] 275			contract Wallet is multisig, m...
      SWAP2 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
    tag 276			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      DUP3 			contract Wallet is multisig, m...
      GT 			contract Wallet is multisig, m...
      ISZERO 			contract Wallet is multisig, m...
      PUSH [tag] 277			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      PUSH 0			contract Wallet is multisig, m...
      DUP2 			contract Wallet is multisig, m...
      PUSH 0			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      SSTORE 			contract Wallet is multisig, m...
      POP 			contract Wallet is multisig, m...
      PUSH 1			contract Wallet is multisig, m...
      ADD 			contract Wallet is multisig, m...
      PUSH [tag] 276			contract Wallet is multisig, m...
      JUMP 			contract Wallet is multisig, m...
    tag 277			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      POP 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      JUMP 			contract Wallet is multisig, m...
    tag 275			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      JUMP [out]			contract Wallet is multisig, m...
    tag 272			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      PUSH [tag] 278			contract Wallet is multisig, m...
      SWAP2 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
    tag 279			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      DUP1 			contract Wallet is multisig, m...
      DUP3 			contract Wallet is multisig, m...
      GT 			contract Wallet is multisig, m...
      ISZERO 			contract Wallet is multisig, m...
      PUSH [tag] 280			contract Wallet is multisig, m...
      JUMPI 			contract Wallet is multisig, m...
      PUSH 0			contract Wallet is multisig, m...
      DUP2 			contract Wallet is multisig, m...
      PUSH 0			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      SSTORE 			contract Wallet is multisig, m...
      POP 			contract Wallet is multisig, m...
      PUSH 1			contract Wallet is multisig, m...
      ADD 			contract Wallet is multisig, m...
      PUSH [tag] 279			contract Wallet is multisig, m...
      JUMP 			contract Wallet is multisig, m...
    tag 280			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      POP 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      JUMP 			contract Wallet is multisig, m...
    tag 278			contract Wallet is multisig, m...
      JUMPDEST 			contract Wallet is multisig, m...
      SWAP1 			contract Wallet is multisig, m...
      JUMP [out]			contract Wallet is multisig, m...
    .data